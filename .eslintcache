[{"/Users/mac/Desktop/customer_portal_cls/locks&keys_frontend/src/index.tsx":"1","/Users/mac/Desktop/customer_portal_cls/locks&keys_frontend/src/reportWebVitals.ts":"2","/Users/mac/Desktop/customer_portal_cls/locks&keys_frontend/src/App.tsx":"3","/Users/mac/Desktop/customer_portal_cls/locks&keys_frontend/src/component/NotFound.tsx":"4","/Users/mac/Desktop/customer_portal_cls/locks&keys_frontend/src/component/footer/Footer.tsx":"5","/Users/mac/Desktop/customer_portal_cls/locks&keys_frontend/src/component/login/Login.tsx":"6","/Users/mac/Desktop/customer_portal_cls/locks&keys_frontend/src/component/login/CreateAccount.tsx":"7","/Users/mac/Desktop/customer_portal_cls/locks&keys_frontend/src/component/login/ChangePassword.tsx":"8","/Users/mac/Desktop/customer_portal_cls/locks&keys_frontend/src/component/login/Forget.tsx":"9","/Users/mac/Desktop/customer_portal_cls/locks&keys_frontend/src/component/login/ResetPassword.tsx":"10","/Users/mac/Desktop/customer_portal_cls/locks&keys_frontend/src/component/header/Header.tsx":"11","/Users/mac/Desktop/customer_portal_cls/locks&keys_frontend/src/component/header/Home.tsx":"12","/Users/mac/Desktop/customer_portal_cls/locks&keys_frontend/src/api/api.tsx":"13","/Users/mac/Desktop/customer_portal_cls/locks&keys_frontend/src/component/sidebar/Dashboard.tsx":"14","/Users/mac/Desktop/customer_portal_cls/locks&keys_frontend/src/component/sidebar/AuditReport.tsx":"15","/Users/mac/Desktop/customer_portal_cls/locks&keys_frontend/src/component/sidebar/Sidebarr.tsx":"16","/Users/mac/Desktop/customer_portal_cls/locks&keys_frontend/src/component/sidebar/CompanyDetails.tsx":"17","/Users/mac/Desktop/customer_portal_cls/locks&keys_frontend/src/component/sidebar/UserInformation.tsx":"18","/Users/mac/Desktop/customer_portal_cls/locks&keys_frontend/src/component/sidebar/ManageUser.tsx":"19","/Users/mac/Desktop/customer_portal_cls/locks&keys_frontend/src/component/sidebar/ViewKeys.tsx":"20","/Users/mac/Desktop/customer_portal_cls/locks&keys_frontend/src/component/sidebar/EditUserInformation.tsx":"21","/Users/mac/Desktop/customer_portal_cls/locks&keys_frontend/src/component/sidebar/ViewKeysDetails.tsx":"22","/Users/mac/Desktop/customer_portal_cls/locks&keys_frontend/src/component/sidebar/AddNewUser.tsx":"23","/Users/mac/Desktop/customer_portal_cls/locks&keys_frontend/src/component/sidebar/Accounting.tsx":"24","/Users/mac/Desktop/customer_portal_cls/locks&keys_frontend/src/component/sidebar/Quotations.tsx":"25","/Users/mac/Desktop/customer_portal_cls/locks&keys_frontend/src/component/sidebar/CompanyDetailsSummary.tsx":"26","/Users/mac/Desktop/customer_portal_cls/locks&keys_frontend/src/component/sidebar/ServiceRequest.tsx":"27","/Users/mac/Desktop/customer_portal_cls/locks&keys_frontend/src/component/sidebar/SystemNumber.tsx":"28","/Users/mac/Desktop/customer_portal_cls/locks&keys_frontend/src/component/sidebar/KeyRequest.tsx":"29","/Users/mac/Desktop/customer_portal_cls/locks&keys_frontend/src/component/sidebar/AccountingDetails.tsx":"30","/Users/mac/Desktop/customer_portal_cls/locks&keys_frontend/src/component/sidebar/QuotationDetails.tsx":"31","/Users/mac/Desktop/customer_portal_cls/locks&keys_frontend/src/component/sidebar/Payement/Payment.tsx":"32"},{"size":540,"mtime":1609840272000,"results":"33","hashOfConfig":"34"},{"size":425,"mtime":1607432850000,"results":"35","hashOfConfig":"34"},{"size":2738,"mtime":1615456608879,"results":"36","hashOfConfig":"34"},{"size":197,"mtime":1614170458000,"results":"37","hashOfConfig":"34"},{"size":487,"mtime":1612526924000,"results":"38","hashOfConfig":"34"},{"size":9603,"mtime":1614343556000,"results":"39","hashOfConfig":"34"},{"size":9386,"mtime":1614343434000,"results":"40","hashOfConfig":"34"},{"size":6755,"mtime":1614343422000,"results":"41","hashOfConfig":"34"},{"size":4408,"mtime":1614236462000,"results":"42","hashOfConfig":"34"},{"size":3841,"mtime":1614236526000,"results":"43","hashOfConfig":"34"},{"size":1897,"mtime":1608788402000,"results":"44","hashOfConfig":"34"},{"size":235,"mtime":1607581826000,"results":"45","hashOfConfig":"34"},{"size":1536,"mtime":1614241682000,"results":"46","hashOfConfig":"34"},{"size":2972,"mtime":1614351640000,"results":"47","hashOfConfig":"34"},{"size":8979,"mtime":1614235338000,"results":"48","hashOfConfig":"34"},{"size":5006,"mtime":1615456304564,"results":"49","hashOfConfig":"34"},{"size":4435,"mtime":1614252202000,"results":"50","hashOfConfig":"34"},{"size":2340,"mtime":1609514964000,"results":"51","hashOfConfig":"34"},{"size":20506,"mtime":1614344218000,"results":"52","hashOfConfig":"34"},{"size":16922,"mtime":1614250360000,"results":"53","hashOfConfig":"34"},{"size":2672,"mtime":1608204226000,"results":"54","hashOfConfig":"34"},{"size":9494,"mtime":1614236318000,"results":"55","hashOfConfig":"34"},{"size":14649,"mtime":1614344866000,"results":"56","hashOfConfig":"34"},{"size":32789,"mtime":1615452234378,"results":"57","hashOfConfig":"34"},{"size":10729,"mtime":1614250312000,"results":"58","hashOfConfig":"34"},{"size":1770,"mtime":1608101024000,"results":"59","hashOfConfig":"34"},{"size":10664,"mtime":1614342976000,"results":"60","hashOfConfig":"34"},{"size":6030,"mtime":1614252250000,"results":"61","hashOfConfig":"34"},{"size":22264,"mtime":1614235982000,"results":"62","hashOfConfig":"34"},{"size":11491,"mtime":1614252896000,"results":"63","hashOfConfig":"34"},{"size":9263,"mtime":1614236058000,"results":"64","hashOfConfig":"34"},{"size":15230,"mtime":1613994192000,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"a6p7rn",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"68"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"68"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"68"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"68"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"68"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"68"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"68"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"68"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"68"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"68"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"68"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"68"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"68"},"/Users/mac/Desktop/customer_portal_cls/locks&keys_frontend/src/index.tsx",[],["144","145"],"/Users/mac/Desktop/customer_portal_cls/locks&keys_frontend/src/reportWebVitals.ts",[],"/Users/mac/Desktop/customer_portal_cls/locks&keys_frontend/src/App.tsx",["146"],"/Users/mac/Desktop/customer_portal_cls/locks&keys_frontend/src/component/NotFound.tsx",[],"/Users/mac/Desktop/customer_portal_cls/locks&keys_frontend/src/component/footer/Footer.tsx",[],"/Users/mac/Desktop/customer_portal_cls/locks&keys_frontend/src/component/login/Login.tsx",["147","148","149","150"],"import { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axiosInstance from '../../api/api';\nimport { Toast } from 'primereact/toast';\nimport { useRef } from 'react';\nimport './Login.css';\nimport FadeLoader from \"react-spinners/FadeLoader\";\nimport { css } from \"@emotion/core\";\nimport ReactTooltip from 'react-tooltip';\nimport info from '../icons/info.svg';\n\nconst validEmailRegex = RegExp(\n    /^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i\n  );\n\n  const override = css`\n  margin: 0 auto;\n  border-color: red;\n  background-color: transparent;\n  top:35%;\n  margin-left:-15%;\n`;\n  \n\nlet Login=()=> {\n    let history = useHistory()\n    const mytoast:any = useRef(null);\n\n    const initialFormData = Object.freeze({\n\t\temail: '',\n        password: '',\n    });\n    const [formData, setFormData] = useState<any>(initialFormData);\n    const [errorEmail, setErrorEmail] = useState('');\n    const [errorPassword, setErrorPassword] = useState('');\n    let [loading, setLoading] = useState<any>(false);\n    const [remember, setRemember] = useState<any>(false);\n\n    const handleInputChange = (e: { target: { name: any; value: any; }; }) =>{\n        let name = e.target.name;\n        let value = e.target.value;\n        setFormData({...formData,[name]:value});\n    };\n    \n    useEffect(()=>{\n        if(localStorage.getItem('email')!==''){\n        setFormData({...formData, email: localStorage.getItem('email'), password : localStorage.getItem('password')});\n        }\n    },[]) \n\n    const formValidation = () =>{\n        let errorEmail = '';\n        let errorPassword = '';\n        let isValid = true;\n\n         if(formData.email === ''){\n            errorEmail = '* Please enter a email address';\n            isValid = false;\n         }else\n         if(!validEmailRegex.test(formData.email)){\n            errorEmail = '* Please enter a valid email address';\n            isValid = false ;\n        }\n            \n        let lowerCaseLetters = /[a-z]/g;\n        let upperCaseLetters = /[A-Z]/g;\n        let numbers = /[0-9]/g;\n        let specialcharacter = /[!@#\\$%\\^&\\*]/g;\n        if(formData.password === ''){\n            errorPassword = '* Please enter a password';\n        }else if(!(formData.password.trim().length >= 8 && formData.password.match(numbers) && formData.password.match(lowerCaseLetters) && formData.password.match(upperCaseLetters) && formData.password.match(specialcharacter))){\n            errorPassword = '* Please enter a valid password format';\n            isValid = false;\n        }\n        setErrorEmail(errorEmail);\n        setErrorPassword(errorPassword);\n        return isValid\n    }\n\n    const handleSubmit = (e:any) => {\n        e.preventDefault();\n        let isValid = formValidation();\n        if(isValid){\n            axiosInstance\n\t\t\t.post(`/api/customer/login/`, {\n\t\t\t\temail: formData.email,\n                password: formData.password,\n\t\t\t})\n\t\t\t.then((res) => {\n                if(remember===true){\n                    localStorage.setItem('email', formData.email );\n                    localStorage.setItem('password', formData.password );\n                    localStorage.setItem('remember', remember);\n                }   else if(remember===false){\n                    localStorage.removeItem('email');\n                    localStorage.removeItem('password');\n                    localStorage.removeItem('remember');\n                }\n\n                if(res.data.is_active)\n                {  \n                    localStorage.setItem('access_token', res.data.access);\n                    localStorage.setItem('refresh_token', res.data.refresh);\n                    localStorage.setItem('username', res.data.username);\n                    localStorage.setItem('invoice', res.data.user_access.inv_statements);\n                    localStorage.setItem('quotes', res.data.user_access.quotes);\n                    localStorage.setItem('service_request', res.data.user_access.service_request);\n                    localStorage.setItem('key_finder', res.data.user_access.key_finder);\n                    localStorage.setItem('audit', res.data.user_access.audit);\n                    localStorage.setItem('user_type', res.data.user_type);\n                    axiosInstance.defaults.headers['Authorization'] =\n                        'JWT ' + localStorage.getItem('access_token');\n                       setLoading(false);\n                    if(res.data.user_type===\"primary\"){\n                        if(res.data.user_access.inv_statements || res.data.user_access.quotes){\n                            history.push(\"/home/accounting\");\n                        }else {\n                            history.push(\"/home/companydetails\");\n                        }\n                        \n                    }else if(res.data.user_type==='additional'){\n                        if(res.data.last_login==null){\n                            history.push(\"/changepassword\");\n                        }else {\n                            if(res.data.user_access.inv_statements || res.data.user_access.quotes){\n                                history.push(\"/home/accounting\");\n                              }else {\n                                history.push(\"/home/companydetails\");\n                              }\n                        }\n                    }\n                }else {\n                    mytoast.current.show({severity: 'error', detail: 'You are Disabled from primary user'});\n                }\n            })\n            .catch((error)=>{\n                mytoast.current.show({severity: 'error', detail: 'Wrong email or password'});\n                setLoading(false);\n            })\n            setLoading(true);\n\n        }\n         \n    }\n\n    function reset() {\n        history.push(`/forgot`);\n       }\n    function login() {\n        history.push(`/createaccount`);\n       }\n      return (\n          <>\n        <div>\n        {\n            loading ? <div className='overlay-box1' style={{margin:0}}>\n            <FadeLoader css={override} color={\"rgb(0, 158, 214)\"} loading={loading}  height={30} width={5} radius={2} margin={20} />\n         </div> :''\n        }\n        <Toast ref={mytoast} />\n        <ReactTooltip id=\"required\"effect=\"solid\" place=\"bottom\" >\n           \"Password should be minimum 8 characters with atleast one uppercase, one lowercase, one special character and one numeric value\"\n        </ReactTooltip>\n        </div>\n        <div >\n            \n            <div className=\"d-flex justify-content-center own-login-container\">\n            \n            <form onSubmit={handleSubmit} style={{marginTop:\"4.375rem\"}} noValidate>\n                <div>\n                  <label style={{fontSize:\"1.875rem\",textAlign:\"center\",marginBottom:\"1.563rem\"}}>Welcome</label>\n                </div>\n                <div className=\"form-group\">\n                    <input name=\"email\" style={{width:\"22.063rem\",height:\"2.5rem\"}} type=\"email\" className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Email ID\" value={formData.email} onChange={handleInputChange}  required/>\n                    <span className=\"errorMessage\">{errorEmail}</span>\n                </div>\n                <div className=\"form-group\">\n                    <div className=\"row\" style={{marginLeft:\"0px\"}}>\n                        <input name=\"password\"  style={{width:\"22.063rem\",height:\"2.5rem\",paddingRight:'35px'}} type=\"password\" className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"Password\" value={formData.password} onChange={handleInputChange} required/>\n                        <img alt=\"info\" data-for=\"required\" data-tip=\"required\" style={{cursor:\"pointer\", width:'1.25rem',padding:'0px',marginLeft:'-1.875rem'}} src={info}/>\n                    </div>\n                    <span className=\"errorMessage\">{errorPassword}</span>\n                </div>\n                <div style={{display:\"flex\"}} >\n                    <div className=\"form-group\">\n                        <div className=\"form-check\">\n                            <input style={{height:\"1.125rem\",width:\"1.125rem\",marginLeft:\"-2.5rem\" ,cursor:'pointer'}} className=\"form-check-input\" name='remember' type=\"checkbox\" id=\"gridCheck\" checked={remember} onChange={(e)=>{setRemember(e.target.checked)}}/>\n                            <label style={{marginLeft:\"-0.625rem\",paddingTop:'0.125rem',cursor:'pointer'}}  className=\"form-check-label\" htmlFor=\"gridCheck\">\n                                Remember me\n                            </label>\n                        </div>\n                    </div>\n                    <div>\n                       <label className=\"create\" onClick={reset} style={{marginLeft:\"5.625rem\"}}>\n                            Reset Password ?\n                        </label>\n                    </div>\n                </div>\n                <div className=\"form-group\">\n                    <button style={{width:\"22.063rem\",height:\"2.5rem\",backgroundColor:\"#009ED6\"}} className=\"btn btn-primary\" type=\"submit\">Login</button>\n                </div>\n                <div>\n                    <label style={{marginTop:\"2.5rem\",marginLeft:\"2.188rem\"}}>\n                       Don't have an account?\n                    </label>\n                    <label className=\"create\" onClick={login} style={{marginLeft:\"12.75rem\",marginTop:\"-2rem\",fontSize:\"1rem\",color:\"#009ED6\",fontWeight:\"bold\"}}>\n                       Create Account \n                    </label>\n                </div>\n            </form>\n            \n            </div>\n            </div> \n            </>\n      );\n    }\n\nexport default Login;  ","/Users/mac/Desktop/customer_portal_cls/locks&keys_frontend/src/component/login/CreateAccount.tsx",["151","152","153","154","155"],"import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axiosInstance, {baseURL} from '../../api/api';\nimport './Login.css';\nimport { Toast } from 'primereact/toast';\nimport { useRef } from 'react';\nimport FadeLoader from \"react-spinners/FadeLoader\";\nimport { css } from \"@emotion/core\";\nimport ReactTooltip from 'react-tooltip';\nimport info from '../icons/info.svg';\nconst validEmailRegex = RegExp(\n    /^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i\n  );\n\nconst override = css`\n  margin: 0 auto;\n  border-color: red;\n  background-color: transparent;\n  top:40%;\n  margin-right:-18%;\n`;\n\nlet CreateAccount=()=>{\n    let history = useHistory();\n    const toast:any = useRef(null);\n\n    const initialFormData = Object.freeze({\n        accountnumber:'',\n        email: '',\n        confirm_email:'',\n        firstname:'',\n        lastname:'',\n        phonenumber:'',\n        password: '',\n    });\n    const [formData, setFormData] = useState<any>(initialFormData);\n    const [loading, setLoading] = useState<any>(false);\n\n    const handleInputChange = (e: { target: { name: any; value: any; }; }) =>{\n        let name = e.target.name;\n        let value = e.target.value;\n        setFormData({...formData,[name]:value});\n    };\n      \n    const formValidation= () =>{\n        let isValid = true;\n        const node = toast.current;\n        let numbers = /[0-9]/g;\n        let lowerCaseLetters = /[a-z]/g;\n        let upperCaseLetters = /[A-Z]/g;\n        let specialcharacter = /[!+@#\\$%\\^&\\*]/g;\n        let reWhiteSpace = new RegExp(/^\\s+$/);\n        if(formData.accountnumber === '' || formData.email === '' || formData.firstname === '' || formData.lastname === '' || formData.phonenumber === '' || formData.password === ''){\n            if(node){\n            node.show({severity: 'error', detail: \"Please Enter all fields\"});\n            }\n            isValid = false ;\n        }else if(formData.phonenumber.match(lowerCaseLetters) || formData.phonenumber.match(upperCaseLetters) || formData.phonenumber.match(specialcharacter) || formData.phonenumber.includes(' ')){\n            if(node){\n                node.show({severity: 'error',  detail: \"Please enter a valid Phone Number\"});\n                }\n            isValid = false ;\n        }else if(!validEmailRegex.test(formData.email)){\n            if(node){\n                node.show({severity: 'error',  detail: \"Please enter a valid Email Address\"});\n                }\n            isValid = false ;\n        }else if(!(formData.email === formData.confirm_email)){\n            if(node){\n                node.show({severity: 'error',  detail: \"Email Address is not matched\"});\n                }\n            isValid = false ;\n        }else if(!(formData.password.trim().length >= 8 && formData.password.match(numbers) && formData.password.match(lowerCaseLetters) && formData.password.match(upperCaseLetters) && formData.password.match(specialcharacter))){\n            if(node){\n                node.show({severity: 'error',  detail: \"Please enter a valid password format\"});\n                }\n            isValid = false;\n        }\n        return isValid\n    }\n\n    const handleSubmit = (e:any) => {\n\t\te.preventDefault();\n        let isValid = formValidation();\n        if(isValid){\n            setLoading(true);\n        try {\n            axiosInstance\n\t\t\t.post(`/api/customer/create/primary/`, {\n\t\t\t\taccount_number: formData.accountnumber,\n                email: formData.email,\n                confirm_email : formData.confirm_email,\n                first_name: formData.firstname,\n                last_name: formData.lastname,\n                phone: formData.phonenumber,\n                password: formData.password,\n\t\t\t})\n\t\t\t.then((res) => {\n                let node = toast.current;\n                if(res.data.status===200){\n                    //history.push('/');\n                    setFormData({...formData,accountnumber:'',\n                    email: '',\n                    confirm_email:'',\n                    firstname:'',\n                    lastname:'',\n                    phonenumber:'',\n                    password: '',})\n                     if(node){\n                       node.show({severity: 'success', detail: res.data.message});\n                    }\n                    setLoading(false);\n                } else {\n                    setLoading(false);\n                    if(node){\n                       node.show({severity: 'error', detail: res.data.message});\n                    }\n                }\n                \n            });\n            //setLoading(true);\n        } catch(error){\n            setLoading(false);\n             throw error;\n        }\n    }\n  }\n\n    function login() {\n        history.push(`/`);\n    \n       }\n      return (\n        <div >\n            {\n                loading ? <div className='overlay-box1'>\n                <FadeLoader css={override} color={\"rgb(0, 158, 214)\"} loading={loading}  height={30} width={5} radius={2} margin={20} />\n            </div> :''\n            }\n            <Toast ref={toast} />\n            <ReactTooltip id=\"required\"effect=\"solid\" place=\"bottom\" >\n            \"Password should be minimum 8 characters with atleast one uppercase, one lowercase, one special character and one numeric value\"\n            </ReactTooltip>\n\t            <div className=\"d-flex justify-content-center own-login-container\">\n                    \n                    <form onSubmit={handleSubmit} style={{marginTop:\"4.375rem\"}} > \n                        <div>\n                          <label style={{fontSize:\"1.875rem\",textAlign:\"center\",marginBottom:\"1.563rem\"}}>Create an Account</label>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col\" style={{paddingBottom:'0.625rem'}}>\n                                <input style={{width:\"15.625rem\",height:\"2.5rem\"}} name=\"accountnumber\"  className=\"form-control\"   placeholder=\"Account Number *\" value={formData.accountnumber} onChange={handleInputChange}/>\n                            </div>\n                            <div className=\"col\">\n                                <input style={{width:\"15.625rem\",height:\"2.5rem\"}} name=\"phonenumber\" className=\"form-control\"   placeholder=\"Phone Number *\" value={formData.phonenumber} onChange={handleInputChange}/>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col\" style={{paddingBottom:'0.625rem'}}>\n                                <input style={{width:\"15.625rem\",height:\"2.5rem\"}} name=\"email\" type=\"email\"  className=\"form-control\"  placeholder=\"Email ID *\" value={formData.email} onChange={handleInputChange}/>\n                            </div>\n                            <div className=\"col\">\n                                <input style={{width:\"15.625rem\",height:\"2.5rem\"}} name=\"confirm_email\" type=\"email\"  className=\"form-control\"  placeholder=\"Confirm Email ID *\" value={formData.confirm_email} onChange={handleInputChange}/>\n                            </div>\n                        </div>\n                        <div className=\"row\">\n                            <div className=\"col\" style={{paddingBottom:'0.625rem'}}>\n                                <input style={{width:\"15.625rem\",height:\"2.5rem\"}} name=\"firstname\" className=\"form-control\" id=\"exampleInputEmail1\"  placeholder=\"First Name *\" value={formData.firstname} onChange={handleInputChange}/>\n                            </div>\n                            <div className=\"col\">\n                                <input style={{width:\"15.625rem\",height:\"2.5rem\"}} name=\"lastname\" className=\"form-control\"  placeholder=\"Last Name *\"  value={formData.lastname} onChange={handleInputChange}/>\n                            </div>\n                        </div>\n                            <div className=\"col\">\n                                <div className=\"row\" style={{marginLeft:\"-0.75rem\"}}>\n                                    <input style={{width:\"33.125rem\",height:\"2.5rem\"}} name=\"password\" type=\"password\" className=\"form-control\"  placeholder=\"Password*\" value={formData.password} onChange={handleInputChange}/>\n                                    <img alt=\"info\" data-for=\"required\" data-tip=\"required\" style={{cursor:\"pointer\", width:'1.25rem',padding:'0px',marginLeft:'-1.563rem'}} src={info}/>\n                                </div>\n                            </div>\n                        <br></br>\n                        \n                        <div>\n                            <button style={{width:\"33.125rem\",height:\"2.5rem\",backgroundColor:\"#009ED6\",borderColor:\"#009ED6\"}} className=\"btn btn-primary\" type=\"submit\">Create</button>\n                        </div>\n                        <div>\n                            <label style={{marginTop:\"2.5rem\",marginLeft:\"8.125rem\"}}>\n                               Already Have an Account?<span className=\"create\" onClick={login} style={{marginLeft:\".4rem\",marginTop:\"-2rem\",fontSize:\"1rem\",color:\"#009ED6\",fontWeight:\"bold\"}}>\n                               Log In \n                            </span>\n                            </label>\n                            \n                        </div>\n                    </form>\n                </div>\n            </div>\n      );\n    }\n\nexport default CreateAccount;  ","/Users/mac/Desktop/customer_portal_cls/locks&keys_frontend/src/component/login/ChangePassword.tsx",["156","157","158"],"import { useState } from 'react';\nimport axiosInstance from '../../api/api';\nimport './Login.css';\nimport { Toast } from 'primereact/toast';\nimport { useRef } from 'react';\nimport FadeLoader from \"react-spinners/FadeLoader\";\nimport { css } from \"@emotion/core\";\nimport { useHistory } from 'react-router';\nimport info from '../icons/info.svg';\nimport ReactTooltip from 'react-tooltip';\n\nconst override = css`\n  margin: 0 auto;\n  border-color: red;\n  background-color: transparent;\n  top:35%;\n  margin-left:-15%;\n`;\n\nlet Login=()=> {\n    let history = useHistory();\n    const toast:any = useRef(null);\n\n    const initialFormData = Object.freeze({\n\t\toldpassword: '',\n        newpassword: ''\n    });\n    const [formData, setFormData] = useState(initialFormData);\n    let [loading, setLoading] = useState<any>(false);\n    const [success, setSuccess] = useState<any>(false);\n\n    const handleInputChange = (e: { target: { name: any; value: any; }; }) =>{\n        let name = e.target.name;\n        let value = e.target.value;\n        setFormData({...formData,[name]:value});\n    };\n\n    const formValidation= () =>{\n        let isValid = true;\n        const node = toast.current;\n        let numbers = /[0-9]/g;\n        let lowerCaseLetters = /[a-z]/g;\n        let upperCaseLetters = /[A-Z]/g;\n        let specialcharacter = /[!+@#\\$%\\^&\\*]/g;\n        if(formData.oldpassword === '' || formData.newpassword === ''){\n            if(node){\n            node.show({severity: 'error', detail: \"Please Enter all fields\"});\n            }\n            isValid = false ;\n        }else if(!(formData.oldpassword.trim().length >= 8 && formData.oldpassword.match(numbers) && formData.oldpassword.match(lowerCaseLetters) && formData.oldpassword.match(upperCaseLetters) && formData.oldpassword.match(specialcharacter))){\n            if(node){\n                node.show({severity: 'error',  detail: \"Please enter a valid old password format\"});\n                }\n            isValid = false;\n        }else if(!(formData.newpassword.trim().length >= 8 && formData.newpassword.match(numbers) && formData.newpassword.match(lowerCaseLetters) && formData.newpassword.match(upperCaseLetters) && formData.newpassword.match(specialcharacter))){\n            if(node){\n                node.show({severity: 'error',  detail: \"Please enter a valid new password format\"});\n                }\n            isValid = false;\n        }\n        return isValid\n    }\n\n  \n    const handleSubmit = (e:any) => {\n        e.preventDefault();\n        let isValid = formValidation();\n        if(isValid){\n        setLoading(true);\n        try{\n        axiosInstance\n\t\t\t.patch(`/api/customer/change/password/`, {\n\t\t\t\told_password: formData.oldpassword,\n\t\t\t\tpassword: formData.newpassword,\n            },{ headers: {\"Authorization\" : `Bearer ${localStorage.getItem('access_token')}`} }\n            )\n\t\t\t.then((res) => {\n                setLoading(false);\n                if(res.data.status===200){\n                    toast.current.show({severity: 'success', detail: 'Password Changed'});\n                    setSuccess(true);\n                }else\n                    if(res.data.status===406){\n                        toast.current.show({severity: 'error', detail: \"Password should be minimum 8 characters with one upper,one special character, one lower case and one numeric value\"});\n                    }else if(res.data.status===400){\n                        toast.current.show({severity: 'error', detail: \"New password should not be the same as old password\"});\n                    }else{\n                        toast.current.show({severity: 'error', detail: \"Old password is Wrong\"});\n                    } \n                setFormData({...formData, oldpassword:'', newpassword:''});\n                  \n               })\n               .catch((err)=>{\n                setLoading(false);\n                toast.current.show({severity: 'error', detail: \"Something went Wrong\"});\n               })\n        }catch(error){\n            setLoading(false);\n            toast.current.show({severity: 'error', detail: \"Something went Wrong\"});\n            throw error;\n        }\n    }\n    }\n    const passSuccess = () =>{\n        history.push('/');\n    }\n       \n      return (\n        <div >\n            <Toast ref={toast} />\n            {\n                loading ? <div className='overlay-box1' style={{margin:0}}>\n                <FadeLoader css={override} color={\"rgb(0, 158, 214)\"} loading={loading}  height={30} width={5} radius={2} margin={20} />\n             </div> : ''\n            }\n            <ReactTooltip id=\"required\"effect=\"solid\" place=\"bottom\" >\n           \"Password should be minimum 8 characters with atleast one uppercase, one lowercase, one special character and one numeric value\"\n        </ReactTooltip>\n            {success ? <div className=\"d-flex justify-content-center own-change-container\">\n                <div style={{marginTop:'15rem'}}>\n                <p style={{fontSize:'1.25rem'}}>Password changed Successfully!</p>\n                <button type=\"submit\" onClick={passSuccess} className='btn btn-primary'>Go to login page </button>\n                </div>\n            </div>\n            :\n            <div className=\"d-flex justify-content-center own-change-container\">\n            <form onSubmit={handleSubmit} style={{marginTop:\"6.375rem\"}}> \n                <div>\n                  <label style={{fontSize:\"1.875rem\",textAlign:\"center\",marginBottom:\"1.563rem\"}}>Change Password</label>\n                </div>\n                <div className=\"form-group\">\n                    <input name=\"oldpassword\" style={{width:\"22.063rem\",height:\"2.5rem\"}} type=\"password\" value={formData.oldpassword} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Old Password*\" onChange={handleInputChange}/>\n                </div>\n                <div className=\"form-group\">\n                <div className=\"row\" style={{marginLeft:\"0px\"}}>\n                    <input name=\"newpassword\" style={{width:\"22.063rem\",height:\"2.5rem\",paddingRight:'2.2rem'}} type=\"password\" value={formData.newpassword} className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"New Password*\" onChange={handleInputChange}/>\n                    <img alt=\"info\" data-for=\"required\" data-tip=\"required\" style={{cursor:\"pointer\", width:'1.25rem',padding:'0px',marginLeft:'-1.875rem'}} src={info}/>\n                    </div>\n                </div>\n                <div>\n                    <button style={{width:\"22.063rem\",height:\"2.5rem\",backgroundColor:\"#009ED6\"}} className=\"btn btn-primary\" type=\"submit\">Change</button>\n                </div>\n            </form>\n            </div>\n            }\n            \n            </div> \n      );\n    }\n\nexport default Login;  ","/Users/mac/Desktop/customer_portal_cls/locks&keys_frontend/src/component/login/Forget.tsx",["159"],"import { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport {baseURL} from '../../api/api';\nimport axiosInstance from '../../api/api';\nimport { Toast } from 'primereact/toast';\nimport { useRef } from 'react';\nimport FadeLoader from \"react-spinners/FadeLoader\";\nimport { css } from \"@emotion/core\";\n\nconst validEmailRegex = RegExp(\n    /^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i\n  );\n\nconst override = css`\n  margin: 0 auto;\n  border-color: red;\n  background-color: transparent;\n  top:40%;\n  margin-left:-16%;\n`;\n\nlet Forget = () =>{\n    let history = useHistory();\n    const toast:any = useRef(null);\n    const initialFormData = Object.freeze({\n\t\temail: '',\n    });\n    const [formData, setFormData] = useState(initialFormData);\n    const [loading, setLoading] = useState(false);\n\n    const handleInputChange = (e: { target: { name: any; value: any; }; }) =>{\n        let name = e.target.name;\n        let value = e.target.value;\n        setFormData({...formData,[name]:value});\n    };\n\n    const formValidation = () =>{\n        let isValid = true;\n        if(formData.email === ''){\n                toast.current.show({severity: 'error', detail: \"Please enter a email address\"});\n            isValid = false;\n         }else\n         if(!validEmailRegex.test(formData.email)){\n            toast.current.show({severity: 'error', detail: \"Please enter a valid email address\"});\n            isValid = false ;\n        }\n        return isValid\n    }\n\n    const handleSubmit = (e:any) => {\n        e.preventDefault();\n        let isValid = formValidation();\n        if(isValid){\n        setLoading(true);\n        try{\n            axiosInstance\n\t\t\t.post(`/api/customer/reset/password/`, {\n\t\t\t\temail: formData.email,\n\t\t\t})\n\t\t\t.then((res) => {\n                setLoading(false);\n                if(res.data.status === 200){\n                toast.current.show({severity: 'success', detail: 'Mail sent'});\n                 setFormData({...formData, email:'' });\n               }else {\n                toast.current.show({severity: 'error', detail: 'The Email address is not registered to an account'});\n               }\n            })\n            .catch((error)=>{\n                toast.current.show({severity: 'error', detail: 'Error'});\n                setLoading(false);\n            })\n        }catch(error){\n            throw error;\n        }\n    }\n    }\n\n    function login() {\n        history.push(`/`);\n       }\n    return(\n        <>\n         <div >\n         {\n            loading ? <div className='overlay-box1' style={{margin:0}}>\n            <FadeLoader css={override} color={\"rgb(0, 158, 214)\"} loading={loading}  height={30} width={5} radius={2} margin={20} />\n         </div> :''\n        }\n         <Toast ref={toast} />\n            <div className=\"d-flex justify-content-center own-login-container\">\n            <form onSubmit={handleSubmit}  style={{marginTop:\"100px\"}}> \n                <div>\n                  <label style={{fontSize:\"1.875rem\",textAlign:\"center\",marginBottom:\"1.563rem\"}}>Forgot your Password?</label>\n                </div>\n                <div>\n                  <label style={{fontSize:\"1.125rem\",textAlign:\"center\",marginBottom:\"1.563rem\"}}>Confirm your email and we'll send the Instructions</label>\n                </div>\n                <div className=\"form-group\">\n                    <div className=\"col\">\n                        <input  name=\"email\" style={{width:\"22rem\",height:\"2.5rem\",marginLeft:'.5rem'}} className=\"form-control\"  placeholder=\"Email ID *\" value={formData.email} onChange={handleInputChange}/>\n                    </div><br></br>\n                    <div className=\"col\">\n                        <button style={{width:\"22rem\",height:\"2.5rem\",backgroundColor:\"#009ED6\",borderColor:\"#009ED6\"}} className=\"btn btn-primary\" type=\"submit\">Reset Password</button>\n                    </div>\n                </div>\n                <div > \n                    <label style={{marginTop:\"2.5rem\",paddingLeft:'6.25rem'}}>\n                       Do have an account?\n                    </label>\n                    <label className=\"create\" onClick={login}  style={{marginLeft:\"16.25rem\",marginTop:\"-2rem\",fontSize:\"1rem\",color:\"#009ED6\",fontWeight:\"bold\"}}>\n                       Login \n                    </label>\n                </div>\n            </form>\n            </div>\n            </div> \n        </>\n    )\n}\nexport default Forget;","/Users/mac/Desktop/customer_portal_cls/locks&keys_frontend/src/component/login/ResetPassword.tsx",[],"/Users/mac/Desktop/customer_portal_cls/locks&keys_frontend/src/component/header/Header.tsx",[],"/Users/mac/Desktop/customer_portal_cls/locks&keys_frontend/src/component/header/Home.tsx",[],"/Users/mac/Desktop/customer_portal_cls/locks&keys_frontend/src/api/api.tsx",[],"/Users/mac/Desktop/customer_portal_cls/locks&keys_frontend/src/component/sidebar/Dashboard.tsx",[],"/Users/mac/Desktop/customer_portal_cls/locks&keys_frontend/src/component/sidebar/AuditReport.tsx",[],"/Users/mac/Desktop/customer_portal_cls/locks&keys_frontend/src/component/sidebar/Sidebarr.tsx",["160"],"/Users/mac/Desktop/customer_portal_cls/locks&keys_frontend/src/component/sidebar/CompanyDetails.tsx",["161"],"import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './CompanyDetails.css';\nimport { useEffect } from 'react';\nimport axiosInstance from '../../api/api'\nimport { useState } from 'react';\nimport FadeLoader from \"react-spinners/FadeLoader\";\nimport { css } from \"@emotion/core\";\nimport { Paginator } from 'primereact/paginator';\n\nconst override = css`\n  margin: 0 auto;\n  border-color: red;\n  background-color: transparent;\n  top:40%;\n  margin-left:-16%;\n`;\n\nlet CompanyDetails=()=> {\n  //let history = useHistory();\n  const initialFormData = Object.freeze({\n    offset: 0,\n    perPage: 10,\n    totalRecords: 0,\n    pageCount:0\n\n});\n  const [formData, setFormData]:any = useState(initialFormData);\n  const [data, setData] = useState([]);\n  const [tableData, setTableData] = useState([]);\n  const [loading, setLoading] = useState<any>(false);\n  const [cus_no, setCus_no] = useState<any>('');\n  const [last_name, setLast_name] = useState<any>('');\n\n   useEffect(() =>{\n    const fetchDataAsync = async () => {\n        try {\n            setLoading(true);\n            const api = '/api/customer/company/details/';\n            let response = await axiosInstance.get(api, { headers: {\"Authorization\" : `Bearer ${localStorage.getItem('access_token')}`} });\n            setData(response.data.data);\n            let slice = response.data.data.slice(formData.offset, formData.offset + formData.perPage);\n            setFormData({...formData, pageCount: Math.ceil(response.data.data.length / formData.perPage), totalRecords: response.data.data.length});\n            setTableData(slice);\n            setCus_no(response.data.cus_no);\n            setLast_name(response.data.last_name);\n            if(!(data===null)){\n                setLoading(false);\n              }\n            return data;\n        }catch(error){\n            setLoading(false);\n            throw error;\n        }\n     }   ;\n     fetchDataAsync()\n  },[]);\n  \n\n  const onPageChange = (event:any) => {\n    let offset = event.first;\n    let perPage = event.rows;\n    setFormData({...formData , offset:offset, perPage:perPage})\n    let slice = data.slice(offset, offset + perPage);\n    setTableData(slice);\n}\n \n      return (\n        <>\n         <div>\n               {loading ?<div className='overlay-box1'>\n                    <FadeLoader css={override} color={\"rgb(0, 158, 214)\"} loading={loading}  height={30} width={5} radius={2} margin={20} />\n                </div> : ''}\n                <div className=\"upper\">\n                    <p style={{padding:\"20px\"}}><span className='heading'>{last_name}</span> \n                    <br></br><span className='heading'>{cus_no}</span></p>\n                </div>\n                <div className=\"content\">\n                <div className=\"accordian\"> \n                    <div className=\"col-12\">\n                        <div className=\"row\">\n                            <div className=\"col-6\">\n                                <p style={{color:\"#fff\",textAlign:\"left\",marginTop:\"10px\"}}>Company Locations</p>\n                            </div>\n                        </div>\n                    </div>\n                </div >\n                <table className=\"table table-striped\">\n                    <thead>\n                        <tr >\n                        <th style={{fontWeight:500}} scope=\"col\">Location Name</th>\n                        <th style={{fontWeight:500}} scope=\"col\">Address</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                       {tableData.map((item: any,i: any)=>{\n                         return(\n                        <tr>\n                         <td>{item.location}</td>\n                         <td>{item.address}</td>\n                        </tr>\n                         )})}\n                         <tr>\n                 <td colSpan={2}>\n                  <Paginator first={formData.offset} rows={formData.perPage} totalRecords={formData.totalRecords} rowsPerPageOptions={[10,20,30]} \n                  template=\"RowsPerPageDropdown CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink \"\n                  onPageChange={onPageChange}></Paginator>\n                  </td>\n                  </tr>\n                    </tbody>\n                    \n                </table>\n                \n                </div>\n            </div>\n        </>\n      );\n    }\n\nexport default CompanyDetails;  ","/Users/mac/Desktop/customer_portal_cls/locks&keys_frontend/src/component/sidebar/UserInformation.tsx",[],"/Users/mac/Desktop/customer_portal_cls/locks&keys_frontend/src/component/sidebar/ManageUser.tsx",["162","163"],"import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport axiosInstance from '../../api/api';\nimport edit1 from '../icons/edit.svg';\nimport save from '../icons/floppy-disk.svg';\nimport Select from 'react-select';\nimport 'primereact/resources/themes/saga-blue/theme.css';\nimport 'primereact/resources/primereact.min.css';\nimport { Paginator } from 'primereact/paginator';\nimport { Toast } from 'primereact/toast';\nimport { useRef } from 'react';\nimport FadeLoader from \"react-spinners/FadeLoader\";\nimport { css } from \"@emotion/core\";\nimport AddNewUser from './AddNewUser';\n\nconst override = css`\n  margin: 0 auto;\n  border-color: red;\n  background-color: transparent;\n  top:40%;\n  margin-left:-16%;\n`;\n\nlet ManageUser =()=>{\n  let history = useHistory();\n  const toast: any = useRef();\n\n  const initialFormData = Object.freeze({\n        user:null,\n        key_finder:false,\n        service_request:false,\n        inv_statements:false,\n        quotes: false,\n        hs_signatory:false,\n        add_user:false,\n        audit:false,\n});\nconst initialFormData1 = Object.freeze({\n  first_name:\"\",\n  last_name:\"\",\n  phone:\"\",\n});\nconst [formData, setFormData]:any = useState(initialFormData);\nconst [formData1, setFormData1]:any = useState(initialFormData1);\n//const [file, setFile] = useState<any>([1]);\nconst [addnewuser, setAddnewuser] = useState<any>(false);\nconst [offset, setOffset] = useState<any>(0);\nconst [limit, setLimit] = useState<any>(10);\nconst [totalRecords, setTotalRecords] = useState<any>(0);\nconst [currentuser, setCurrentuser] = useState<any>([]);\nconst [current_user_access, setCurrent_user_access] = useState<any>({});\nconst [file_numbers,setFile_numbers] = useState<any>([]);\nconst [add_user, setAdd_user] = useState<any>([]);\nconst [selected, setSelected] = useState<any>([]);\nconst [loading, setLoading] = useState<any>(false);\n\n  const [data, setData] = useState<any>([]);\n // const [edit, setEdit] = useState(false);\n\n  const handleChange = (event:any) => {\n    setSelected(Array.isArray(event) ? event.map(x => x.value) : []);\n  };\n\n  const options = file_numbers.map((item: any,i: any)=>{ \n    return (\n    { label: item.file_number+\"-\"+item.location, value: item.id})\n     });\n\n  const handleCheckboxChange = (e: { target: { name: any; checked:any;} }) =>{\n    let name = e.target.name;\n    let checked = e.target.checked;\n    setFormData({...formData,[name]:checked});\n   };\n\n   const handleInputChange = (e: { target: { name: any; value: any; }; }) =>{\n    let name = e.target.name;\n    let value = e.target.value;\n    setFormData1({...formData1,[name]:value});\n    \n};\n\nconst handleCheckboxSlider = (e: { target: { name: any; checked:any;} },item:any) =>{\n    let id = item.useraccess.user;\n    axiosInstance\n      .patch(`/api/customer/manage/user/${id}/`,\n              { headers: {\"Authorization\" : `Bearer ${localStorage.getItem('access_token')}`} }\n            )\n\t\t\t.then((res) => {\n        if(res.data.data.is_active===false){\n          toast.current.show({severity: 'success', detail: 'User Disabled'});\n        }else {\n          toast.current.show({severity: 'success', detail: 'User Enabled'});\n        }\n        \n\t\t\t});\n};\n\n   \n  let editdetails=(item:any,id:any)=> {\n    const updatedData = data.map((obj:any,i:number)=>{\n      if(i===id){\n        obj.showDetails = true;\n      }else{\n        obj.showDetails = false;\n      }\n      return {...obj}\n      });\n    setData(updatedData);\n    setFormData({...formData,...item.useraccess});\n    setFormData1({...formData1,first_name:item.first_name,last_name:item.last_name,phone:item.phone,is_active:item.is_active});\n    //setFile(item.file_numbers);\n    setSelected(item.file_numbers);\n   }\n\n   const onUpdate = (e:any,id:any)=>{\n    e.preventDefault();\n    setLoading(true);\n    axiosInstance\n\t\t\t.put(`/api/customer/manage/user/${formData.user}/`, {\n                 first_name: formData1.first_name,\n                 last_name:formData1.last_name,\n                 phone: formData1.phone,\n                 file_numbers:selected,\n                 useraccess:\n                 {\n                  key_finder: formData.key_finder,\n                  service_request: formData.service_request,\n                  inv_statements:formData.inv_statements,\n                  quotes: formData.quotes,\n                  hs_signatory:formData.hs_signatory,\n                  add_user:formData.add_user,\n                  audit:formData.audit\n                } ,\n                method: \"put\"\n            },{ headers: {\"Authorization\" : `Bearer ${localStorage.getItem('access_token')}`} }\n            )\n\t\t\t.then((res) => {\n        setLoading(false);\n        let node = toast.current;\n        if(res.data.status===200){\n          if(node){\n             node.show({severity: 'success',  detail: 'User Updated Successfully'});\n          }\n        const updatedData = data.map((obj:any,i:number)=>{\n          if(i===id){\n            obj.showDetails = false;\n            obj.first_name= formData1.first_name;\n            obj.last_name=formData1.last_name;\n            obj.phone= formData1.phone;\n            obj.file_numbers= selected;\n            obj.useraccess.key_finder= formData.key_finder;\n            obj.useraccess.service_request= formData.service_request;\n            obj.useraccess.inv_statements=formData.inv_statements;\n            obj.useraccess.quotes= formData.quotes;\n            obj.useraccess.hs_signatory=formData.hs_signatory;\n            obj.useraccess.add_user=formData.add_user;\n            obj.useraccess.audit=formData.audit;\n          }\n          return {...obj}\n        })\n        setData(updatedData);\n      }else {\n        setLoading(false);\n        if(node){\n           node.show({severity: 'error', detail: 'Wrong Details'});\n        }\n      }\n\t\t\t});\n\n   }\n   const fetchDataAsync = async (offset:any,limit:any) => {\n    try {\n        setLoading(true);\n        const api = `/api/customer/manage/user/?limit=${limit}&offset=${offset}`;\n        let response = await axiosInstance.get(api, { headers: {\"Authorization\" : `Bearer ${localStorage.getItem('access_token')}`} });\n        setData(response.data.results.data.map((obj:any)=>{\n          return({...obj, showDetails: false\n          })\n        }));\n        if(!(data===null)){\n          setLoading(false);\n        }\n        setFile_numbers(response.data.results.file_numbers);\n        setCurrentuser(response.data.results.current_user);\n        setCurrent_user_access(response.data.results.current_user_access);\n        setAdd_user(response.data.results.current_user_access.add_user)\n        setTotalRecords(response.data.count);\n        \n        return data;\n    }catch(error){\n      setLoading(false);\n        throw error;\n    }\n }   \n\n\n   useEffect(() =>{\n     fetchDataAsync(null,null);\n  },[]);\n\n \n  function cancel(id:any) {\n    const updatedData = data.map((obj:any,i:number)=>{\n        if(i===id){\n          obj.showDetails = false;\n        }\n        return {...obj}\n    })\n    setData(updatedData);\n    //setEdit(false);\n    //renderEditForm(data[id].showDetails,id);\n   }\n \n   let renderEditForm =(show:any,id:any)=>{\n     if(show){\n       return(\n         <>\n         <tr>\n           <td colSpan={10}>\n           <div className=\"content\" style={{height:\"23.18rem\",border:'1px solid #12739A',overflowX:'hidden'}}>\n          <div>\n          <div className=\"accordian\"> \n                    <div className=\"col-12\">\n                        <div className=\"row\">\n                                <div className=\"col-6\">\n                                    <p style={{color:\"#fff\",textAlign:\"left\",marginTop:\"0.625rem\"}}>Edit User Permissions</p>\n                                </div>\n                                <div className=\"col-6\">\n                                    <span className=\"detail-created\" onClick={(e)=>onUpdate(e,id)} ><img style={{marginRight:\".5rem\",marginLeft:'0.625rem',width:'1rem'}} alt=\"save\" src={save} />Save</span>\n                                    <span className=\"detail-created\" onClick={()=>cancel(id)} >Cancel</span>\n                                </div>\n                        </div>\n                    </div>\n            </div><br/>\n            \n            <div className=\"row\" style={{padding:\"1rem\"}}>\n                    <div className=\"col-4\">\n                        <input type=\"text\" name=\"first_name\" className=\"form-control\" placeholder=\"Enter First Name *\" value={formData1.first_name} onChange={handleInputChange}/>\n                    </div>\n                    <div className=\"col-4\">\n                        <input type=\"text\" name=\"last_name\" className=\"form-control\" placeholder=\"Enter Last Name *\" value={formData1.last_name} onChange={handleInputChange}/>\n                    </div>\n                    <div className=\"col-4\">\n                        <input type=\"text\" name='phone' className=\"form-control\" placeholder=\"Phone Number *\" value={formData1.phone} onChange={handleInputChange}/>\n                    </div>\n                    \n                </div>\n                <div className=\"col-4\">\n                          <Select\n                              className=\"dropdown\"\n                              placeholder=\"Select Option *\"\n                              value={options.filter((obj: { value: any; }) => selected.includes(obj.value))} // set selected values\n                              options={options} // set list of the data\n                              onChange={handleChange} // assign onChange function\n                              isMulti\n                              isClearable\n                          />\n                    </div>\n                <br></br>\n            <div className=\"form-check\">\n                    <div className=\"row\">\n                        <div className=\"col-4\">\n                            <input style={{height:\"1.375rem\",width:\"1.375rem\",cursor:'pointer'}} name=\"key_finder\"  className=\"form-check-input\" type=\"checkbox\" checked={formData.key_finder} onChange={handleCheckboxChange}  id=\"flexCheckDefault\" disabled={!current_user_access.key_finder}/>\n                            <label style={{paddingLeft:\"1.1em\"}} className=\"form-check-label\" >\n                            Manage Keys\n                            </label>\n                        </div>\n                        <div className=\"col-4\">\n                            <input style={{height:\"1.375rem\",width:\"1.375rem\",cursor:'pointer'}} name=\"service_request\"   className=\"form-check-input\" type=\"checkbox\" checked={formData.service_request} onChange={handleCheckboxChange}  id=\"flexCheckDefault6\" disabled={!current_user_access.service_request}/>\n                            <label style={{paddingLeft:\"1.1em\"}} className=\"form-check-label\" >\n                            Request Service\n                            </label>\n                        </div>\n                        <div className=\"col-4\">\n                            <input style={{height:\"1.375rem\",width:\"1.375rem\",cursor:'pointer'}} name=\"inv_statements\"  className=\"form-check-input\" type=\"checkbox\" checked={formData.inv_statements} onChange={handleCheckboxChange} id=\"flexCheckDefault1\" disabled={!current_user_access.inv_statements}/>\n                            <label style={{paddingLeft:\"1.1em\"}} className=\"form-check-label\" >\n                            Pay Bills\n                            </label>\n                        </div>\n                    </div><br></br>\n                    <div className=\"row\">\n                        <div className=\"col-4\">\n                            <input style={{height:\"1.375rem\",width:\"1.375rem\",cursor:'pointer'}} name=\"quotes\"   className=\"form-check-input\" type=\"checkbox\" checked={formData.quotes}  onChange={handleCheckboxChange} id=\"flexCheckDefault2\" disabled={!current_user_access.quotes}/>\n                            <label style={{paddingLeft:\"1.1em\"}} className=\"form-check-label\" >\n                            Accept Quotes\n                            </label>\n                        </div>\n                        <div className=\"col-4\">\n                            <input style={{height:\"1.375rem\",width:\"1.375rem\",cursor:'pointer'}} name=\"hs_signatory\"  className=\"form-check-input\" type=\"checkbox\" checked={formData.hs_signatory} onChange={handleCheckboxChange} id=\"flexCheckDefault3\" disabled={!current_user_access.hs_signatory}/>\n                            <label style={{paddingLeft:\"1.1em\"}} className=\"form-check-label\" >\n                            key Authorizers\n                            </label>\n                        </div>\n                    </div><br></br>\n                    <div className=\"row\" style={{paddingBottom:'1rem'}}>\n                        <div className=\"col-4\">\n                            <input style={{height:\"1.375rem\",width:\"1.375rem\",cursor:'pointer'}} name=\"add_user\"  className=\"form-check-input\" type=\"checkbox\" checked={formData.add_user} onChange={handleCheckboxChange} id=\"flexCheckDefault4\" disabled={!current_user_access.add_user}/>\n                            <label style={{paddingLeft:\"1.1em\"}} className=\"form-check-label\" >\n                            Users\n                            </label>\n                        </div>\n                        <div className=\"col-4\">\n                            <input style={{height:\"1.375rem\",width:\"1.375rem\",cursor:'pointer'}} name=\"audit\" className=\"form-check-input\" type=\"checkbox\" checked={formData.audit} onChange={handleCheckboxChange} id=\"flexCheckDefault5\" disabled={!current_user_access.audit}/>\n                            <label style={{paddingLeft:\"1.1em\"}} className=\"form-check-label\">\n                            Audit Trails\n                            </label>\n                        </div>\n                    </div>\n                </div>\n                </div>\n                </div>\n           </td>\n         </tr>    \n        </>\n       )\n     }\n   }   \n\n   const onPageChange = (event:any) => {\n    setLimit(event.rows);\n    setOffset(event.first);\n    fetchDataAsync(event.first,event.rows);\n}\n\nconst permission = () =>{\n  toast.current.show({severity: 'error', detail:  `You don't have permission`});\n}\n\n  function newuser() {\n    setAddnewuser(true);\n  }\n\n  function addnew(){\n    setAddnewuser(false);\n  }\n\n  function addToast(){\n    fetchDataAsync(null,null);\n    toast.current.show({severity: 'success', detail: 'User Created'});\n  }\n\n  const lastLoginDate  = currentuser.last_login? new Date(currentuser.last_login).toLocaleDateString(): '';\n  const lastUpdatedDate = currentuser.last_modified? new Date(currentuser.last_modified).toLocaleDateString(): \"\";\n\n  \n\n      return (\n        <>\n           { addnewuser ? \n           <AddNewUser addnewuser={addnew} addtoast={addToast} permissions ={current_user_access}/>\n           :\n          <div>\n          \n             <Toast ref={toast} />\n\n            {loading ? <div className='overlay-box1'>\n                    <FadeLoader css={override} color={\"rgb(0, 158, 214)\"} loading={loading}  height={30} width={5} radius={2} margin={20} />\n                </div> :''}\n            <div className=\"upper1\" >\n                <div className=\"row\">\n                  <div style={{marginTop:\"0.625rem\",marginLeft:\"1.25rem\"}} className=\"col-6\">\n                      <p><span style={{color:\"#009DD0\",fontSize:\"1.5rem\"}}><span style={{fontWeight:\"bold\"}}>Welcome</span>  {currentuser.first_name} {currentuser.last_name}</span></p>\n                      <p> Your last log in was on :  <strong>{lastLoginDate}</strong></p>\n                      <p>Last Updated:  <strong>{lastUpdatedDate}</strong></p>\n                  </div>\n                  <div className=\"col-6\">\n                     <button onClick={newuser} style={add_user ? {fontWeight:\"lighter\",marginTop:\"-3.75rem\",float:\"right\",marginRight:\"-31.25rem\"}: {visibility:\"hidden\"}} className=\"btn btn-outline-danger\">+Add New User</button>\n                  </div>\n              </div>\n            </div>\n            <div className=\"content\" >\n              <table className=\"table\" >\n                  <thead style={{ color: \"#fff\",backgroundColor:\"#12739A\" }}>\n                    <tr>\n                      <th>User Name</th>\n                      <th style={{textAlign:\"center\"}}>Email ID</th>\n                      <th>Manage Keys</th>\n                      <th>Request Service</th>\n                      <th>Pay Bills</th>\n                      <th>Accept Quotes</th>\n                      <th>Key Authorizers</th>\n                      <th>Users</th>\n                      <th>Audit Trails</th>\n                      <th style={{textAlign:\"right\"}}>Actions</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                  {data.map((item: any,i: any)=>{\n                  return(\n                    <>\n                    <tr key={i}>\n                      <td style={{textAlign:\"left\"}}>{item.first_name} {item.last_name}</td>\n                      <td >{item.email}</td>\n                      <td>\n                         <input style={{height:\"1.375rem\",width:\"1.375rem\", borderRadius:\".25em\",position:\"initial\",marginLeft:'0px'}}  type=\"checkbox\"  checked={item.useraccess.key_finder} className=\"form-check-input\" disabled/>\n                      </td>\n                      <td>\n                         <input style={{height:\"1.375rem\",width:\"1.375rem\", borderRadius:\".25em\",position:\"initial\",marginLeft:'0px'}}  type=\"checkbox\"  checked={item.useraccess.service_request} className=\"form-check-input\" disabled/>\n                      </td>\n                      <td>\n                         <input style={{height:\"1.375rem\",width:\"1.375rem\", borderRadius:\".25em\",position:\"initial\",marginLeft:'0px'}}  type=\"checkbox\"  checked={item.useraccess.inv_statements} className=\"form-check-input\" disabled/>\n                      </td>\n                      <td>\n                         <input style={{height:\"1.375rem\",width:\"1.375rem\", borderRadius:\".25em\",position:\"initial\",marginLeft:'0px'}}  type=\"checkbox\"  checked={item.useraccess.quotes} className=\"form-check-input\" disabled/>\n                      </td>\n                      <td>\n                         <input style={{height:\"1.375rem\",width:\"1.375rem\", borderRadius:\".25em\",position:\"initial\",marginLeft:'0px'}}  type=\"checkbox\"  checked={item.useraccess.hs_signatory} className=\"form-check-input\" disabled/>\n                      </td>\n                      <td>\n                         <input style={{height:\"1.375rem\",width:\"1.375rem\", borderRadius:\".25em\",position:\"initial\",marginLeft:'0px'}}  type=\"checkbox\"  checked={item.useraccess.add_user} className=\"form-check-input\" disabled/>\n                      </td>\n                      <td>\n                         <input style={{height:\"1.375rem\",width:\"1.375rem\", borderRadius:\".25em\",position:\"initial\",marginLeft:'0px'}}  type=\"checkbox\"  checked={item.useraccess.audit} className=\"form-check-input\" disabled/>\n                      </td>\n                      <td>\n                      <img style={{cursor:\"pointer\",marginLeft:'-0.625rem',width:'37%'}} onClick={add_user ? ()=>editdetails(item,i) : permission} alt=\"edit\" src={edit1} />\n                      <label className=\"switch\" style={{marginLeft:\"0.313rem\"}}>\n                          <input type=\"checkbox\" name=\"userdisable\"  defaultChecked={item.is_active} onChange={add_user ? (e)=>handleCheckboxSlider(e,item): permission} disabled={add_user ? false :true}/>\n                          <span style={{marginBottom:\"-0.438rem\"}} className=\"slider round\"></span>\n                        </label>\n                      </td>\n                    </tr>\n                       \n                      {item.showDetails && \n                      renderEditForm(item.showDetails,i)}\n                    </>\n                    )})}\n                    <tr>\n                    <td colSpan={10}>\n                      <Paginator first={offset} rows={limit} totalRecords={totalRecords} rowsPerPageOptions={[10, 20, 30]} \n                      template=\"RowsPerPageDropdown CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink \"\n                      onPageChange={onPageChange}></Paginator>\n                    </td>\n                  </tr>\n                  </tbody>\n                  \n                </table> \n                \n                \n                <div>\n            </div>\n          </div>\n         \n          </div>\n}\n        </>\n      );\n    }\n\n\nexport default ManageUser;  ","/Users/mac/Desktop/customer_portal_cls/locks&keys_frontend/src/component/sidebar/ViewKeys.tsx",["164","165","166"],"import React from 'react';\nimport ViewKeysDetails from './ViewKeysDetails';\nimport image from '../icons/pdf-1.svg';\nimport csv from '../icons/csv.svg';\nimport schedule from '../icons/schedule.svg';\nimport warning from '../icons/warning.svg';\nimport brokenkey from '../icons/BrokenKey.svg';\nimport questionmark from '../icons/questionmark.svg';\nimport csv1 from '../icons/csv1.svg';\nimport shopping from '../icons/shoppingcart.svg';\nimport axiosInstance , {baseURL} from '../../api/api';\nimport  jsPDF from \"jspdf\";\nimport 'jspdf-autotable';\nimport cancel from '../icons/cancel.svg';\nimport { autoTable } from 'jspdf-autotable';\nimport { CSVLink } from \"react-csv\";\nimport { Paginator } from 'primereact/paginator';\nimport Select from \"react-select\";\nimport FadeLoader from \"react-spinners/FadeLoader\";\nimport { css } from \"@emotion/core\";\nimport Modal from 'react-modal';\nimport KeyRequest from './KeyRequest';\nimport { Toast } from 'primereact/toast';\n\nconst override = css`\n  margin: 0 auto;\n  border-color: red;\n  background-color: transparent;\n  top:40%;\n  margin-left:-16%;\n`;\ninterface Props{\n  edit:boolean;\n  data:any;\n  view:any;\n  currentuser:any;\n  showDetails: any;\n  isSelected:any;\n  file:any;\n  limit:any;\n  offset:any;\n  totalRecords:any;\n  loading : boolean;\n  modalIsOpen : boolean;\n  door_compromised:any;\n  csvTable:any;\n}\n\nclass ViewKeys extends React.Component<{},Props> {\n  toast: React.RefObject<any>;\n\n  constructor(props:Props){\n    super(props);\n    this.toast = React.createRef();\n\n    this.state={\n      showDetails: false,\n      edit:false,\n      data:[],\n      view:[],\n      csvTable:[],\n      currentuser:[],\n      isSelected: '',\n      file:[] as any,\n      loading : false,\n      modalIsOpen:false,\n      door_compromised:'',\n\n      limit:10,\n      offset: null,\n      totalRecords:null\n    }}\n    \n    customStyles = {\n      content : {\n        top                   : '50%',\n        left                  : '50%',\n        right                 : 'auto',\n        bottom                : 'auto',\n        marginRight           : '-20%',\n        transform             : 'translate(-50%, -50%)',\n        width                 : '50rem',\n        height                : '37.5rem'\n      }\n    };\n\n    /* exportPDF = async() => {\n\n      try {\n        this.setState({loading : true});\n        const api = `kdfinder/keys/all/?file_number=${this.state.isSelected}`;\n        let response = await axiosInstance.get(api , { headers: {'Content-Type': 'application/json'} } );\n      const unit = \"pt\";\n      const size = \"A4\"; // Use A1, A2, A3 or A4\n      const orientation = \"portrait\"; // portrait or landscape\n      const marginLeft = 40;\n      const doc = new jsPDF(orientation, unit, size);\n      doc.setFontSize(15);\n  \n      const title = \"View Keys\";\n      const headers = [[\"Key ID Stamp\", \"Key Description\",\"QTY Cut\"]];\n      const data = response.data.data.map((item:any)=> [item.key_id, item.key_description,item.quantity]);\n  \n      let content = {\n        startY: 50,\n        head: headers,\n        body: data\n      };\n      doc.text(title, marginLeft, 40);\n      (doc as jsPDF & { autoTable: autoTable }).autoTable (content);\n      doc.save(\"report.pdf\");\n      this.setState({loading : false});\n    }catch(error){\n      this.setState({loading : false});\n        throw error;\n    }\n    }; */\n\n\n    /* exportPDFsequence = (sequence:any) => {\n      const unit = \"pt\";\n      const size = \"A4\"; // Use A1, A2, A3 or A4\n      const orientation = \"portrait\"; // portrait or landscape\n      const marginLeft = 40;\n      const doc = new jsPDF(orientation, unit, size);\n      doc.setFontSize(15);\n  \n      const title = \"View Keys\";\n      const headers = [[\"Key ID Stamp\", \"Tenant\",\"First/Last Name\",\"Phone\",\"Email ID\",\"Issue Date\"]];\n      const data = sequence.map((item:any)=> [item.key_id, item.tenant_location, item.key_holder, item.phone, item.email, item.date_issued]);\n  \n      let content = {\n        startY: 50,\n        head: headers,\n        body: data\n      };\n      doc.text(title, marginLeft, 40);\n      (doc as jsPDF & { autoTable: autoTable }).autoTable (content);\n      doc.save(\"sequence.pdf\");\n    }; */\n   \n    fetchedData= async(offset:any,limit:any,fn:any) => {\n      try {\n        this.setState({loading : true});\n        const api = `/api/kdfinder/keys/?file_number=${fn}&limit=${limit}&offset=${offset}`;\n        let response = await axiosInstance.get(api , { headers: {'Content-Type': 'application/json'} } );\n        this.setState({data:response.data.results.data.map((obj:any)=>{\n          return({...obj, showDetails: false\n          })\n        })});\n        if(!(this.state.data.length === 0))\n                {\n                    this.setState({loading : false});\n                }else {\n                  this.setState({loading : false});\n                  this.toast.current.show({severity: 'error',  detail: 'No record found'});\n                }\n        this.setState({currentuser:response.data.results.current_user});\n        this.setState({totalRecords:response.data.count});\n        this.setState({file:response.data.results.file_numbers.map((item: any)=>{ \n          return (\n          { label: item.file_number, value: item.id})\n        })});\n        if(this.state.isSelected===''){\n          this.setState({isSelected:response.data.results.selected});\n        }\n        return this.state.data;\n    }catch(error){\n      this.setState({loading : false});\n        throw error;\n    }\n    }\n\n    \n\n  componentDidMount = () =>{\n       this.fetchedData(null,null,'all');\n    }\n\n  details=(item:any,id1:any)=> {\n    //this.setState({loading:true});\n    const updatedData = this.state.data.map((obj:any,i:number)=>{\n      if(i===id1){\n        obj.showDetails = true;\n      }else{\n        obj.showDetails = false;\n      }\n      return {...obj}\n      });\n   this.setState({data:updatedData});\n   this.setState({edit:true});\n   this.setState({view:item.sequence});\n   this.setState({door_compromised: item.door_compromised});\n  }\n\n  colourStyles ={\n    option: (provided:any) => ({\n      ...provided,\n      backgroundColor: this.state.isSelected ? 'white' : 'white',\n      cursor: 'pointer',\n      color: this.state.isSelected ? 'black' : 'black',\n      \"&:hover\": {\n        backgroundColor: \"#ccc\"\n      }\n    }),\n    control: (styles:any) => ({\n      ...styles,\n      cursor: 'pointer',\n      \n    }),\n  }\n   \n  handleChange = (e:any) => {\n    this.fetchedData(null,null,e.label);\n    this.setState({isSelected:e.label});\n  }\n\n  cancel(id:any) {\n    const updatedData = this.state.data.map((obj:any,i:number)=>{\n        if(i===id){\n          obj.showDetails = false;\n        }\n        return {...obj}\n    })\n    this.setState({data: updatedData,edit:false});\n    this.fetchedData(null,null,'all');\n   }\n\n   load = ()=>{\n    this.setState({loading:false});\n   }\n   \n   loadc = ()=>{\n    this.setState({loading:true});\n   }\n  renderEditForm=(show:any,id:any)=>{\n    if(show){\n      return(\n        <>\n          <tr style={{height:\"0px\"}}>\n              <td colSpan={4}>\n              <div className=\"accordian\"> \n                    <div className=\"col-12\">\n                        <div className=\"row\">\n                            <div className=\"col-6\">\n                                <p style={{color:\"#fff\",textAlign:\"left\",marginTop:\"10px\"}}>Key Holder Informations</p>\n                            </div>\n                            <div className=\"col-6\">\n                                    <span className=\"detail-created\" onClick={()=>this.cancel(id)} >Close</span>\n                                </div>\n                        </div>\n                    </div>\n                </div>\n                <ViewKeysDetails loadc={this.loadc} load={this.load} viewdata={this.state.view}/>\n              </td>\n          </tr>\n       </>\n      )\n    }\n  }   \n\n  renderEdit=()=>{\n    if(this.state.edit){\n      return(\n        <>\n       <div className=\"row\">\n            <div className=\"col-2\" style={{marginTop:\"1.25rem\",marginRight:\"1.875rem\",marginLeft:\"-2.5rem\",width:'65%'}}>\n               <img alt=\"warning\" src={warning}/><br></br><span>{this.state.door_compromised} Door Compermised</span>\n            </div>\n            <button style={{marginTop:\"1.25rem\",marginLeft:\"0.938rem\", height:\"3.875rem\",width:\"9.063rem\"}}  type=\"button\" className=\"btn btn-outline-info\"><img style={{marginTop:\"0.438rem\",marginRight:\"0.5rem\",width:'32%'}} alt=\"schedule\" src={schedule}/>Schedule<span style={{marginTop:\"-1.125rem\",marginRight:\"-2.25rem\",display:\"block\"}}> Service</span></button>\n            <a href={`${baseURL}/api/kdfinder/csv/key-qty/${this.state.currentuser.id}/${this.state.isSelected}/`} style={{marginTop:\"1.25rem\",marginLeft:\"0.938rem\",height:\"3.875rem\",width:\"10.25rem\"}} \n                  className=\"btn btn-outline-success\">\n                  <img style={{marginTop:\"0.438rem\",marginRight:\"0.5rem\",marginLeft:\"-.25rem\",width:'20%'}} alt=\"csv\" src={csv}/>\n                  Export System <span style={{marginTop:\"-1.125rem\",marginRight:\"2.25rem\",display:\"block\"}}>CSV </span>\n            </a>\n            <a href={`${baseURL}/api/kdfinder/pdf/key-qty/${this.state.currentuser.id}/${this.state.isSelected}/`} style={{marginTop:\"1.25rem\",marginLeft:\"0.938rem\",marginRight:\"-3.125rem\",height:\"3.875rem\",width:\"11.813rem\"}} type=\"button\" className=\"btn btn-outline-danger\"><img style={{marginTop:\"0.438rem\",marginRight:\"1px\",marginLeft:\"-1px\",width:'17%'}} alt=\"pdf\" src={image}/> Download System<span style={{marginTop:\"-1.125rem\",marginRight:\"3.875rem\",display:\"block\"}}> PDF</span></a>                   \n        </div>\n       </>\n      )\n    }else{\n      return(\n        <>\n        <div className=\"row\">\n          <div>\n            <button style={{marginTop:\"1.25rem\",marginLeft:\"0.938rem\", height:\"3.875rem\",width:\"9.063rem\"}} type=\"button\" className=\"btn btn-outline-info\"><img style={{marginTop:\"0.438rem\",marginRight:\".5rem\",width:'32%'}} alt=\"schedule\" src={schedule}/>Schedule<span style={{marginTop:\"-1.125rem\",marginRight:\"-2.25rem\",display:\"block\"}}> Service</span></button>\n            <a href={`${baseURL}/api/kdfinder/csv/key-qty/${this.state.currentuser.id}/${this.state.isSelected}/`} style={{marginTop:\"1.25rem\",marginLeft:\"0.938rem\",height:\"3.875rem\",width:\"10.25rem\"}} \n                   className=\"btn btn-outline-success\">\n                  <img style={{marginTop:\"0.438rem\",marginRight:\"0.5rem\",marginLeft:\"-.25rem\",width:'20%'}} alt=\"csv\" src={csv}/>\n                  Export System <span style={{marginTop:\"-1.125rem\",marginRight:\"2.25rem\",display:\"block\"}}>CSV </span>\n            </a>\n            <a href={`${baseURL}/api/kdfinder/pdf/key-qty/${this.state.currentuser.id}/${this.state.isSelected}/`} style={{marginTop:\"1.25rem\",marginLeft:\"0.938rem\",marginRight:\"-4.688rem\",height:\"3.875rem\",width:\"11.813rem\"}} type=\"button\" className=\"btn btn-outline-danger\"><img style={{marginTop:\"0.438rem\",marginRight:\"1px\",marginLeft:\"-1px\",width:'17%'}} alt=\"pdf\" src={image}/> Download System<span style={{marginTop:\"-1.125rem\",marginRight:\"3.875rem\",display:\"block\"}}> PDF</span></a>  \n             \n          </div>\n          <div className=\"col-4\" style={{marginTop:\"0.625rem\",marginLeft:\"27.5rem\"}}>\n                <Select\n                    values={this.state.isSelected}\n                    onChange={this.handleChange }\n                    className=\"dropdown\"\n                    options={this.state.file}\n                    placeholder={this.state.isSelected}\n                    styles={this.colourStyles}\n                    isSearchable\n                />\n          </div>\n        </div>\n        </>\n      )\n    }\n  }   \n\n  \n\n  renderkeys=()=>{\n    if(this.state.edit){\n      return(\n        <>\n       <div style={{display:\"block\",float:\"right\",marginLeft:\"-0.938rem\",marginTop:\"-0.625rem\"}}>\n              <img alt=\"broken\" style={{width:'1rem'}} src={brokenkey}/><span style={{marginLeft:\"0.75rem\",color:\"#0D93C9\"}}>Broken key</span>\n              <img alt=\"questionmark\" style={{marginLeft:\"1rem\",width:'0.6rem'}} src={questionmark}/><span style={{marginLeft:\"0.75rem\",marginRight:\"2.5rem\",color:\"#FF6B6B\"}}>Key Lost</span>\n        </div>\n       </>\n      )\n    }else{\n      return(\n        <>\n        </>\n      )\n    }\n  }   \n\n  modal = () =>{\n    this.setState({modalIsOpen:false});\n  }\n\n  addToast=(mes:any)=>{\n    this.toast.current.show({severity: 'success', detail: mes});\n  }\n  changeModal = () =>{\n    this.setState({modalIsOpen:false});\n  }\n\n  renderModal = () =>{\n    return( \n      <>\n      <div style={{textAlign:'right'}}>\n                  <img alt=\"cancel\" style={{width:'1.875rem',cursor:'pointer'}} onClick={this.closeModal} src={cancel}/>\n                </div>\n    <KeyRequest modal={this.modal}  addtoast={this.addToast} />\n    </>\n    )\n  }\n\n  request = () => {\n    this.setState({modalIsOpen:true});\n  }\n\n  onPageChange = (event:any) => {\n    this.setState({offset:event.first,limit:event.rows});\n    this.fetchedData(event.first,event.rows,this.state.isSelected);\n}\n\ncloseModal = () =>{\n  this.setState({modalIsOpen:false});\n}\n  \n  \n  render(){\n    \n  const lastLoginDate  = this.state.currentuser.last_login? new Date(this.state.currentuser.last_login).toLocaleDateString(): '';\n  const lastUpdatedDate = this.state.currentuser.last_modified? new Date(this.state.currentuser.last_modified).toLocaleDateString(): \"\";\n\n      return (\n        <>\n          <div>\n          {\n            this.state.loading  ? <div className='overlay-box1'>\n            <FadeLoader css={override} color={\"rgb(0, 158, 214)\"} loading={this.state.loading}  height={30} width={5} radius={2} margin={20} />\n        </div> :''\n          }\n          <Toast ref={this.toast} />\n                <Modal style={this.customStyles} isOpen={this.state.modalIsOpen} onRequestClose={this.closeModal}>{this.renderModal()}</Modal>\n            <div className=\"upper1\" >\n              <div className=\"row\">\n                  <div style={{marginTop:\"0.6rem\",marginLeft:\"1.25rem\"}} className=\"col-4\">\n                      <p><span style={{color:\"#009DD0\",fontSize:\"1.5rem\"}}><span style={{fontWeight:\"bold\", marginRight:\".6rem\"}}>Welcome</span>{this.state.currentuser.first_name} {this.state.currentuser.last_name}</span></p>\n                      <p> Your last log in was on :  <strong>{lastLoginDate}</strong></p>\n                      <p>Last Updated:  <strong>{lastUpdatedDate}</strong></p>\n                  </div>   \n                  <div className=\"col-8\" style={{marginLeft:\"22.5rem\",marginTop:\"-9.375rem\"}}>\n                    {this.renderEdit()}\n                    {this.renderkeys()}\n                    \n                  </div> \n              </div>\n            </div>\n            <div className=\"content\" >\n          <table className=\"table\" style={{backgroundColor:\"#fff\"}}>\n            <thead style={{ color: \"#fff\",backgroundColor:\"#12739A\" }}>\n              <tr>\n                <th data-visible=\"true\" >Key ID Stamp</th>\n                <th>Key Description</th>\n                <th>QTY Cut</th>\n                <th style={{textAlign:\"right\"}}>Actions</th>\n              </tr>\n            </thead>\n            <tbody>\n            {this.state.data.map((item: any,i: any)=>{\n             return(\n               <>\n              <tr key={i}>\n                <td><span onClick={()=>this.details(item,i)} style={{cursor:\"pointer\",color:\"#009ED6\",textDecoration:\"underline\"}}>{item.key_id}</span></td>\n                <td>{item.key_description}</td>\n                <td>{item.quantity}</td>\n                <td style={{textAlign:\"right\"}}>\n                  <img alt=\"keyrequest\" style={{marginLeft:\"0.938rem\",cursor:\"pointer\",width:'1.5rem'}} onClick={this.request} src={shopping}/>\n                  {<a href={`${baseURL}/api/kdfinder/csv/key-sequence/${this.state.currentuser.id}/${this.state.isSelected}/${item.id}/`} ><img alt=\"csv1\" style={{marginLeft:\"0.938rem\",cursor:\"pointer\",width:'1.3rem'}} src={csv1}/></a>}\n                  {<a href={`${baseURL}/api/kdfinder/pdf/key-sequence/${this.state.currentuser.id}/${this.state.isSelected}/${item.id}/`} ><img alt=\"pdf1\" style={{marginLeft:\"0.938rem\",cursor:\"pointer\",width:'1.3rem'}} src={image}/></a>}\n\n                </td>\n              </tr>\n             \n                   {this.renderEditForm(item.showDetails,i)}\n                \n              </>\n              )})}\n            </tbody>\n            <tr>\n                 <td colSpan={6}>\n                  <Paginator first={this.state.offset} rows={this.state.limit} totalRecords={this.state.totalRecords} rowsPerPageOptions={[10, 20, 30]} \n                  template=\"RowsPerPageDropdown CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink \"\n                  onPageChange={this.onPageChange}></Paginator>\n                  </td>\n                  </tr>\n            </table>\n            </div>\n          </div>\n        </>\n      );\n    }\n  }\n\n\nexport default ViewKeys;  ","/Users/mac/Desktop/customer_portal_cls/locks&keys_frontend/src/component/sidebar/EditUserInformation.tsx",[],"/Users/mac/Desktop/customer_portal_cls/locks&keys_frontend/src/component/sidebar/ViewKeysDetails.tsx",[],"/Users/mac/Desktop/customer_portal_cls/locks&keys_frontend/src/component/sidebar/AddNewUser.tsx",["167","168"],"import React, { useEffect, useState } from 'react'\nimport { useHistory } from 'react-router';\nimport axiosInstance from '../../api/api';\nimport save from '../icons/floppy-disk.svg';\n//import MultiSelect from \"react-multi-select-component\";\nimport { Toast } from 'primereact/toast';\nimport { useRef } from 'react';\nimport Select from 'react-select';\nimport FadeLoader from \"react-spinners/FadeLoader\";\nimport { css } from \"@emotion/core\";\n\nconst override = css`\n  margin: 0 auto;\n  border-color: red;\n  background-color: #ccc;\n  top:40%;\n  margin-left:-16%;\n`;\n\nconst validEmailRegex = RegExp(\n    /^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i\n  );\n\nlet AddNewUser = (props:any) =>{\n    let history = useHistory();\n    const toast: any = useRef();\n    const initialFormData = Object.freeze({\n        first_name:'',\n        last_name:'',\n        email: '',\n        phone:'',\n        key_finder:false,\n        service_request:false,\n        inv_statements:false,\n        quotes: false,\n        hs_signatory:false,\n        add_user:false,\n        audit:false,\n    });\n    const [formData, setFormData] = useState(initialFormData);\n    const [file, setFile] = useState<any>([]);\n    const [selected, setSelected] = useState<any>([]);\n    const [loading, setLoading] = useState<any>(false);\n\n    const options = file.map((item: any,i: any)=>{ \n            return (\n            { label: item.file_number+((item.location===null)?'':\" - \"+item.location), value: item.id})\n      });\n\n\n    const handleChange = (event:any) => {\n        setSelected(Array.isArray(event) ? event.map(x => x.value) : []);\n      }\n\n    const handleInputChange = (e: { target: { name: any; value: any; }; }) =>{\n        let name = e.target.name;\n        let value = e.target.value;\n        setFormData({...formData,[name]:value});\n        \n    };\n    const handleCheckboxChange = (e: { target: { name: any; checked:any }; }) =>{\n        let name = e.target.name;\n        let checked = e.target.checked;\n        setFormData({...formData,[name]:checked});\n        \n    };\n\n    useEffect(() =>{\n        const fetchDataAsync = async () => {\n            try {\n                const api = '/api/customer/user/file-numbers/';\n                let response = await axiosInstance.get(api, { headers: {\"Authorization\" : `Bearer ${localStorage.getItem('access_token')}`} });\n                setFile(response.data.data);\n                return file;\n            }catch(error){\n                throw error;\n            }\n         }   \n         fetchDataAsync()\n      },[]);\n    \n\n    function cancel() {\n        props.addnewuser(false);\n    \n       }\n\n       const formValidation = () =>{\n        let isValid = true;\n        const node = toast.current;\n        let numbers = /[0-9]/g;\n         if(formData.first_name === ''){\n            if(node){\n                node.show({severity: 'error',  detail: \"Please enter First Name\"});\n                }\n            isValid = false;\n         }else if(formData.last_name === ''){\n            if(node){\n                node.show({severity: 'error',  detail: \"Please enter Last Name\"});\n                }\n            isValid = false;\n         }else if(formData.email=== ''){\n            if(node){\n                node.show({severity: 'error',  detail: \"Please enter Email Address\"});\n                }\n            isValid = false ;\n        }else if(!validEmailRegex.test(formData.email)){\n            if(node){\n                node.show({severity: 'error',  detail: \"Please enter a valid Email Address\"});\n                }\n            isValid = false ;\n        }else if(formData.phone === ''){\n            if(node){\n                node.show({severity: 'error',  detail: \"Please enter Phone Number\"});\n                }\n            isValid = false ;\n        }else if(!formData.phone.match(numbers)){\n            if(node){\n                node.show({severity: 'error',  detail: \"Please enter a valid Phone Number\"});\n                }\n            isValid = false ;\n        }\n        return isValid\n    }\n\n\n    const handleSubmit = (e:any) => {\n\t\te.preventDefault();\n        let isValid = formValidation();\n        if(isValid){\n        try{\n            setLoading(true);\n        axiosInstance\n\t\t\t.post(`/api/customer/manage/user/`, {\n                first_name:formData.first_name,\n                last_name:formData.last_name,\n                email:formData.email,\n                file_numbers:selected,\n                phone:formData.phone,\n                useraccess:\n                 {\n                    key_finder: formData.key_finder,\n                    service_request: formData.service_request,\n                    inv_statements:formData.inv_statements,\n                    quotes: formData.quotes,\n                    hs_signatory:formData.hs_signatory,\n                    add_user:formData.add_user,\n                    audit:formData.audit,\n                } ,\n                method: \"post\"\n            },{ headers: {\"Authorization\" : `Bearer ${localStorage.getItem('access_token')}`} }\n            )\n\t\t\t.then((res) => {\n                let node = toast.current;\n                if(res.data.status===200){\n                    setLoading(false);\n                    props.addnewuser(false);\n                    props.addtoast();\n                    setFormData({...formData, \n                        first_name:'',\n                        last_name:'',\n                        email: '',\n                        phone:'',\n                        key_finder:false,\n                        service_request:false,\n                        inv_statements:false,\n                        quotes: false,\n                        hs_signatory:false,\n                        add_user:false,\n                        audit:false,\n                     });\n                     setSelected([]);\n                   \n                   \n                } else {\n                    setLoading(false);\n                    if(node){\n                    node.show({severity: 'error',  detail: res.data.message});\n                    }\n                }\n            })\n            .catch((error)=>{\n                setLoading(false);\n                if(toast.current){\n                toast.current.show({severity: 'error',  detail: \"Server error try again\"});\n                }\n                \n            })\n           \n        } catch(error){\n             throw error;\n        }\n    }\n    }\n \n        return(\n            <>\n            <div>\n            \n            <Toast ref={toast} />\n               <div style={{height:\"calc(100vh - 7rem)\",backgroundColor:'white'}} className=\"content\" >\n               {loading ? <div className='overlay-box1'>\n                    <FadeLoader css={override} color={\"rgb(0, 158, 214)\"} loading={loading}  height={30} width={5} radius={2} margin={20} />\n                </div> :''}\n                <div className=\"accordian\"> \n                    <div className=\"col-12\">\n                        <div className=\"row\">\n                                <div className=\"col-6\">\n                                    <p style={{color:\"#fff\",textAlign:\"left\",marginTop:\"0.6rem\"}}>Add New User</p>\n                                </div>\n                                <div className=\"col-6\">\n                                    <span className=\"detail-created\" onClick={handleSubmit} ><img style={{marginRight:\"0.5rem\",marginLeft:'0.625rem',width:'1rem'}} alt=\"save\" src={save} />Save</span>\n                                    <span className=\"detail-created\" onClick={cancel}>Cancel</span>\n                                </div>\n                        </div>\n                    </div>\n                </div><br/>\n                <div className=\"row\" style={{padding:\"20px\"}}>\n                    <div className=\"col-4\">\n                        <input type=\"text\" name=\"first_name\" className=\"form-control\" placeholder=\"Enter First Name *\" value={formData.first_name} onChange={handleInputChange}/>\n                    </div>\n                    <div className=\"col-4\">\n                        <input type=\"text\" name=\"last_name\" className=\"form-control\" placeholder=\"Enter Last Name *\" value={formData.last_name} onChange={handleInputChange}/>\n                    </div>\n                    <div className=\"col-4\">\n                        <input type=\"text\" name='email' className=\"form-control\" placeholder=\"Enter Email ID *\" value={formData.email} onChange={handleInputChange}/>\n                    </div>\n                    </div>\n                    <div className=\"row\" style={{padding:\"1.25rem\"}}>\n                    <div className=\"col-4\">\n                        {/* <MultiSelect\n                            options={options}\n                            value={options.filter((obj: { value: any; }) => selected.includes(obj.value))} \n                            onChange={handleChange}\n                            labelledBy={\"Select\"}\n                        /> */}\n                        <Select\n                            className=\"dropdown\"\n                            placeholder=\"Select System Number *\"\n                            value={options.filter((obj: { value: any; }) => selected.includes(obj.value))} // set selected values\n                            options={options} // set list of the data\n                            onChange={handleChange} // assign onChange function\n                            isMulti\n                            isClearable\n                        />\n                    </div>\n                    <div className=\"col-4\">\n                        <input type=\"text\" name='phone' className=\"form-control\" placeholder=\"Phone Number *\" value={formData.phone} onChange={handleInputChange}/>\n                    </div>\n                    <div>\n                </div>\n                \n                </div>\n                <br></br>\n                \n                <div  style={{backgroundColor:'#fff'}}>\n                \n                <div className=\"form-check\">\n                    <div className=\"row\">\n                        <div  style={{backgroundColor:\"\t#F0F0F0\",marginLeft:\"-1.5rem\",marginBottom:\"1.25rem\", height:\"3.125rem\"}} className=\"col-12\">\n                            <span style={{float:\"left\",fontWeight:500,fontSize:\"1.1rem\",padding:\"0.625rem\"}}>Assign Permissions</span>\n                        </div>\n                        \n                        <div className=\"col-4\">\n                            <input style={{height:\"1.375rem\",width:\"1.375rem\",cursor:'pointer'}} name=\"key_finder\" checked={formData.key_finder} className=\"form-check-input\" type=\"checkbox\"  id=\"flexCheckDefault\" onChange={handleCheckboxChange} disabled={!props.permissions.key_finder}/>\n                            <label style={{paddingLeft:\"1.1em\",marginTop:\"0.25rem\"}} className=\"form-check-label\" >\n                               Manage Keys\n                            </label>\n                        </div>\n                        <div className=\"col-4\">\n                            <input style={{height:\"1.375rem\",width:\"1.375rem\",cursor:'pointer'}} name=\"service_request\" checked={formData.service_request}  className=\"form-check-input\" type=\"checkbox\"  id=\"flexCheckDefault1\" onChange={handleCheckboxChange} disabled={!props.permissions.service_request}/>\n                            <label style={{paddingLeft:\"1.1em\",marginTop:\"0.25rem\"}} className=\"form-check-label\" >\n                                Request Service\n                            </label>\n                        </div>\n                        <div className=\"col-4\">\n                            <input style={{height:\"1.375rem\",width:\"1.375rem\",cursor:'pointer'}} name=\"inv_statements\" checked={formData.inv_statements} className=\"form-check-input\" type=\"checkbox\"  id=\"flexCheckDefault2\" onChange={handleCheckboxChange} disabled={!props.permissions.inv_statements}/>\n                            <label style={{paddingLeft:\"1.1em\",marginTop:\"0.25rem\"}} className=\"form-check-label\" >\n                                Pay Bills\n                            </label>\n                        </div>\n                    </div><br></br>\n                    <div className=\"row\">\n                        <div className=\"col-4\">\n                            <input style={{height:\"1.375rem\",width:\"1.375rem\",cursor:'pointer'}}  name=\"quotes\"  className=\"form-check-input\" type=\"checkbox\"  checked={formData.quotes} id=\"flexCheckDefault3\" onChange={handleCheckboxChange} disabled={!props.permissions.quotes}/>\n                            <label style={{paddingLeft:\"1.1em\",marginTop:\"0.25rem\"}} className=\"form-check-label\" >\n                                Accept Quotes\n                            </label>\n                        </div>\n                        <div className=\"col-4\">\n                            <input style={{height:\"1.375rem\",width:\"1.375rem\",cursor:'pointer'}} name=\"hs_signatory\" checked={formData.hs_signatory} className=\"form-check-input\" type=\"checkbox\"  id=\"flexCheckDefault4\" onChange={handleCheckboxChange} disabled={!props.permissions.hs_signatory}/>\n                            <label style={{paddingLeft:\"1.1em\",marginTop:\"0.25rem\"}} className=\"form-check-label\" >\n                                Key Authorizers\n                            </label>\n                        </div>\n                    </div><br></br>\n                    <div className=\"row\" >\n                        <div className=\"col-4\" style={{paddingBottom:'1.3rem',cursor:'pointer'}}>\n                            <input style={{height:\"1.375rem\",width:\"1.375rem\"}} name=\"add_user\" checked={formData.add_user}  className=\"form-check-input\" type=\"checkbox\"  id=\"flexCheckDefault5\" onChange={handleCheckboxChange} disabled={!props.permissions.add_user}/>\n                            <label style={{paddingLeft:\"1.1em\",marginTop:\"0.25rem\"}} className=\"form-check-label\" >\n                                Users\n                            </label>\n                        </div>\n                        <div className=\"col-4\"  >\n                            <input style={{height:\"1.375rem\",width:\"1.375rem\",cursor:'pointer'}} name=\"audit\" checked={formData.audit} className=\"form-check-input\" type=\"checkbox\"  id=\"flexCheckDefault6\" onChange={handleCheckboxChange}  disabled={!props.permissions.audit}/>\n                            <label style={{paddingLeft:\"1.1em\",marginTop:\"0.25rem\"}} className=\"form-check-label\" >\n                                Audit Trails\n                            </label>\n                        </div>\n                    </div>\n                </div>\n                </div>\n                </div>\n            </div>\n            </>\n        );\n    }\nexport default AddNewUser;\n","/Users/mac/Desktop/customer_portal_cls/locks&keys_frontend/src/component/sidebar/Accounting.tsx",["169","170"],"import React from 'react';\nimport AccountingDetails from './AccountingDetails';\nimport viewa from '../icons/viewa.svg';\nimport axiosInstance, {baseURL} from '../../api/api';\nimport FadeLoader from \"react-spinners/FadeLoader\";\nimport { css } from \"@emotion/core\";\nimport dollar from '../icons/dollar.svg';\nimport cancel from '../icons/cancel.svg';\nimport question from '../icons/question-mark.svg';\nimport Modal from 'react-modal';\nimport { Toast } from 'primereact/toast';\nimport { Paginator } from 'primereact/paginator';\nimport { DataTable } from 'primereact/datatable';\nimport { Column } from 'primereact/column';\nimport Payment from './Payement/Payment';\nimport  jsPDF from \"jspdf\";\nimport 'jspdf-autotable';\nimport { autoTable } from 'jspdf-autotable';\nimport image from '../icons/pdf-1.svg';\n\nconst override = css`\n  margin: 0 auto;\n  border-color: red;\n  background-color: transparent;\n  top:40%;\n  margin-left:-16%;\n`;\n\ninterface Props{\n    edit:boolean;\n    data:any;\n    loc_no:any;\n    last_name: any;\n    cus_no:any;\n    terms:any;\n    total_amount:any;\n    loading : boolean;\n    modalIsOpen:any;\n    invoiceModalIsOpen:any;\n    allInvoiceModalIsOpen:any;\n    address :any;\n    location:any;\n    amount :any;\n    message:any;\n    offset: any;\n    perPage: any;\n    totalRecords: any;\n    pageCount:any;\n    tableData :any;\n    allInvoice:any;\n    selectedProducts:any;\n    selectedAmount:any;\n    card:boolean;\n    invoiceLocation:any;\n    invoiceAddress:any;\n    invoiceLoc_no:any;\n    selectedAllProducts:any;\n    selectedAllAmount:any;\n    over_30:any;\n    over_60:any;\n    over_90:any;\n  }\nclass Accounting extends React.Component<{},Props> {\n  mytoast: React.RefObject<any>;\n    constructor(props:Props){\n        super(props);\n        this.mytoast = React.createRef();\n        this.state={\n          edit:false,\n          data: [],\n          loc_no:'',\n          last_name : '',\n          cus_no :'',\n          terms:'',\n          total_amount:'',\n          over_30:'',\n          over_60:'',\n          over_90:'',\n          loading : false,\n          modalIsOpen: false,\n          invoiceModalIsOpen:false,\n          allInvoiceModalIsOpen:false,\n          address : '',\n          location : '',\n          amount : '',\n          message: '',\n            offset: 0,\n            perPage: 10,\n            totalRecords: 0,\n            pageCount:0,\n            tableData : [],\n            allInvoice:[],\n            selectedProducts: null,\n            selectedAmount: 0,\n            selectedAllProducts:null,\n            selectedAllAmount:0,\n            card:false,\n            invoiceLocation:'',\n            invoiceAddress:'',\n            invoiceLoc_no:'',\n        }}\n\n        customStyles = {\n            content : {\n              top                   : '50%',\n              left                  : '50%',\n              right                 : 'auto',\n              bottom                : 'auto',\n              marginRight           : '-20%',\n              transform             : 'translate(-50%, -50%)',\n              width                 : '31.5rem',\n              height                : '33.75rem'\n            }\n          };\n          invoiceStyles = {\n            content : {\n              top                   : '50%',\n              left                  : '50%',\n              right                 : 'auto',\n              bottom                : 'auto',\n              marginRight           : '-20%',\n              transform             : 'translate(-50%, -50%)',\n              width                 : '46.875rem',\n              height                : '37.5rem',\n            }\n          };\n\n\n         exportPDFinvoices = async() => {\n          /* try {\n            const api = 'customer/accounting/all/invoice/';\n            this.setState({loading:true});\n            let response = await axiosInstance.get(api, { headers: {\"Authorization\" : `Bearer ${localStorage.getItem('access_token')}`} });\n\n        }catch(error){\n            const node = this.mytoast.current;\n            this.setState({loading : false});\n            if(node){\n                node.show({severity: 'error', detail: 'Server Error'});\n            }\n            throw error;\n        } */\n        /* const unit = \"pt\";\n          const size = \"A4\"; // Use A1, A2, A3 or A4\n          const orientation = \"portrait\"; // portrait or landscape\n          const marginLeft = 40;\n          const doc = new jsPDF(orientation, unit, size);\n          doc.setFontSize(15);\n      \n          const title = \"Invoices\";\n          const headers = [[\"Location Name\", \"Address\"]];\n          const data = this.state.data.map((item:any)=> [item.location, item.address]);\n      \n          let content = {\n            startY: 50,\n            head: headers,\n            body: data\n          };\n          doc.text(title, marginLeft, 40);\n          (doc as jsPDF & { autoTable: autoTable }).autoTable (content);\n          doc.save(\"Invoices.pdf\");  */\n      };\n           \n\n        exportPDFsingleinvoices = async(location:any,address:any,loc_no:any) => {\n\n          this.setState({loading:true});\n            try {\n              const api = `/api/customer/invoice/payment/${loc_no}/`;\n              let response = await axiosInstance.get(api, { headers: {\"Authorization\" : `Bearer ${localStorage.getItem('access_token')}`} });\n              \n              if(!(this.state.allInvoice === null))\n              {\n                  this.setState({loading : false});\n              }\n              const unit = \"pt\";\n          const size = \"A4\"; // Use A1, A2, A3 or A4\n          const orientation = \"portrait\"; // portrait or landscape\n          const marginLeft = 40;\n          const doc = new jsPDF(orientation, unit, size);\n          doc.setFontSize(15);\n      \n          const headers = [[\"Invoice number\", \"Amount\"]];\n          const data = response.data.map((item:any)=> [item.invoice, item.amount]);\n      \n          let content = {\n            startY: 100,\n            head: headers,\n            body: data\n          };\n          doc.text(`${location}`, marginLeft, 40);\n          doc.text(`${address}`, marginLeft, 80);\n          (doc as jsPDF & { autoTable: autoTable }).autoTable (content);\n          doc.save(\"Invoices.pdf\"); \n          }catch(error){\n              this.setState({loading : false});\n              throw error;\n          }\n          \n          \n        };\n\n        componentDidMount = async ()=>{\n            try {\n                \n                const api = '/api/customer/accounting/';\n                this.setState({loading:true});\n                let response = await axiosInstance.get(api, { headers: {\"Authorization\" : `Bearer ${localStorage.getItem('access_token')}`} });\n                this.setState({data:response.data.data.map((obj:any)=>{\n                    return({...obj, showDetails: false\n                    })\n                  })});\n                    let slice = response.data.data.slice(this.state.offset, this.state.offset + this.state.perPage);\n                    this.setState({pageCount: Math.ceil(response.data.data.length / this.state.perPage), totalRecords: response.data.data.length});\n                    this.setState({tableData:slice.map((obj:any)=>{\n                        return({...obj, showDetails: false\n                        })\n                      })});\n                if(!(this.state.data.length === 0))\n                {\n                    this.setState({loading : false});\n                }else {\n                  this.setState({loading : false});\n                  this.mytoast.current.show({severity: 'error',  detail: 'No record found'});\n                }\n                this.setState({last_name:response.data.last_name, cus_no: response.data.cus_no, terms:response.data.terms, total_amount:response.data.total_amount, over_30:response.data.over_30, over_60:response.data.over_60, over_90:response.data.over_90})\n            }catch(error){\n                const node = this.mytoast.current;\n                this.setState({loading : false});\n                if(node){\n                    node.show({severity: 'error', detail: 'Server Error'});\n                }\n                throw error;\n            }\n        }\n\n        formValidation = () =>{\n          let isValid = true;\n          if(this.state.message === ''){\n                  this.mytoast.current.show({severity: 'error', detail: \"Please enter Description\"});\n              isValid = false;\n           }\n          return isValid\n      }\n\n         handleSubmit = (e:any) => {\n            e.preventDefault();\n            let isValid = this.formValidation();\n            if(isValid){\n            this.setState({loading:true});\n            try{\n            axiosInstance\n                .post(`/api/customer/accounting/help/`, {\n                    location:this.state.location,\n                    loc_no:this.state.loc_no,\n                    address:this.state.address,\n                    amount:this.state.amount,\n                    message:this.state.message,\n                },{ headers: {\"Authorization\" : `Bearer ${localStorage.getItem('access_token')}`} }\n                )\n                .then((res) => {\n                  this.setState({loading:false});\n                    const node = this.mytoast.current;\n                    if(res.data.status===200){\n                        if(node){\n                            node.show({severity: 'success',  detail: 'Query Send Successfully'});\n                        }\n                        this.setState({message:'',modalIsOpen:false});\n                    } else {\n                        if(node){\n                          node.show({severity: 'error',  detail: 'Something went wrong, please contact to Calgary Lock and Safe'});\n                        }\n                    }\n                })\n                .catch((error)=>{\n                  this.setState({loading:false});\n                    const node = this.mytoast.current;\n                    if(node){\n                        node.show({severity: 'error',  detail: 'Something went wrong'});\n                      }\n                })\n               \n            } catch(error){\n                 throw error;\n            }\n          }\n        }\n\n        onPageChange = (event:any) => {\n          let offset = event.first;\n          let perPage = event.rows;\n          this.setState({offset:offset, perPage:perPage});\n          let slice = this.state.data.slice(offset, offset + perPage);\n          this.setState({tableData:slice});\n      }\n\n        details=(loc_no:any,id:any)=> {\n          \n            const updatedData = this.state.tableData.map((obj:any,i:number)=>{\n              if(i===id){\n                if(obj.showDetails=== false){\n                  this.setState({loading:true});\n                }\n              }\n                if(i===id){\n                  obj.showDetails = true;\n                }else{\n                  obj.showDetails = false;\n                }\n                return {...obj}\n                });\n              this.setState({tableData :updatedData});\n            //this.setState({edit:true});\n            this.setState({loc_no:loc_no});\n           };\n\n           loadt = () =>{\n            this.setState({loading:true});\n          }\n           load = () =>{\n             this.setState({loading:false});\n           }\n        \n           renderEditForm=(show:any,id:any)=>{\n            if(show){\n              return(\n                <>\n                <tr style={{height:\"0px\"}}>\n                    <td colSpan={4}>\n                        <AccountingDetails load={this.load} loadt={this.loadt} locationNo={this.state.loc_no} cus_no={this.state.cus_no}/>\n                     </td>\n                </tr>\n               </>\n              )\n            }\n          } \n\n          renderModal = () =>{ \n            return(\n                <>\n                <div>\n                <div style={{textAlign:'right'}}>\n                  <img alt=\"cancel\" style={{width:'1.875rem',cursor:'pointer'}} onClick={this.closeModal} src={cancel}/>\n               </div>\n                <div style={{marginLeft:'0.938rem'}}>\n                    <div className=\"form-group row\">\n                        <label htmlFor=\"staticEmail\" style={{color:\"#888888\", fontSize:'0.875rem'}} className=\"col-4 col-form-label\">Location:</label>\n                        <div className=\"col-sm-6\">\n                           <span style={{fontSize:'0.875rem' , color:'#000000'}} className=\"form-control-plaintext\">{this.state.location}</span>\n                        </div>\n                    </div>  \n                    <div className=\"form-group row\">\n                        <label style={{color:\"#888888\", fontSize:'0.875rem'}}  className=\"col-sm-4 col-form-label\">Address:</label>\n                        <div className=\"col-sm-6\">\n                           <span style={{fontSize:'0.875rem' , color:'#000000'}} className=\"form-control-plaintext\">{this.state.address}</span>\n                        </div>\n                    </div>\n                    <div className=\"form-group row\">\n                        <label style={{color:\"#888888\", fontSize:'0.875rem'}}  className=\"col-sm-4 col-form-label\">Location_number:</label>\n                        <div className=\"col-sm-6\">\n                           <span style={{fontSize:'0.875rem' , color:'#000000'}} className=\"form-control-plaintext\">{this.state.loc_no}</span>\n                        </div>\n                    </div>\n                    <div className=\"form-group row\">\n                        <label style={{color:\"#888888\", fontSize:'0.875rem'}}  className=\"col-sm-4 col-form-label\">Amount:</label>\n                        <div className=\"col-sm-6\">\n                           <span style={{fontSize:'0.875rem' , color:'#000000'}} className=\"form-control-plaintext\">{this.state.amount}</span>\n                        </div>\n                    </div>  <br></br>\n                    <div className=\"form-group\">\n                        <label htmlFor=\"exampleFormControlTextarea1\" style={{color:\"#888888\"}} >Request Description</label>\n                        <textarea className=\"form-control\" style={{width:'26.188rem', height:'7.375rem'}} id=\"exampleFormControlTextarea1\" name='message' value={this.state.message} onChange={(e)=>{this.setState({message : e.target.value})}}></textarea>\n                    </div>\n                    <div>\n                  <   button style={{backgroundColor:\"#009ED6\",width:\"26.188rem\", height:'2.5rem'}} onClick={this.handleSubmit} className=\"btn btn-primary\" type=\"submit\">Send</button>\n                  </div>\n                </div>\n                </div>\n                </>\n            )\n          }\n\n          totalSelectedAmount = async(e:any) =>{\n            let sel = e.value;\n            var sum = 0;\n            await this.setState({selectedProducts : sel});\n            this.state.selectedProducts.map((item:any)=>{\n               sum = sum + parseFloat(item.amount);\n            });\n            this.setState({selectedAmount:sum.toFixed(2)});\n          } \n          \n          totalAllSelectedAmount = async(e:any) =>{\n            let sel = e.value;\n            var sum = 0;\n            await this.setState({selectedAllProducts : sel});\n            this.state.selectedAllProducts.map((item:any)=>{\n               sum = sum + parseFloat(item.amount);\n            });\n            this.setState({selectedAllAmount:sum.toFixed(2)});\n          } \n\n          pay = () =>{\n            this.setState({card:true});\n          }\n          \n          cancelPay = () =>{\n            this.setState({card:false});\n          }\n\n          changeModal = () =>{\n            this.setState({invoiceModalIsOpen:false});\n          }\n\n          renderInvoiceModal = () =>{\n            if(this.state.card){\n              return (\n                <><div>\n                <div style={{textAlign:'right'}}>\n                  <img alt=\"cancel\" style={{width:'1.875rem',cursor:'pointer'}} onClick={this.closeModal} src={cancel}/>\n                </div>\n                <Payment invoiceLocation={this.state.invoiceLocation} \n                         invoiceAddress={this.state.invoiceAddress}\n                         selectedAmount={this.state.selectedAmount}\n                         selectedProducts={this.state.selectedProducts}\n                         loc_no={this.state.invoiceLoc_no}\n                         getItem={this.changeModal}\n                          />\n                <div style={{textAlign:'center'}}>\n                <button \n                  className=\"btn btn-outline-danger\"\n                  type=\"button\"><span className=\"MuiButton-label\" onClick={this.cancelPay} >Cancel</span><span\n                      className=\"MuiTouchRipple-root\"></span></button>\n                  </div>         \n                  </div>   \n                </>\n              )\n          }else{\n              return(\n                  <>\n                  <div>\n                  <div style={{textAlign:'right'}}>\n                      <img alt=\"cancel\" style={{width:'1.875rem',cursor:'pointer'}} onClick={this.closeModal} src={cancel}/>\n                  </div> \n                    <div className='row' style={{marginBottom:'1.25rem',marginTop:'-1.6rem'}}>\n                      <div className='col-2' style={{borderRight:'2px solid black',textAlign:'end'}}>\n                      <img alt='paylog' style={{width:'2.5rem'}} src='https://static.wixstatic.com/media/ebff0f_1022b7d5a7974f889c0d33e0de62d5b3~mv2.png/v1/crop/x_0,y_0,w_87,h_101/fill/w_92,h_100,al_c,lg_1,q_85/Logo.webp'/>\n                      </div>\n                      <div className='col-8'>\n                      <p style={{fontSize:\"1.7rem\",fontWeight:'bold',marginBottom:'.25rem'}}>CUSTOMER PAYMENT CENTER</p>\n                      </div>\n                    </div>\n                      <div style={{height:'60vh',overflow:'auto'}}>\n                      <DataTable value={this.state.allInvoice} selection={this.state.selectedProducts} onSelectionChange={this.totalSelectedAmount}>\n                        <Column selectionMode=\"multiple\" headerStyle={{ width: '3rem' }}></Column>\n                        <Column field=\"invoice\" header=\"Invoice Number\"></Column>\n                        <Column field=\"amount\" header=\"Balance\"></Column>\n                      </DataTable>\n                      </div>\n                      { (this.state.selectedProducts===null  || this.state.selectedProducts.length === 0 ) ?\n                      <div style={{textAlign:'right'}}>\n                       <button type=\"submit\" style={{backgroundColor:\"#009ED6\",borderColor:\"#009ED6\"}}\n                         className=\"btn btn-primary\" disabled>Pay Now  ${this.state.selectedAmount}</button>  \n                      </div> :\n                      <div style={{textAlign:'right'}}>\n                      {/* <button type=\"submit\" style={{backgroundColor:\"#009ED6\",borderColor:\"#009ED6\"}}\n                        className=\"btn btn-primary\" onClick={this.pay}>Pay Now  ${this.state.selectedAmount}</button>  */} \n                        <a href={'https://payments.calgarylockandsafe.com/'} style={{backgroundColor:\"#009ED6\",borderColor:\"#009ED6\"}}\n                        className=\"btn btn-primary\" >Pay Now  ${this.state.selectedAmount}</a>\n                     </div>\n                        }\n                  </div>\n                  </>\n              )\n          }\n          }\n\n          renderAllInvoiceModal = () =>{\n            if(this.state.card){\n              return (\n                <>\n                <div style={{textAlign:'right'}}>\n                  <img alt=\"cancel\" style={{width:'1.875rem',cursor:'pointer'}} onClick={this.closeModal} src={cancel}/>\n                </div>\n                <Payment invoiceALLLocation={this.state.last_name} \n                         selectedAmount={this.state.selectedAllAmount}\n                         selectedProducts={this.state.selectedAllProducts}\n                          />\n                <div style={{textAlign:'center'}}>\n                <button \n                  className=\"btn btn-outline-danger\"\n                  type=\"button\"><span className=\"MuiButton-label\" onClick={this.cancelPay} >Cancel</span><span\n                      className=\"MuiTouchRipple-root\"></span></button>\n                  </div>         \n                          \n                </>\n              )\n          }else{\n              return(\n                  <>\n                  <div>\n                  <div style={{textAlign:'right'}}>\n                     <img alt=\"cancel\" style={{width:'1.875rem',cursor:'pointer'}} onClick={this.closeModal} src={cancel}/>\n                  </div>\n                    <div className='row' style={{marginBottom:'1.25rem',marginTop:'-1.6rem'}}>\n                      <div className='col-2' style={{borderRight:'2px solid black',textAlign:'end'}}>\n                      <img alt='paylog' style={{width:'2.5rem'}} src='https://static.wixstatic.com/media/ebff0f_1022b7d5a7974f889c0d33e0de62d5b3~mv2.png/v1/crop/x_0,y_0,w_87,h_101/fill/w_92,h_100,al_c,lg_1,q_85/Logo.webp'/>\n                      </div>\n                      <div className='col-8'>\n                      <p style={{fontSize:\"1.7rem\",fontWeight:'bold',marginBottom:'.25rem'}}>CUSTOMER PAYMENT CENTER</p>\n                      </div>\n                    </div>\n                    <div>\n                      <p style={{paddingLeft:'3.25rem'}}><span style={{fontWeight:500}}>Location : </span>  {this.state.last_name}</p>\n                    </div>\n                      <div style={{height:'60vh',overflow:'auto'}}>\n                      <DataTable value={this.state.allInvoice} selection={this.state.selectedAllProducts} onSelectionChange={this.totalAllSelectedAmount}>\n                        <Column selectionMode=\"multiple\" headerStyle={{ width: '3rem' }}></Column>\n                        <Column field=\"invoice\" header=\"Invoice Number\"></Column>\n                        <Column field=\"amount\" header=\"Balance\"></Column>\n                      </DataTable>\n                      </div>\n                      { (this.state.selectedAllProducts===null || this.state.selectedAllProducts.length === 0 ) ?\n                      <div style={{textAlign:'right'}}>\n                       <button type=\"submit\" style={{backgroundColor:\"#009ED6\",borderColor:\"#009ED6\"}}\n                         className=\"btn btn-primary\" disabled>Pay Now  ${this.state.selectedAllAmount}</button>  \n                      </div> :\n                      <div style={{textAlign:'right'}}>\n                      {/* <button type=\"submit\" style={{backgroundColor:\"#009ED6\",borderColor:\"#009ED6\"}}\n                        className=\"btn btn-primary\" onClick={this.pay}>Pay Now  ${this.state.selectedAllAmount}</button>   */}\n                        <a href={'https://payments.calgarylockandsafe.com/'} style={{backgroundColor:\"#009ED6\",borderColor:\"#009ED6\"}}\n                        className=\"btn btn-primary\" >Pay Now  ${this.state.selectedAllAmount}</a>\n                     </div>\n                        }\n                  </div>\n                  </>\n              )\n          }\n          }\n\n          invoiceQuery = (location:any,address:any,amount:any,loc_no:any) => {\n            this.setState({message:''})\n            this.setState({location:location, address:address, amount:amount, loc_no:loc_no, modalIsOpen:true});\n          }\n\n          invoiceModal = async(loc_no:any,invoiceLocation:any, invoiceAddress:any) => {\n            this.setState({loading:true});\n            try {\n              const api = `/api/customer/invoice/payment/${loc_no}/`;\n              let response = await axiosInstance.get(api, { headers: {\"Authorization\" : `Bearer ${localStorage.getItem('access_token')}`} });\n              \n              this.setState({allInvoice : response.data});\n              if(!(this.state.allInvoice === null))\n              {\n                  this.setState({loading : false});\n              }\n          }catch(error){\n              this.setState({loading : false});\n              throw error;\n          }\n            this.setState({ invoiceModalIsOpen:true, invoiceAddress:invoiceAddress, invoiceLocation:invoiceLocation, invoiceLoc_no:loc_no});\n            \n          }\n\n          closeModal = () =>{\n            this.setState({modalIsOpen:false,invoiceModalIsOpen:false,allInvoiceModalIsOpen:false,card:false,allInvoice:[],selectedProducts: null,selectedAmount:0,selectedAllProducts:null,selectedAllAmount:0});\n          }\n\n\n          noInvoice = () =>{\n              const node = this.mytoast.current;\n              if(node){\n                node.show({severity: 'error', detail: 'No Invoice Pending'});\n            }\n          }\n\n          invoiceModalPayAll = async() => {\n            this.setState({loading:true});\n            try {\n              const api = `/api/customer/invoice/all/payment/`;\n              let response = await axiosInstance.get(api, { headers: {\"Authorization\" : `Bearer ${localStorage.getItem('access_token')}`} });\n              this.setState({allInvoice : response.data});\n              if(!(this.state.allInvoice === null))\n              {\n                  this.setState({loading : false});\n              }\n          }catch(error){\n              this.setState({loading : false});\n              throw error;\n          }\n            this.setState({ allInvoiceModalIsOpen:true,});\n            \n          }\n        \n    render(){\n        return(\n            <>\n            <div>\n              {\n                this.state.loading ? <div className='overlay-box1'>\n                <FadeLoader css={override} color={\"rgb(0, 158, 214)\"} loading={this.state.loading}  height={30} width={5} radius={2} margin={20} />\n             </div > :''\n              }\n            <Modal style={this.customStyles} isOpen={this.state.modalIsOpen} onRequestClose={this.closeModal}>{this.renderModal()}</Modal>\n            <Modal style={this.invoiceStyles} isOpen={this.state.invoiceModalIsOpen} onRequestClose={this.closeModal}>{this.renderInvoiceModal()}</Modal>\n            <Modal style={this.invoiceStyles} isOpen={this.state.allInvoiceModalIsOpen} onRequestClose={this.closeModal}>{this.renderAllInvoiceModal()}</Modal>\n            <Toast ref={this.mytoast} />\n                <div className=\"upper\" style={{height:\"11.5rem\"}}>\n                    <div className=\"row\" >\n                        <div className=\"col-4\" style={{height:'7rem'}}>\n                            <p style={{padding:\"20px\"}}><span className='heading'>{this.state.last_name}</span> \n                            <br></br><span className='heading'>{this.state.cus_no}</span></p>\n                        </div>\n                        <div className=\"col-8\">\n                            <div className=\"row\"  style={{marginLeft:\"-45px\"}}>\n                                <div className=\"card\" >\n                                    <div>\n                                        <p className=\"card-title\">Account Balance</p>\n                                        <p className=\"card-text\">${this.state.total_amount}</p>\n                                    </div>\n                                </div>\n                                <div className=\"card\">\n                                        <p className=\"card-title\">30 Days</p>\n                                        <p className=\"card-text\">${this.state.over_30}</p>\n                                </div>\n                                <div className=\"card\">\n                                        <p className=\"card-title\">60 Days</p>\n                                        { (this.state.over_60<1)?<p className=\"card-text\">${this.state.over_60}</p>:<p style={{color:'red'}} className=\"card-text\">${this.state.over_60}</p>}\n                                </div>\n                                <div className=\"card\">\n                                        <p className=\"card-title\">90 Days</p>\n                                        { (this.state.over_90<1)?<p className=\"card-text\">${this.state.over_90}</p>:<p style={{color:'red'}} className=\"card-text\">${this.state.over_90}</p>}\n                                </div>\n                                <div className=\"cardbutton\" style={{height:'3rem',cursor:'pointer',backgroundColor:\"#009ED6\",marginTop:'3.25rem'}} onClick={this.invoiceModalPayAll}>\n                                        <p style={{fontSize:'1.5rem',padding:'.3rem',color:'white'}} >Pay All</p>\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"cardNet\">\n                                        <p className=\"card-title\">Terms</p>\n                                        <p className=\"card-text\">{this.state.terms}</p>\n                                </div>\n                    </div>\n\n                </div>\n                <div className=\"content\">\n                <div className=\"accordian\"> \n                    <div className=\"col-12\">\n                        <div className=\"row\">\n                            <div className=\"col-6\">\n                                <p style={{color:\"#fff\",textAlign:\"left\",marginTop:\"10px\"}}>Invoices</p>\n                            </div>\n                            <div className='col-6'>\n                                <a href={`${baseURL}/api/customer/pdf/all/invoice/${this.state.cus_no}/`}><img data-toggle=\"tooltip\" data-placement=\"top\" title=\"all invoices\" alt=\"pdf1\" style={{cursor:\"pointer\",backgroundColor:'white',float:\"right\",width:'2rem',marginTop:'.25rem'}} src={image}/></a>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                \n                <table className=\"table table-striped\">\n                    <thead>\n                        <tr >\n                        <th style={{fontWeight:500}} scope=\"col\">Location Name</th>\n                        <th style={{fontWeight:500}} scope=\"col\">Address</th>\n                        <th style={{fontWeight:500}} scope=\"col\">Open Invoice</th>\n                        <th style={{fontWeight:500,textAlign:\"right\"}} scope=\"col\">Actions</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                       {this.state.tableData.map((item: any,i: any)=>{\n                         return(\n                             <>\n                        <tr key={i} >\n                        <td>{item.location}</td>\n                        <td>{item.address}</td>\n                         <td>$ {item.amount}</td>\n                        <td style={{textAlign:\"right\"}}>\n                           <img data-toggle=\"tooltip\" data-placement=\"top\" title=\"view invoices\" alt=\"eye\" style={{marginLeft:\"1rem\",cursor:\"pointer\",height:'1.8rem',width:'1.8rem'}} onClick={(item.amount===0 || item.amount==='0.00')? this.noInvoice  : ()=>this.details(item.loc_no,i)} src={viewa} />\n                           <img data-toggle=\"tooltip\" data-placement=\"top\" title=\"pay invoices\" alt=\"dollar\" style={{marginLeft:\"1rem\",cursor:\"pointer\",height:'1.5rem',width:'1.5rem'}} src={dollar} onClick={(item.amount===0 || item.amount==='0.00')? this.noInvoice  : ()=>this.invoiceModal(item.loc_no,item.location,item.address)}/>\n                           <img data-toggle=\"tooltip\" data-placement=\"top\" title=\"Help\" alt=\"question\" style={{marginLeft:\"1rem\",cursor:\"pointer\",height:'1.5rem',width:'1.5rem'}} onClick={()=>this.invoiceQuery(item.location ,item.address,item.amount,item.loc_no)} src={question}/>\n                           <img data-toggle=\"tooltip\" data-placement=\"top\" title=\"Invoices details\" alt=\"pdf1\" style={{marginLeft:\"1rem\",cursor:\"pointer\",width:'1.5rem',height:'1.5rem'}} onClick={() => this.exportPDFsingleinvoices(item.location ,item.address,item.loc_no)} src={image}/>\n                        </td>\n                        </tr>                                                                                                                                 \n                        {this.renderEditForm(item.showDetails,i)}\n                        </>\n                         )})}\n                          <tr>\n                            <td colSpan={10}>\n                            <Paginator first={this.state.offset} rows={this.state.perPage} totalRecords={this.state.totalRecords} rowsPerPageOptions={[10,20,30]} \n                            template=\"RowsPerPageDropdown CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink \"\n                            onPageChange={this.onPageChange}></Paginator>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n                \n                </div>\n            </div>\n            </>\n        );\n    }\n}\n\nexport default Accounting;","/Users/mac/Desktop/customer_portal_cls/locks&keys_frontend/src/component/sidebar/Quotations.tsx",["171","172"],"\nimport React from 'react';\nimport axiosInstance from '../../api/api';\nimport viewq from '../icons/viewq.svg';\nimport Select from \"react-select\";\nimport FadeLoader from \"react-spinners/FadeLoader\";\nimport { css } from \"@emotion/core\";\nimport Modal from 'react-modal';\nimport logopay from '../icons/logopay.png';\nimport QuotationDetails from './QuotationDetails';\nimport { Paginator } from 'primereact/paginator';\nimport { Toast } from 'primereact/toast';\n\nconst override = css`\n  margin: 0 auto;\n  border-color: red;\n  background-color: transparent;\n  top:40%;\n  margin-left:-16%;\n`;\ninterface Props{\n    data:any;\n    isSelected:any;\n    last_name:any;\n    cus_no:any;\n    loading : boolean;\n    loc_no : any;\n    offset: any;\n    perPage: any;\n    totalRecords: any;\n    pageCount:any;\n    tableData :any;\n  }\n\nclass Quotations extends React.Component<{},Props> {\n  toast: React.RefObject<any>;\n\n    constructor(props:Props){\n        super(props);\n        this.toast = React.createRef();\n        this.state={\n          data: [],\n          isSelected:\"\",\n          last_name:\"\",\n          cus_no:\"\",\n          loading : false,\n          loc_no : '',\n          offset: 0,\n          perPage: 10,\n          totalRecords: 0,\n          pageCount:0,\n          tableData : [],\n        }}\n\n        colourStyles ={\n            option: (provided:any) => ({\n              ...provided,\n              backgroundColor: this.state.isSelected ? 'white' : 'white',\n              color: this.state.isSelected ? 'black' : 'black',\n              \"&:hover\": {\n                backgroundColor: \"#ccc\",\n                cursor: 'pointer',\n              }\n            }),\n            control: (styles:any) => ({\n              ...styles,\n              cursor: 'pointer',\n              \n            }),\n            \n          }\n\n          customStyles = {\n            content : {\n              top                   : '50%',\n              left                  : '50%',\n              right                 : 'auto',\n              bottom                : 'auto',\n              marginRight           : '-20%',\n              transform             : 'translate(-50%, -50%)',\n              width                 : '46.875rem',\n              height                : '37.5rem'\n            }\n          };\n\n       \n        options = [\n            { value: 'pending', label: 'Open' },\n            { value: 'accepted', label: 'Accepted' },\n            { value: 'rejected', label: 'Rejected' },\n          ];\n\n          handleChange = (e:any) => {\n            //debugger\n            this.setState({isSelected: e.value});\n            this.fetchedData(e.value);\n          }\n\n        fetchedData= async(value:any)=>{\n            try {\n                this.setState({loading : true});\n                const token = localStorage.getItem('access_token');\n                const api = `/api/customer/quotations/${value}/`;\n                let response = await axiosInstance.get(api, { headers: {\"Authorization\" : `Bearer ${token}`} });\n                \n                this.setState({data:response.data.data.map((obj:any)=>{\n                    return({...obj, showDetails: false\n                    })\n                  }), last_name:response.data.last_name, cus_no:response.data.cus_no});\n                  \n                  let slice = response.data.data.slice(this.state.offset, this.state.offset + this.state.perPage);\n                    this.setState({pageCount: Math.ceil(response.data.data.length / this.state.perPage), totalRecords: response.data.data.length});\n                    this.setState({tableData:slice.map((obj:any)=>{\n                        return({...obj, showDetails: false\n                        })\n                      })});\n\n                if(!(this.state.data.length === 0))\n                {\n                    this.setState({loading : false});\n                }else {\n                  this.setState({loading : false});\n                  this.toast.current.show({severity: 'error',  detail: 'No record found'});\n\n                }\n                \n            }catch(error){\n                this.setState({loading : false});\n                throw error;\n            }\n\n        }\n\n        details=(loc_no:any,id:any)=> {\n            const updatedData = this.state.tableData.map((obj:any,i:number)=>{\n              if(i===id){\n                if(obj.showDetails=== false){\n                  this.setState({loading:true});\n                }\n              }\n                if(i===id){\n                  obj.showDetails = true;\n                }else{\n                  obj.showDetails = false;\n                }\n                return {...obj}\n                });\n              this.setState({tableData :updatedData});\n            this.setState({loc_no:loc_no});\n           };\n\n           cancel(id:any) {\n            const updatedData = this.state.tableData.map((obj:any,i:number)=>{\n                if(i===id){\n                  obj.showDetails = false;\n                }\n                return {...obj}\n            })\n            this.setState({tableData: updatedData});\n           }\n\n           load = () =>{\n            this.setState({loading:false});\n          }\n          loadt = () =>{\n            this.setState({loading:true});\n          }\n\n           renderEditForm=(show:any,id:any)=>{\n            if(show){\n              return(\n                <>\n                <tr style={{height:\"0px\"}}>\n                    <td colSpan={5}>\n                        <div className=\"accordian\"> \n                          <div className=\"col-12\">\n                              <div className=\"row\">\n                                  <div className=\"col-6\">\n                                      <p style={{color:\"#fff\",textAlign:\"left\",marginTop:\"10px\"}}>Quotes Details</p>\n                                  </div>\n                                  <div className=\"col-6\">\n                                    <span className=\"detail-created\" onClick={()=>this.cancel(id)} >Close</span>\n                                </div>\n                              </div>\n                          </div>\n                        </div>\n                        <QuotationDetails load={this.load} loadt={this.loadt} locationNo={this.state.loc_no} />\n                     </td>\n                </tr>\n               </>\n              )\n            }\n          } \n\n        componentDidMount = async ()=>{\n           this.fetchedData(\"pending\");\n        }\n\n        onPageChange = (event:any) => {\n        let offset = event.first;\n        let perPage = event.rows;\n        this.setState({offset:offset, perPage:perPage})\n        let slice = this.state.data.slice(offset, offset + perPage);\n        this.setState({tableData:slice.map((obj:any)=>{\n          return({...obj, showDetails: false\n          })\n        })});\n    }\n\n    render(){\n        return(\n            <>\n            <div>\n            <Toast ref={this.toast} />\n            {\n              this.state.loading ? <div className='overlay-box1'>\n              <FadeLoader css={override} color={\"rgb(0, 158, 214)\"} loading={this.state.loading}  height={30} width={5} radius={2} margin={20} />\n          </div> : ''\n            }\n                <div className=\"upper\">\n                    <div className=\"row\">\n                        <div className=\"col-6\">\n                            <p style={{padding:\"1.25rem\"}}><span className='heading'>{this.state.last_name}</span> \n                            <br></br><span className='heading'>{this.state.cus_no}</span></p>\n                        </div>\n                        <div style={{marginLeft:\"12.5rem\",marginTop:\"1.25rem\"}} className=\"col-3\">\n                            <label  htmlFor=\"inputState\">Filter By:</label>\n                            <Select\n                                values={this.state.isSelected}\n                                onChange={this.handleChange}\n                                className=\"dropdown\"\n                                options={this.options}\n                                placeholder=\"Open Quotes\"\n                                styles={this.colourStyles}\n                                isSearchable\n                            />\n                        </div>\n                    </div>\n                </div>\n                <div className=\"content\" >\n                <div className=\"accordian\"> \n                    <div className=\"col-12\">\n                        <div className=\"row\">\n                            <div className=\"col-6\">\n                                <p style={{color:\"#fff\",textAlign:\"left\",marginTop:\"0.625rem\"}}>Quotations</p>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <table  className=\"table table-striped\">\n                    <thead>\n                        <tr >\n                        <th style={{fontWeight:500}} scope=\"col\">Location Name</th>\n                        <th style={{fontWeight:500}} scope=\"col\">Address</th>\n                        <th style={{fontWeight:500,textAlign:\"center\"}} scope=\"col\">Open Quotes</th>\n                        <th style={{fontWeight:500,textAlign:\"right\"}} scope=\"col\">Actions</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.state.tableData.map((item: any,i: any)=>{\n                         return(\n                             <>\n                        <tr key={i}>\n                        <td>{item.location}</td>\n                        <td>{item.address}</td>\n                        <td style={{textAlign:\"center\"}} >{item.quotes}</td>\n                        <td style={{textAlign:\"right\"}}>\n                          <img data-toggle=\"tooltip\" data-placement=\"top\" title=\"View Quotes\" alt=\"eye\" style={{cursor:\"pointer\",width:'1.8rem'}} src={viewq} onClick={()=>this.details(item.loc_no,i)}/>\n                        </td>\n                        </tr>\n                        {this.renderEditForm(item.showDetails,i)}\n                        </>\n                         )})}\n                         <tr>\n                            <td colSpan={4}>\n                            <Paginator first={this.state.offset} rows={this.state.perPage} totalRecords={this.state.totalRecords} rowsPerPageOptions={[10,20,30]} \n                            template=\"RowsPerPageDropdown CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink \"\n                            onPageChange={this.onPageChange}></Paginator>\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n                </div>\n            </div>\n            </>\n        );\n    }\n}\n\nexport default Quotations;","/Users/mac/Desktop/customer_portal_cls/locks&keys_frontend/src/component/sidebar/CompanyDetailsSummary.tsx",[],"/Users/mac/Desktop/customer_portal_cls/locks&keys_frontend/src/component/sidebar/ServiceRequest.tsx",[],"/Users/mac/Desktop/customer_portal_cls/locks&keys_frontend/src/component/sidebar/SystemNumber.tsx",[],"/Users/mac/Desktop/customer_portal_cls/locks&keys_frontend/src/component/sidebar/KeyRequest.tsx",[],"/Users/mac/Desktop/customer_portal_cls/locks&keys_frontend/src/component/sidebar/AccountingDetails.tsx",["173","174"],"import React from 'react';\nimport viewa from '../icons/viewa.svg';\nimport axiosInstance, {baseURL} from '../../api/api';\nimport Modal from 'react-modal';\nimport logopay from '../icons/logopay.png';\nimport FadeLoader from \"react-spinners/FadeLoader\";\nimport { css } from \"@emotion/core\";\nimport Payment from './Payement/Payment';\nimport './Payement/Payment.css';\nimport cancel from '../icons/cancel.svg';\nimport image from '../icons/pdf-1.svg';\nimport * as _html2canvas from \"html2canvas\";\n\nconst override = css`\n  margin: 0 auto;\n  border-color: red;\n  background-color: transparent;\n  top:35%;\n  margin-left: 40rem;\n`;\ninterface Props {\n  invoiceData:any;\n  modalIsOpen:any;\n  loading : boolean;\n  invoicePop : any;\n  invoiceTable : any;\n  card: boolean;\n  invoiceNumber:Number;\n  invoiceAmount:Number;\n}\n\nclass AccountingDetails extends React.Component<{locationNo:any,cus_no:any,load:any,loadt:any},Props> {\n  constructor(props:any){\n    super(props);\n    this.state ={\n      invoiceData:[],\n      modalIsOpen : false,\n      loading : false,\n      invoicePop : [], \n      invoiceTable : [],\n      card: false,\n      invoiceNumber:0,\n      invoiceAmount:0,\n\n    }\n  }\n  customStyles = {\n    content : {\n      top                   : '50%',\n      left                  : '50%',\n      right                 : 'auto',\n      bottom                : 'auto',\n      marginRight           : '-20%',\n      transform             : 'translate(-50%, -50%)',\n      width                 : '46.875rem',\n      height                : '37.5rem'\n    }\n  };\n\n  exportPDFsingleinvoices = async() => {\n\n    try {\n      const api = `/api/customer/pdf/invoice/${this.state.invoicePop.cus_no}/${this.props.locationNo}/${this.state.invoicePop.invoice}/`;\n      this.setState({loading:true});\n      let response = await axiosInstance.get(api, { headers: {\"Authorization\" : `Bearer ${localStorage.getItem('access_token')}`} });\n\n  }catch(error){\n      throw error;\n  } \n    /* const unit = \"pt\";\n    const size = \"A4\"; // Use A1, A2, A3 or A4\n    const orientation = \"portrait\"; // portrait or landscape\n    const marginLeft = 40;\n    const doc1 :any = document.getElementById(\"invoice\");\n    const html2canvas: any = _html2canvas;\n     html2canvas(doc1).then((canvas:any)=>{\n            const imgData = canvas.toDataURL('image/png');\n            const pdf = new jsPDF(orientation, unit, size);\n            var width = pdf.internal.pageSize.getWidth();\n            var height = pdf.internal.pageSize.getHeight();\n            pdf.addImage(imgData, 'text', 30, 20, 500, 780);\n            pdf.save(\"invoice.pdf\");\n     }) */\n     \n  };\n\n  fetchedData = async() => {\n   // this.setState({loading : true});\n   try {\n     const api = `/api/customer/accounting/invoice/list/${this.props.locationNo}/`;\n     let response = await axiosInstance.get(api, { headers: {\"Authorization\" : `Bearer ${localStorage.getItem('access_token')}`} });\n     this.setState({invoiceData:response.data});\n     if(!(this.state.invoiceData === null))\n     {\n         this.setState({loading : false});\n         this.props.load();\n     }\n }catch(error){\n     this.setState({loading : false});\n     throw error;\n }\n  }\n\n  invoice = async(invoice_no:any) => {\n    //this.setState({loading : true});\n    this.props.loadt();\n    try {\n      const api = `/api/customer/accounting/invoice/${this.props.locationNo}/${invoice_no}/`;\n      let response = await axiosInstance.get(api, { headers: {\"Authorization\" : `Bearer ${localStorage.getItem('access_token')}`} });\n      this.setState({invoicePop:response.data,invoiceNumber:response.data.invoice, invoiceAmount:response.data.total});\n      this.setState({invoiceTable : response.data.data});\n      if(!(this.state.invoiceData === null))\n      {\n          this.setState({loading : false});\n          this.props.load();\n      }\n  }catch(error){\n      this.setState({loading : false});\n      this.props.load();\n      throw error;\n  }\n    this.setState({card:false});\n    this.setState({modalIsOpen:true});\n  }\n\n  pay = () =>{\n    this.setState({card:true});\n  }\n\n  cancelPay = () =>{\n    this.setState({card:false});\n  }\n\n\n  renderModal = () =>{ \n    if(this.state.card){\n        return (\n          <>\n           <div style={{textAlign:'right'}}>\n                  <img alt=\"cancel\" style={{width:'1.875rem',cursor:'pointer'}} onClick={this.closeModal} src={cancel}/>\n          </div>\n          <Payment invoice={this.state.invoiceNumber} amount={this.state.invoiceAmount} />\n          <div style={{textAlign:'center'}}>\n          <button \n            className=\"btn btn-outline-danger\"\n            type=\"button\"><span className=\"MuiButton-label\" onClick={this.cancelPay} >Cancel</span><span\n                className=\"MuiTouchRipple-root\"></span></button>\n            </div>    \n          </>\n        )\n    }else{\n      const invoice_date  = this.state.invoicePop.invoice_date? new Date(this.state.invoicePop.invoice_date).toLocaleDateString(): '';\n    return(\n      <>\n      <div className=\"row \">\n             <div className='col' style={{textAlign:'end'}}>\n              <a href={`${baseURL}/api/customer/pdf/invoice/${this.props.cus_no}/${this.props.locationNo}/${this.state.invoiceNumber}/`} ><img alt=\"pdf1\" style={{marginRight:'1rem',cursor:\"pointer\",width:'1.563rem',height:'1.563rem'}} src={image}/></a>\n               <img alt=\"cancel\" style={{width:'1.875rem',cursor:'pointer'}} onClick={this.closeModal} src={cancel}/>\n             </div>\n             \n          </div>\n        <div id='invoice'>\n          <div className='row'>\n            <div className='col-6'>\n              <p style={{textAlign:\"left\"}}>\n              <span style={{fontSize:\"1.25rem\",fontWeight:500,color:\"#5C5C5C\"}}>Billed To:</span><br></br>\n              <span style={{fontSize:\"1.25rem\",fontWeight:500}}>{this.state.invoicePop.name}</span><br></br>\n              <p style={{fontSize:\"1.063rem\",fontWeight:500,color:\"#5C5C5C\",width:\"12.625rem\",height:\"3.375rem\"}}>{this.state.invoicePop.address}</p>\n              <span style={{fontSize:\"1.25rem\",fontWeight:500}}>Customer# : {this.state.invoicePop.cus_no}</span><br></br>\n              </p>\n            </div>\n            <div className='col-6'>\n              <p style={{textAlign:\"right\"}}>\n              <span style={{fontSize:\"1.875rem\",fontWeight:500}}>Invoice</span><br></br>\n             <span style={{fontSize:\"1.25rem\",fontWeight:500}}> #{this.state.invoicePop.invoice}</span><br></br>\n              <span style={{fontSize:\"1rem\",fontWeight:500}}>{invoice_date}</span>\n              </p>\n            </div>\n          </div>\n          <table className=\"table\" style={{backgroundColor:\"#fff\"}}>\n            <thead style={{ color: \"#fff\",backgroundColor:\"#0D93C9\" }}>\n              <tr>\n                <th data-visible=\"true\" >Description</th>\n                <th>QTY</th>\n                <th>Each</th>\n                <th style={{textAlign:\"right\"}}>Amount</th>\n              </tr>\n            </thead>\n            <tbody>\n            {this.state.invoiceTable.map((item: any,i: any)=>{\n                return(\n              <tr >\n                <td >{item.desc}</td>\n                <td>{item.quantity}</td>\n                <td>$ {item.price}</td>\n                <td style={{textAlign:\"right\"}}>$ {item.amount}</td>\n              </tr>\n                  )})}\n            </tbody>\n            <tr>\n              <td colSpan={4}>\n                <div className='row'>\n                  <div className='col-6'>\n                    <p style={{cursor:\"pointer\",color:\"#009ED6\"}}>Term and Conditions</p>\n                  </div>\n                  <div className='col-6'>\n                    <p style={{textAlign:\"right\"}}>Sub Total : ${this.state.invoicePop.sub_total}<br></br>\n                    GST(2235785) : ${this.state.invoicePop.GST}<br></br>\n                    Total : ${this.state.invoicePop.total}<br></br>\n                     <span style={{fontWeight:500}}>Amount owning : ${this.state.invoicePop.total}</span>\n                    </p>\n                  </div>\n                </div>\n              </td>\n            </tr>\n            </table>\n        </div>\n        <div className='row'>\n              <div className='col-6'>\n                <img style={{width:'63%'}} alt=\"viewkeys\" src={logopay}/><br></br>\n                www.calgarylockandsafe.com\n              </div>\n              <div className='col-6'>\n              {/* <button style={{width:\"8.688rem\",height:\"2.813rem\",backgroundColor:\"#009ED6\",float:'right'}} className=\"btn btn-primary\" type=\"submit\" onClick={this.pay}>Pay Invoice</button> */}\n              <a href={'https://payments.calgarylockandsafe.com/'} style={{backgroundColor:\"#009ED6\",borderColor:\"#009ED6\",width:\"8.688rem\",height:\"2.813rem\",float:'right'}}\n                        className=\"btn btn-primary\" >Pay Invoices</a>\n              </div>\n            </div>\n        </>\n    )\n                }\n  }\n\n  closeModal = () =>{\n    this.setState({modalIsOpen:false});\n    this.setState({card:false});\n  }\n\n componentDidMount= async()=>{\n   this.fetchedData();\n }\n\n    render() {\n      return (\n          <>\n          <div>\n          {\n            this.state.loading ? <div className='overlay-box2'>\n            <FadeLoader css={override} color={\"rgb(0, 158, 214)\"} loading={this.state.loading}  height={30} width={5} radius={2} margin={20} />\n        </div>:''\n          }\n         \n          <div>\n          <Modal style={this.customStyles} isOpen={this.state.modalIsOpen} onRequestClose={this.closeModal}>{this.renderModal()}</Modal>\n          <table className=\"table table-striped\" style={{border :'2px solid #12739A'}}>\n            <thead>\n              <tr>\n                <th style={{fontWeight:500}} scope=\"col\">Invoice Number</th>\n                <th style={{fontWeight:500}} scope=\"col\">Invoice Date</th>\n                <th style={{fontWeight:500}} scope=\"col\">Do Date</th>\n                <th style={{fontWeight:500}} scope=\"col\">Sub Total</th>\n                <th style={{fontWeight:500}} scope=\"col\">Tax</th>\n                <th style={{fontWeight:500}} scope=\"col\">Total</th>\n                <th style={{fontWeight:500,textAlign:\"right\"}} scope=\"col\">Action</th>\n              </tr>\n            </thead>\n            <tbody>\n            {this.state.invoiceData.map((item: any,i: any)=>{\n              let date = new Date(item.invoice_date).toLocaleDateString(\"fr-CA\");\n              let do_date = new Date(item.do_date).toLocaleDateString(\"fr-CA\");\n                return(\n              <tr key={i}>\n                <td>{item.invoice}</td>\n                <td>{date}</td>\n                <td>{do_date}</td>\n                <td>$ {item.sub_total}</td>\n                <td>$ {item.tax}</td>\n                <td>$ {item.total}</td>\n                <td style={{textAlign:\"right\"}}>\n                    <img data-toggle=\"tooltip\" data-placement=\"top\" title=\"view invoice\" alt=\"eye\" style={{marginLeft:\"0.938rem\",cursor:\"pointer\",width:'1.8rem'}} onClick={()=>this.invoice(item.invoice)} src={viewa}/>\n                    {<a data-toggle=\"tooltip\" data-placement=\"top\" title=\"invoice\" href={`${baseURL}/api/customer/pdf/invoice/${this.props.cus_no}/${this.props.locationNo}/${item.invoice}/`} ><img alt=\"pdf1\" style={{marginLeft:\"1rem\",cursor:\"pointer\",width:'1.563rem',height:'1.563rem'}} src={image}/></a>}\n                </td>\n              </tr>\n              )})}\n            </tbody>\n          </table>\n          </div>\n          </div>\n          </>\n      );\n    }\n  }\n\nexport default AccountingDetails;  ","/Users/mac/Desktop/customer_portal_cls/locks&keys_frontend/src/component/sidebar/QuotationDetails.tsx",["175"],"import React from 'react';\nimport viewa from '../icons/viewa.svg';\nimport axiosInstance from '../../api/api';\nimport Modal from 'react-modal';\nimport logopay from '../icons/logopay.png';\nimport FadeLoader from \"react-spinners/FadeLoader\";\nimport { css } from \"@emotion/core\";\nimport Payment from './Payement/Payment';\nimport cancel from '../icons/cancel.svg';\n\nconst override = css`\n  margin: 0 auto;\n  border-color: red;\n  background-color: transparent;\n  top:35%;\n  margin-left: 40rem;\n`;\ninterface Props {\n  invoiceData:any;\n  modalIsOpen:any;\n  loading : boolean;\n  invoicePop : any;\n  invoiceTable : any;\n  card:any;\n  quoteNumber:any;\n  quoteAmount:any;\n}\n\nclass QuotationDetails extends React.Component<{locationNo:any,load:any,loadt:any},Props> {\n  constructor(props:any){\n    super(props);\n    this.state ={\n      invoiceData:[],\n      modalIsOpen : false,\n      loading : false,\n      invoicePop : [], \n      invoiceTable : [],\n      card:false,\n      quoteNumber:'',\n      quoteAmount:'',\n\n    }\n  }\n  customStyles = {\n    content : {\n      top                   : '50%',\n      left                  : '50%',\n      right                 : 'auto',\n      bottom                : 'auto',\n      marginRight           : '-20%',\n      transform             : 'translate(-50%, -50%)',\n      width                 : '46.875rem',\n      height                : '37.5rem'\n    }\n  };\n\n  fetchedData = async() => {\n   // this.setState({loading : true});\n   try {\n    \n     const api = `/api/customer/quotations/list/${this.props.locationNo}/pending/`;\n     let response = await axiosInstance.get(api, { headers: {\"Authorization\" : `Bearer ${localStorage.getItem('access_token')}`} });\n     this.setState({invoiceData:response.data});\n     if(!(this.state.invoiceData === null))\n     {\n         this.setState({loading : false});\n         this.props.load();\n     }\n }catch(error){\n     this.setState({loading : false});\n     throw error;\n }\n  }\n\n  invoice = async(quote_no:any) => {\n    //this.setState({loading : true});\n    this.props.loadt();\n    try {\n    \n      const api = `/api/customer/quotations/detail/${this.props.locationNo}/${quote_no}/`;\n      let response = await axiosInstance.get(api, { headers: {\"Authorization\" : `Bearer ${localStorage.getItem('access_token')}`} });\n      this.setState({invoicePop:response.data,quoteNumber: response.data.quote, quoteAmount:response.data.invoice_total});\n      this.setState({invoiceTable : response.data.sales_data});\n      if(!(this.state.invoiceData === null))\n      {\n          this.setState({loading : false});\n          this.props.load();\n          \n      }\n  }catch(error){\n      this.setState({loading : false});\n      this.props.load();\n      throw error;\n  }\n    this.setState({card:false}); \n    this.setState({modalIsOpen:true});\n  }\n\n  pay = () =>{\n    this.setState({card:true});\n  }\n\n  cancelPay = () =>{\n    this.setState({card:false});\n  }\n\n  renderModal = () =>{ \n    if(this.state.card){\n      return (\n        <>\n        <div style={{textAlign:'right'}}>\n                  <img alt=\"cancel\" style={{width:'1.875rem',cursor:'pointer'}} onClick={this.closeModal} src={cancel}/>\n          </div>\n        <Payment quote={this.state.quoteNumber} amount={this.state.quoteAmount} />\n        <div style={{textAlign:'center'}}>\n        <button \n          className=\"btn btn-outline-danger\"\n          type=\"button\"><span className=\"MuiButton-label\" onClick={this.cancelPay} >Cancel</span><span\n              className=\"MuiTouchRipple-root\"></span></button>\n          </div>         \n                  \n        </>\n      )\n  }else{\n    const quote_date  = this.state.invoicePop.quote_date? new Date(this.state.invoicePop.quote_date).toLocaleDateString(): '';\n    return(\n        <div>\n          <div style={{textAlign:'right'}}>\n                  <img alt=\"cancel\" style={{width:'1.875rem',cursor:'pointer'}} onClick={this.closeModal} src={cancel}/>\n               </div>\n          <div className='row'>\n            <div className='col-6'>\n              <p style={{textAlign:\"left\"}} >\n              <span style={{fontSize:\"1.25rem\",fontWeight:500,color:\"#5C5C5C\"}}>Billed To:</span><br></br>\n              <span style={{fontSize:\"1.25rem\",fontWeight:500}}>{this.state.invoicePop.name}</span><br></br>\n              <p style={{fontSize:\"1.063rem\",fontWeight:500,color:\"#5C5C5C\",width:\"12.625rem\",height:\"3.375rem\"}}>{this.state.invoicePop.address}</p>\n              <span style={{fontSize:\"1.25rem\",fontWeight:500}}>Customer# : {this.state.invoicePop.cus_no}</span><br></br>\n              </p>\n            </div>\n            <div className='col-6'>\n              <p style={{textAlign:\"right\"}}>\n              <span style={{fontSize:\"1.875rem\",fontWeight:500}}>Quote</span><br></br>\n             <span style={{fontSize:\"1.25rem\",fontWeight:500}}> #{this.state.invoicePop.quote}</span><br></br>\n              <span style={{fontSize:\"1rem\",fontWeight:500}}>{quote_date}</span>\n              </p>\n            </div>\n          </div>\n          <table className=\"table\" style={{backgroundColor:\"#fff\"}}>\n            <thead style={{ color: \"#fff\",backgroundColor:\"#0D93C9\" }}>\n              <tr>\n                <th data-visible=\"true\" >Description</th>\n                <th>QTY</th>\n                <th>Invoice</th>\n                <th>Each</th>\n                <th style={{textAlign:\"right\"}}>Amount</th>\n              </tr>\n            </thead>\n             <tbody>\n            {this.state.invoiceTable.map((item: any,i: any)=>{\n                return(\n              <tr >\n                <td >{item.desc}</td>\n                <td>{item.quantity}</td>\n                <td>{item.invoice}</td>\n                <td>{item.price}</td>\n                <td style={{textAlign:\"right\"}}>{item.amount}</td>\n              </tr>\n                  )})}\n            </tbody> \n            <tr>\n              <td colSpan={5}>\n                <div className='row'>\n                  <div className='col-6'>\n                    <p style={{cursor:\"pointer\",color:\"#009ED6\"}}>Term and Conditions</p>\n                  </div>\n                  <div className='col-6'>\n                    <p style={{textAlign:\"right\"}}>Sub Total : ${this.state.invoicePop.amount}<br></br>\n                    GST(2235785) : ${this.state.invoicePop.tax}<br></br>\n                    Total : ${this.state.invoicePop.invoice_total}<br></br>\n                     <span style={{fontWeight:500}}>Amount owning : ${this.state.invoicePop.invoice_total}</span>\n                    </p>\n                  </div>\n                </div>\n              </td>\n            </tr>\n            </table>\n            <div className='row'>\n              <div className='col-6'>\n                <img alt=\"viewkeys\" src={logopay} style={{width:'10rem'}}/><br></br>\n                 <span>www.calgarylockandsafe.com</span>\n              </div>\n              {/* <div className='col-6'>\n              <button style={{width:\"139px\",height:\"45px\",backgroundColor:\"#009ED6\",float:'right'}} className=\"btn btn-primary\" type=\"submit\" onClick={this.pay}>Pay Invoice</button>\n              </div> */}\n            </div>\n        </div>\n    )\n                }\n  }\n\n  closeModal = () =>{\n    this.setState({modalIsOpen:false});\n    this.setState({card:false});\n  }\n\n componentDidMount= async()=>{\n   this.fetchedData();\n }\n\n    render() {\n      return (\n          <>\n          <div>\n          {\n              this.state.loading ? <div className='overlay-box2'>\n              <FadeLoader css={override} color={\"rgb(0, 158, 214)\"} loading={this.state.loading}  height={30} width={5} radius={2} margin={20} />\n          </div> :''\n            }\n          <div>\n          <Modal style={this.customStyles} isOpen={this.state.modalIsOpen} onRequestClose={this.closeModal}>{this.renderModal()}</Modal>\n          <table className=\"table table-striped\" style={{border :'2px solid #12739A'}}>\n            <thead>\n              <tr>\n                <th style={{fontWeight:500}} scope=\"col\">S.No.</th>\n                <th style={{fontWeight:500}} scope=\"col\">Quote Number</th>\n                <th style={{fontWeight:500}} scope=\"col\">Quote Date</th>\n                <th style={{fontWeight:500}} scope=\"col\">Sales Person</th>\n                <th style={{fontWeight:500}} scope=\"col\">Amount</th>\n                <th style={{fontWeight:500,textAlign:\"right\"}} scope=\"col\">Action</th>\n              </tr>\n            </thead>\n            <tbody>\n            {this.state.invoiceData.map((item: any,i: any)=>{\n              let date = new Date(item.quote_date).toLocaleDateString(\"fr-CA\")\n                return(\n              <tr key={i} >\n                <td scope=\"row\">{i+1}</td>\n                <td>{item.quote}</td>\n                <td>{date}</td>\n                <td>{item.sales_person}</td>\n                <td>{item.amount}</td>\n                <td style={{textAlign:\"right\"}}>\n                    <img data-toggle=\"tooltip\" data-placement=\"top\" title=\"View Quote\" alt=\"eye\" style={{marginLeft:\"1rem\",cursor:\"pointer\",width:'1.8rem'}} onClick={()=>this.invoice(item.quote)} src={viewa}/>\n                </td>\n              </tr>\n              )})}\n            </tbody>\n          </table>\n          </div>\n          </div>\n          </>\n      );\n    }\n  }\n\nexport default QuotationDetails;  ","/Users/mac/Desktop/customer_portal_cls/locks&keys_frontend/src/component/sidebar/Payement/Payment.tsx",["176","177"],"import React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport './Payment.css';\nimport axiosInstance, {baseURL} from '../../../api/api';\nimport axios from 'axios';\nimport FadeLoader from \"react-spinners/FadeLoader\";\nimport { css } from \"@emotion/core\";\nimport { Toast } from 'primereact/toast';\nimport { useRef } from 'react';\n\nconst override = css`\n  margin: 0 auto;\n  border-color: red;\n  background-color: transparent;\n`;\nconst validEmailRegex = RegExp(\n    /^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i\n  );\n\nconst Payment = (props:any) => {\n    const toast: any = useRef();\n    const initialFormData = Object.freeze({\n         number:'',\n         street:'',\n         postalcode:'',\n         email:'',\n         invoiceNumber:0,\n         invoiceAmount:0,\n         loading:false,\n         invoiceModalIsOpen:true,\n    });\n\n    const [formData, setFormData]:any = useState(initialFormData);\n\n    useEffect(()=> {\n        renderPayment();\n        console.log(props);\n    },[]);\n\n    const renderPayment = async()=> {\n        setFormData({...formData,loading:true});\n        try {\n            const api = `${baseURL}api/customer/get-payment-token/`;\n            let response = await axios.get(api, { headers: {\"Authorization\" : `Bearer ${localStorage.getItem('access_token')}`} });\n            setFormData({...formData, token:response.data.token});\n            console.log(response);\n        \n        let authorization = response.data.token;\n        //console.log(authorization);\n        var form = document.querySelector('#cardForm');\n        \n        window.braintree.client.create({\n            authorization: authorization\n        }, (err, clientInstance)=> {\n        if(err){\n            console.log(err);\n            //setFormData({...formData,err:err});\n            return;\n        }\n        createHostedFields(clientInstance, form);\n        });\n\n        const createHostedFields = (clientInstance:any, form:any) => {\n        window.braintree.hostedFields.create({\n            client: clientInstance,\n            styles: {\n                'input': {\n                'font-size': '16px',\n                'font-family': 'courier, monospace',\n                'font-weight': 'lighter',\n                'color': '#ccc'\n                },\n                ':focus': {\n                'color': 'black'\n                },\n                '.valid': {\n                'color': '#8bdda8'\n                }\n            },\n            fields: {\n                number: {\n                selector: '#card-number',\n                placeholder: '4111 1111 1111 1111'\n                },\n                cvv: {\n                selector: '#cvv',\n                placeholder: '123'\n                },\n                expirationDate: {\n                selector: '#expiration-date',\n                placeholder: 'MM/YYYY'\n                }\n            }\n            }, hostedFieldsDidCreate);\n          }\n        }catch(error){\n            console.log(\"Error: \", JSON.stringify(error, null, 4));\n            throw error;\n        }\n    }\n    function hostedFieldsDidCreate(err:any, hostedFields:any) {\n        setFormData({...formData,loading:false});\n        let submitBtn = document.getElementById('submit');\n        submitBtn?.addEventListener('click', (e)=>submitHandler(e, hostedFields));\n        submitBtn?.removeAttribute('disabled');\n      }\n\n      function submitHandler( event:any,hostedFields:any,) {\n        event.preventDefault();\n        setFormData({...formData,loading:true});\n        let submitBtn = document.getElementById('submit');\n        submitBtn?.setAttribute('disabled', 'disabled');\n        console.log(hostedFields);\n        hostedFields.tokenize(function (err:any, payload:any) {\n          if (err) {\n            setFormData({...formData,loading:false});\n            submitBtn?.removeAttribute('disabled');\n            console.error('Error',err.message);\n            toast.current.show({severity: 'error', detail: err.message})\n          } else {\n            console.log(payload.nonce);\n            if(payload.nonce){\n            if(props.invoiceAddress){\n                axiosInstance\n\t\t\t.post(`api/customer/invoice/payment/${props.loc_no}/`, {\n                payment_method_nonce: payload.nonce,\n                location: props.invoiceLocation,\n                address: props.invoiceAddress,\n                amount: props.selectedAmount,\n                list_of_invoice: props.selectedProducts\n\t\t\t})\n\t\t\t.then((res) => {\n                setFormData({...formData,loading:false});\n                if(res.data.status===202){\n                    toast.current.show({severity: 'success', detail: 'Payment successful'});\n                    setFormData({...formData, invoiceModalIsOpen:false});\n                    props.getItem(formData.invoiceModalIsOpen);\n                }else{\n                    toast.current.show({severity: 'error', detail: 'Payment Denied'});\n                }\n                console.log(res);\n            }).catch((error)=>{\n                setFormData({...formData,loading:false});\n                toast.current.show({severity: 'error', detail: 'Server error'});\n            })\n            }else if(props.invoice){\n            axiosInstance\n\t\t\t.post(`api/customer/invoice/payment/`, {\n                payment_method_nonce: payload.nonce,\n                amount: props.amount,\n                invoice: props.invoice\n\t\t\t})\n\t\t\t.then((res) => {\n                setFormData({...formData,loading:false});\n                if(res.data.status===202){\n                    toast.current.show({severity: 'success', detail: 'Payment successful'});\n                }else{\n                    toast.current.show({severity: 'error', detail: 'Payment Denied'});\n                }\n                console.log(res);\n            }).catch((error)=>{\n                setFormData({...formData,loading:false});\n                toast.current.show({severity: 'error', detail: 'Server error'});\n            })\n         }else if(props.invoiceALLLocation){\n            axiosInstance\n\t\t\t.post(`api/customer/invoice/all/payment/`, {\n                payment_method_nonce: payload.nonce,\n                location: props.invoiceALLLocation,\n                amount: props.selectedAmount,\n                list_of_invoice: props.selectedProducts\n\t\t\t})\n\t\t\t.then((res) => {\n                setFormData({...formData,loading:false});\n                if(res.data.status===202){\n                    toast.current.show({severity: 'success', detail: 'Payment successful'});\n                }else{\n                    toast.current.show({severity: 'error', detail: 'Payment Denied'});\n                }\n                console.log(res);\n            }).catch((error)=>{\n                setFormData({...formData,loading:false});\n                toast.current.show({severity: 'error', detail: 'Server error'});\n            })\n         }else if(props.quote){\n            axiosInstance\n\t\t\t.post(`api/customer/quote/payment/`, {\n                payment_method_nonce: payload.nonce,\n                amount: props.amount,\n                quote: props.quote\n\t\t\t})\n\t\t\t.then((res) => {\n                setFormData({...formData,loading:false});\n                if(res.data.status===202){\n                    toast.current.show({severity: 'success', detail: 'Payment successful'});\n                }else{\n                    toast.current.show({severity: 'error', detail: 'Payment Denied'});\n                }\n                console.log(res);\n            }).catch((error)=>{\n                setFormData({...formData,loading:false});\n                toast.current.show({severity: 'error', detail: 'Server error'});\n            })\n        }\n        }\n          }\n        });\n      }\n\n    \n\n\n    const formValidation = () =>{\n        let isValid = true;\n       /*  let numbers = /[0-9]/g;\n        if(formData.cnumber === ''){\n            isValid = false;\n         }else if(!formData.cnumber.match(numbers)){\n            isValid = false ;\n        }else if(formData.name === ''){\n            isValid = false;\n         }else if(formData.expiry === ''){\n            isValid = false ;\n        }else if(formData.email === ''){\n            isValid = false ;\n        }else if(!validEmailRegex.test(formData.email)){\n            isValid = false ;\n        }else if(formData.cvv === ''){\n            isValid = false ;\n        }else if(!formData.cvv.match(numbers)){\n            isValid = false ;\n        }else if(formData.number === ''){\n            isValid = false ;\n        }else if(!formData.number.match(numbers)){\n            isValid = false ;\n        }else if(formData.street === ''){\n            isValid = false ;\n        }else if(formData.postalcode === ''){\n            isValid = false ;\n        } */\n        return isValid\n    }\n    \n    return (\n        <>\n            <div className=\"MuiPaper-root MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiPaper-elevation24 MuiPaper-rounded\" >\n              <Toast ref={toast} />\n                <div className=\"MuiDialogTitle-root\">\n                    <h2 className=\"MuiTypography-root MuiTypography-h6\">Pay Invoice</h2>\n                </div>\n                <div className=\"MuiDialogContent-root\">\n                    <p className=\"MuiTypography-root MuiDialogContentText-root MuiTypography-body1 MuiTypography-colorTextSecondary\">\n                        Please enter your payment information</p>\n                    <div className=\"MuiBox-root jss123\">\n                        <div className=\"MuiBox-root jss124\" style={{display: 'flex', flex: '1 1 0px'}}>\n                            <div className=\"rccs\">\n                                <div className=\"rccs__card rccs__card--unknown\">\n                                    <div className=\"rccs__card--front\">\n                                        <div className=\"rccs__card__background\"></div>\n                                        <div className=\"rccs__issuer\"></div>\n                                        <div className=\"rccs__cvc__front\"></div>\n                                        <div className=\"rccs__number\">•••• •••• •••• ••••</div>\n                                        <div className=\"rccs__name\">YOUR NAME HERE</div>\n                                        <div className=\"rccs__expiry\">\n                                            <div className=\"rccs__expiry__valid\">valid thru</div>\n                                            <div className=\"rccs__expiry__value\">••/••</div>\n                                        </div>\n                                        <div className=\"rccs__chip\"></div>\n                                    </div>\n                                    <div className=\"rccs__card--back\">\n                                        <div className=\"rccs__card__background\"></div>\n                                        <div className=\"rccs__stripe\"></div>\n                                        <div className=\"rccs__signature\"></div>\n                                        <div className=\"rccs__cvc\"></div>\n                                        <div className=\"rccs__issuer\"></div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                        \n                        <div className=\"MuiBox-root jss125\" style={{display: 'flex', flex: '1 1 0px', paddingLeft: '0.5rem',marginTop:'-3rem'}}>\n                        <form action=\"/\" method=\"post\" id=\"cardForm\">\n                            <div className=\"col\" style={{padding:'.5rem'}}>\n                                <label>Card number:</label>\n                                <div id='card-number' className='form-control'></div>\n                            </div>\n                            <div className=\"col\" style={{padding:'.5rem'}}>\n                                <label>Expiry Date:</label>\n                            <div id='expiration-date' className='form-control'></div>\n                            </div>\n                            <div className=\"col\" style={{padding:'.5rem'}}>\n                                <label>CVV#</label>\n                            <div id='cvv' className='form-control'></div>\n\n                            </div>\n                        \n                        </form>\n                        <div className='overlay-box1'>\n                            <FadeLoader css={override} color={\"rgb(0, 158, 214)\"} loading={formData.loading}  height={30} width={5} radius={2} margin={20} />\n                        </div>\n                            </div>\n                            </div>\n                                {/* <div className=\"MuiBox-root jss130\" style={{minWidth: '450px'}}>\n                                    \n                                        <div className=\"row\" style={{width:'35rem'}}>\n                                            <div className=\"col\" style={{padding:'.25rem'}}>\n                                            <input type=\"text\" className=\"form-control\" name='number' placeholder=\"Number\" onChange={handleInputChange}/>\n                                            </div>\n                                            <div className=\"col\" style={{padding:'.25rem'}}>\n                                            <input type=\"text\" className=\"form-control\" name='street' placeholder=\"Street\" onChange={handleInputChange}/>\n                                            </div>\n                                            <div className=\"col\" style={{padding:'.25rem'}}>\n                                            <input type=\"text\" className=\"form-control\" name='postalcode' placeholder=\"Postal Code\" onChange={handleInputChange}/>\n                                            </div>\n                                        </div>\n                                        \n                                </div>\n                                <div className=\"MuiBox-root jss131\" style={{marginLeft:'-1.1rem'}}>\n                                      <div className=\"col\" style={{padding:'.5rem'}}>\n                                            <input type=\"email\" className=\"form-control\" name='email' placeholder=\"Email\" onChange={handleInputChange}/>\n                                      </div>\n                                    </div> */}\n                </div>         \n                      {   formValidation() ? \n                          <div style={{textAlign:'center'}}>\n                          <button style={{marginLeft:'4.55rem',marginTop:'1rem'}}\n                            className=\"btn btn-outline-info\"\n                             type=\"submit\" id='submit' ><span className=\"MuiButton-label\"  >Submit Payment</span>\n                             </button>\n                          </div> : \n                          <div style={{textAlign:'center'}}>\n                          <button style={{marginLeft:'4.55rem',marginTop:'1rem'}}\n                            className=\"btn btn-outline-info\"\n                              disabled><span className=\"MuiButton-label\">Submit Payment</span>\n                             </button>\n                          </div>\n                      }\n             </div>                \n        \n        </>\n    )\n}\n\nexport default Payment;",{"ruleId":"178","replacedBy":"179"},{"ruleId":"180","replacedBy":"181"},{"ruleId":"182","severity":1,"message":"183","line":8,"column":10,"nodeType":"184","messageId":"185","endLine":8,"endColumn":18},{"ruleId":"186","severity":1,"message":"187","line":49,"column":7,"nodeType":"188","endLine":49,"endColumn":9,"suggestions":"189"},{"ruleId":"190","severity":1,"message":"191","line":68,"column":37,"nodeType":"192","messageId":"193","endLine":68,"endColumn":38,"suggestions":"194"},{"ruleId":"190","severity":1,"message":"195","line":68,"column":40,"nodeType":"192","messageId":"193","endLine":68,"endColumn":41,"suggestions":"196"},{"ruleId":"190","severity":1,"message":"197","line":68,"column":43,"nodeType":"192","messageId":"193","endLine":68,"endColumn":44,"suggestions":"198"},{"ruleId":"182","severity":1,"message":"199","line":3,"column":24,"nodeType":"184","messageId":"185","endLine":3,"endColumn":31},{"ruleId":"190","severity":1,"message":"191","line":51,"column":38,"nodeType":"192","messageId":"193","endLine":51,"endColumn":39,"suggestions":"200"},{"ruleId":"190","severity":1,"message":"195","line":51,"column":41,"nodeType":"192","messageId":"193","endLine":51,"endColumn":42,"suggestions":"201"},{"ruleId":"190","severity":1,"message":"197","line":51,"column":44,"nodeType":"192","messageId":"193","endLine":51,"endColumn":45,"suggestions":"202"},{"ruleId":"182","severity":1,"message":"203","line":52,"column":13,"nodeType":"184","messageId":"185","endLine":52,"endColumn":25},{"ruleId":"190","severity":1,"message":"191","line":44,"column":38,"nodeType":"192","messageId":"193","endLine":44,"endColumn":39,"suggestions":"204"},{"ruleId":"190","severity":1,"message":"195","line":44,"column":41,"nodeType":"192","messageId":"193","endLine":44,"endColumn":42,"suggestions":"205"},{"ruleId":"190","severity":1,"message":"197","line":44,"column":44,"nodeType":"192","messageId":"193","endLine":44,"endColumn":45,"suggestions":"206"},{"ruleId":"182","severity":1,"message":"199","line":3,"column":9,"nodeType":"184","messageId":"185","endLine":3,"endColumn":16},{"ruleId":"182","severity":1,"message":"207","line":13,"column":10,"nodeType":"184","messageId":"185","endLine":13,"endColumn":14},{"ruleId":"186","severity":1,"message":"208","line":57,"column":5,"nodeType":"188","endLine":57,"endColumn":7,"suggestions":"209"},{"ruleId":"182","severity":1,"message":"210","line":25,"column":7,"nodeType":"184","messageId":"185","endLine":25,"endColumn":14},{"ruleId":"186","severity":1,"message":"211","line":199,"column":5,"nodeType":"188","endLine":199,"endColumn":7,"suggestions":"212"},{"ruleId":"182","severity":1,"message":"213","line":12,"column":9,"nodeType":"184","messageId":"185","endLine":12,"endColumn":14},{"ruleId":"182","severity":1,"message":"214","line":15,"column":10,"nodeType":"184","messageId":"185","endLine":15,"endColumn":19},{"ruleId":"182","severity":1,"message":"215","line":16,"column":10,"nodeType":"184","messageId":"185","endLine":16,"endColumn":17},{"ruleId":"182","severity":1,"message":"210","line":25,"column":9,"nodeType":"184","messageId":"185","endLine":25,"endColumn":16},{"ruleId":"186","severity":1,"message":"216","line":80,"column":9,"nodeType":"188","endLine":80,"endColumn":11,"suggestions":"217"},{"ruleId":"218","severity":1,"message":"219","line":387,"column":55,"nodeType":"220","messageId":"221","endLine":387,"endColumn":57},{"ruleId":"218","severity":1,"message":"219","line":397,"column":58,"nodeType":"220","messageId":"221","endLine":397,"endColumn":60},{"ruleId":"182","severity":1,"message":"222","line":8,"column":8,"nodeType":"184","messageId":"185","endLine":8,"endColumn":13},{"ruleId":"182","severity":1,"message":"223","line":9,"column":8,"nodeType":"184","messageId":"185","endLine":9,"endColumn":15},{"ruleId":"182","severity":1,"message":"224","line":12,"column":13,"nodeType":"184","messageId":"185","endLine":12,"endColumn":25},{"ruleId":"182","severity":1,"message":"225","line":65,"column":11,"nodeType":"184","messageId":"185","endLine":65,"endColumn":19},{"ruleId":"226","severity":1,"message":"227","line":237,"column":21,"nodeType":"228","endLine":237,"endColumn":32},{"ruleId":"182","severity":1,"message":"229","line":16,"column":7,"nodeType":"184","messageId":"185","endLine":16,"endColumn":22},{"ruleId":"186","severity":1,"message":"230","line":38,"column":7,"nodeType":"188","endLine":38,"endColumn":9,"suggestions":"231"},"no-native-reassign",["232"],"no-negated-in-lhs",["233"],"@typescript-eslint/no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'formData'. Either include it or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.","ArrayExpression",["234"],"no-useless-escape","Unnecessary escape character: \\$.","Literal","unnecessaryEscape",["235","236"],"Unnecessary escape character: \\^.",["237","238"],"Unnecessary escape character: \\*.",["239","240"],"'baseURL' is defined but never used.",["241","242"],["243","244"],["245","246"],"'reWhiteSpace' is assigned a value but never used.",["247","248"],["249","250"],["251","252"],"'Link' is defined but never used.","React Hook useEffect has missing dependencies: 'data' and 'formData'. Either include them or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.",["253"],"'history' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'fetchDataAsync'. Either include it or remove the dependency array.",["254"],"'jsPDF' is defined but never used.","'autoTable' is defined but never used.","'CSVLink' is defined but never used.","React Hook useEffect has a missing dependency: 'file'. Either include it or remove the dependency array.",["255"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Modal' is defined but never used.","'logopay' is defined but never used.","'_html2canvas' is defined but never used.","'response' is assigned a value but never used.","jsx-a11y/scope","The scope prop can only be used on <th> elements.","JSXAttribute","'validEmailRegex' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props' and 'renderPayment'. Either include them or remove the dependency array.",["256"],"no-global-assign","no-unsafe-negation",{"desc":"257","fix":"258"},{"messageId":"259","fix":"260","desc":"261"},{"messageId":"262","fix":"263","desc":"264"},{"messageId":"259","fix":"265","desc":"261"},{"messageId":"262","fix":"266","desc":"264"},{"messageId":"259","fix":"267","desc":"261"},{"messageId":"262","fix":"268","desc":"264"},{"messageId":"259","fix":"269","desc":"261"},{"messageId":"262","fix":"270","desc":"264"},{"messageId":"259","fix":"271","desc":"261"},{"messageId":"262","fix":"272","desc":"264"},{"messageId":"259","fix":"273","desc":"261"},{"messageId":"262","fix":"274","desc":"264"},{"messageId":"259","fix":"275","desc":"261"},{"messageId":"262","fix":"276","desc":"264"},{"messageId":"259","fix":"277","desc":"261"},{"messageId":"262","fix":"278","desc":"264"},{"messageId":"259","fix":"279","desc":"261"},{"messageId":"262","fix":"280","desc":"264"},{"desc":"281","fix":"282"},{"desc":"283","fix":"284"},{"desc":"285","fix":"286"},{"desc":"287","fix":"288"},"Update the dependencies array to be: [formData]",{"range":"289","text":"290"},"removeEscape",{"range":"291","text":"292"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"293","text":"294"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"295","text":"292"},{"range":"296","text":"294"},{"range":"297","text":"292"},{"range":"298","text":"294"},{"range":"299","text":"292"},{"range":"300","text":"294"},{"range":"301","text":"292"},{"range":"302","text":"294"},{"range":"303","text":"292"},{"range":"304","text":"294"},{"range":"305","text":"292"},{"range":"306","text":"294"},{"range":"307","text":"292"},{"range":"308","text":"294"},{"range":"309","text":"292"},{"range":"310","text":"294"},"Update the dependencies array to be: [data, formData]",{"range":"311","text":"312"},"Update the dependencies array to be: [fetchDataAsync]",{"range":"313","text":"314"},"Update the dependencies array to be: [file]",{"range":"315","text":"316"},"Update the dependencies array to be: [props, renderPayment]",{"range":"317","text":"318"},[1498,1500],"[formData]",[2087,2088],"",[2087,2087],"\\",[2090,2091],[2090,2090],[2093,2094],[2093,2093],[1508,1509],[1508,1508],[1511,1512],[1511,1511],[1514,1515],[1514,1514],[1324,1325],[1324,1324],[1327,1328],[1327,1327],[1330,1331],[1330,1330],[1932,1934],"[data, formData]",[6798,6800],"[fetchDataAsync]",[2515,2517],"[file]",[986,988],"[props, renderPayment]"]