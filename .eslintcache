[{"C:\\Data\\django\\customer_portal\\frontend\\src\\index.tsx":"1","C:\\Data\\django\\customer_portal\\frontend\\src\\reportWebVitals.ts":"2","C:\\Data\\django\\customer_portal\\frontend\\src\\App.tsx":"3","C:\\Data\\django\\customer_portal\\frontend\\src\\component\\NotFound.tsx":"4","C:\\Data\\django\\customer_portal\\frontend\\src\\component\\footer\\Footer.tsx":"5","C:\\Data\\django\\customer_portal\\frontend\\src\\component\\login\\CreateAccount.tsx":"6","C:\\Data\\django\\customer_portal\\frontend\\src\\component\\login\\Login.tsx":"7","C:\\Data\\django\\customer_portal\\frontend\\src\\component\\header\\Header.tsx":"8","C:\\Data\\django\\customer_portal\\frontend\\src\\component\\login\\ChangePassword.tsx":"9","C:\\Data\\django\\customer_portal\\frontend\\src\\component\\login\\ResetPassword.tsx":"10","C:\\Data\\django\\customer_portal\\frontend\\src\\component\\login\\Forget.tsx":"11","C:\\Data\\django\\customer_portal\\frontend\\src\\component\\header\\Home.tsx":"12","C:\\Data\\django\\customer_portal\\frontend\\src\\api\\api.tsx":"13","C:\\Data\\django\\customer_portal\\frontend\\src\\component\\sidebar\\Dashboard.tsx":"14","C:\\Data\\django\\customer_portal\\frontend\\src\\component\\sidebar\\AuditReport.tsx":"15","C:\\Data\\django\\customer_portal\\frontend\\src\\component\\sidebar\\CompanyDetails.tsx":"16","C:\\Data\\django\\customer_portal\\frontend\\src\\component\\sidebar\\Sidebarr.tsx":"17","C:\\Data\\django\\customer_portal\\frontend\\src\\component\\sidebar\\ManageUser.tsx":"18","C:\\Data\\django\\customer_portal\\frontend\\src\\component\\sidebar\\UserInformation.tsx":"19","C:\\Data\\django\\customer_portal\\frontend\\src\\component\\sidebar\\ViewKeysDetails.tsx":"20","C:\\Data\\django\\customer_portal\\frontend\\src\\component\\sidebar\\EditUserInformation.tsx":"21","C:\\Data\\django\\customer_portal\\frontend\\src\\component\\sidebar\\AddNewUser.tsx":"22","C:\\Data\\django\\customer_portal\\frontend\\src\\component\\sidebar\\ViewKeys.tsx":"23","C:\\Data\\django\\customer_portal\\frontend\\src\\component\\sidebar\\ViewKeysGroup.tsx":"24","C:\\Data\\django\\customer_portal\\frontend\\src\\component\\sidebar\\CompanyDetailsSummary.tsx":"25","C:\\Data\\django\\customer_portal\\frontend\\src\\component\\sidebar\\SystemNumber.tsx":"26","C:\\Data\\django\\customer_portal\\frontend\\src\\component\\sidebar\\Accounting.tsx":"27","C:\\Data\\django\\customer_portal\\frontend\\src\\component\\sidebar\\ServiceRequest.tsx":"28","C:\\Data\\django\\customer_portal\\frontend\\src\\component\\sidebar\\Quotations.tsx":"29","C:\\Data\\django\\customer_portal\\frontend\\src\\component\\sidebar\\ViewKeysGroupDetails.tsx":"30","C:\\Data\\django\\customer_portal\\frontend\\src\\component\\sidebar\\KeyRequest.tsx":"31","C:\\Data\\django\\customer_portal\\frontend\\src\\component\\sidebar\\AccountingDetails.tsx":"32","C:\\Data\\django\\customer_portal\\frontend\\src\\component\\sidebar\\Payement\\Payment.tsx":"33","C:\\Data\\django\\customer_portal\\frontend\\src\\component\\sidebar\\QuotationDetails.tsx":"34"},{"size":557,"mtime":1615795197783,"results":"35","hashOfConfig":"36"},{"size":440,"mtime":1615795197786,"results":"37","hashOfConfig":"36"},{"size":2799,"mtime":1615795197579,"results":"38","hashOfConfig":"36"},{"size":205,"mtime":1615795197582,"results":"39","hashOfConfig":"36"},{"size":500,"mtime":1615795197584,"results":"40","hashOfConfig":"36"},{"size":9555,"mtime":1615801218121,"results":"41","hashOfConfig":"36"},{"size":9462,"mtime":1617264425930,"results":"42","hashOfConfig":"36"},{"size":1943,"mtime":1615795197587,"results":"43","hashOfConfig":"36"},{"size":6905,"mtime":1615795197697,"results":"44","hashOfConfig":"36"},{"size":3939,"mtime":1615795197718,"results":"45","hashOfConfig":"36"},{"size":4351,"mtime":1615799871990,"results":"46","hashOfConfig":"36"},{"size":248,"mtime":1615795197588,"results":"47","hashOfConfig":"36"},{"size":1594,"mtime":1617190028111,"results":"48","hashOfConfig":"36"},{"size":3177,"mtime":1617182667358,"results":"49","hashOfConfig":"36"},{"size":9217,"mtime":1615795197745,"results":"50","hashOfConfig":"36"},{"size":9426,"mtime":1616053934805,"results":"51","hashOfConfig":"36"},{"size":6394,"mtime":1617182667359,"results":"52","hashOfConfig":"36"},{"size":20956,"mtime":1615795197763,"results":"53","hashOfConfig":"36"},{"size":2410,"mtime":1615795197775,"results":"54","hashOfConfig":"36"},{"size":9884,"mtime":1617183607244,"results":"55","hashOfConfig":"36"},{"size":2731,"mtime":1615795197760,"results":"56","hashOfConfig":"36"},{"size":14967,"mtime":1615795197739,"results":"57","hashOfConfig":"36"},{"size":17963,"mtime":1617267913003,"results":"58","hashOfConfig":"36"},{"size":16452,"mtime":1617283058827,"results":"59","hashOfConfig":"36"},{"size":1824,"mtime":1615795197758,"results":"60","hashOfConfig":"36"},{"size":6211,"mtime":1615795197772,"results":"61","hashOfConfig":"36"},{"size":34445,"mtime":1615905247431,"results":"62","hashOfConfig":"36"},{"size":10928,"mtime":1615795197768,"results":"63","hashOfConfig":"36"},{"size":11018,"mtime":1615795197768,"results":"64","hashOfConfig":"36"},{"size":5243,"mtime":1617183607246,"results":"65","hashOfConfig":"36"},{"size":23236,"mtime":1617267892385,"results":"66","hashOfConfig":"36"},{"size":11663,"mtime":1616401266163,"results":"67","hashOfConfig":"36"},{"size":15573,"mtime":1615795197766,"results":"68","hashOfConfig":"36"},{"size":9518,"mtime":1615795197767,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"tpkqto",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"72"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"72"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"72"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"72"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"72"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"72"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"72"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"124","messages":"125","errorCount":0,"warningCount":16,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"72"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"72"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"72"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"72"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"148","usedDeprecatedRules":"72"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"151","usedDeprecatedRules":"72"},"C:\\Data\\django\\customer_portal\\frontend\\src\\index.tsx",[],["152","153"],"C:\\Data\\django\\customer_portal\\frontend\\src\\reportWebVitals.ts",[],"C:\\Data\\django\\customer_portal\\frontend\\src\\App.tsx",["154","155"],"import './App.css';\r\nimport Footer from './component/footer/Footer';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport logolocks from './component/icons/logolocks1.png';\r\nimport heart from './component/icons/heart.svg';\r\nimport lock from './component/icons/lock.2a916e83.webp';\r\nimport door from './component/icons/door.a7527e00.webp';\r\nimport key from './component/icons/key.png';\r\nimport { Redirect, Route, useHistory } from \"react-router\";\r\nimport CreateAccount from './component/login/CreateAccount';\r\nimport Login from './component/login/Login';\r\nimport Home from './component/header/Home';\r\nimport Forget from './component/login/Forget';\r\nimport ChangePassword from './component/login/ChangePassword';\r\nimport ResetPassword from './component/login/ResetPassword';\r\nimport Header from './component/header/Header';\r\nimport NotFound from './component/NotFound';\r\nimport { useEffect } from 'react';\r\n\r\nfunction App(props:any) {\r\n  const history = useHistory();\r\n\r\n  useEffect(()=>{\r\n     console.log(window);\r\n  },[])\r\n\r\n  const icon = () =>{\r\n    history.push('/home/companydetails');\r\n  }\r\n  const login = () =>{\r\n    history.push('/');\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div className='row'>\r\n        <div className='col-2' >\r\n           <img style={{width:'10.7rem',float:'left',cursor:'pointer'}} alt=\"locks\" src={logolocks}  onClick={localStorage.getItem(\"access_token\")? icon : login} />\r\n        </div>\r\n        <div className='col-6 align-items-center m-0 justify-content-end d-flex'>\r\n          <p style={{fontStyle:'italic',textAlign:'right', margin: 0}}>Thank you for supporting Small Business</p>\r\n        </div>\r\n        <div className='col-2  align-items-center justify-content-center d-flex' style={{textAlign:'left'}}>\r\n          <img style={{width:'1.55rem',margin:0}} alt=\"heart\" src={heart} />\r\n          <img style={{width:'1.55rem',margin:0}} alt=\"door\" src={door} />\r\n          <img style={{width:'1.55rem',margin:0}} alt=\"locks\" src={key} />\r\n          \r\n        </div>\r\n        <div className='col-2 align-items-center justify-content-center d-flex'>\r\n            <p style={{fontSize:'1rem',textAlign:'left', margin: 0,fontStyle:'italic'}}>#YYC Local</p>\r\n          </div>\r\n      </div>\r\n          <Route exact path=\"/\" component={Login} />\r\n          <Route path=\"/home\" component={Home} />\r\n          {localStorage.getItem(\"access_token\")?<Header />: history.push('/')}\r\n          <Route path=\"/createaccount\" component={CreateAccount} />\r\n          <Route path='/forgot' component={Forget}/>\r\n          <Route path='/changepassword' component={ChangePassword}/>\r\n          <Route path='/resetpassword' component={ResetPassword}/>\r\n        <Footer />\r\n        <Route path='*' component={NotFound} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","C:\\Data\\django\\customer_portal\\frontend\\src\\component\\NotFound.tsx",[],"C:\\Data\\django\\customer_portal\\frontend\\src\\component\\footer\\Footer.tsx",[],"C:\\Data\\django\\customer_portal\\frontend\\src\\component\\login\\CreateAccount.tsx",["156","157","158","159","160"],"import React, { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axiosInstance, {baseURL} from '../../api/api';\r\nimport './Login.css';\r\nimport { Toast } from 'primereact/toast';\r\nimport { useRef } from 'react';\r\nimport FadeLoader from \"react-spinners/FadeLoader\";\r\nimport { css } from \"@emotion/core\";\r\nimport ReactTooltip from 'react-tooltip';\r\nimport info from '../icons/info.svg';\r\nconst validEmailRegex = RegExp(\r\n    /^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i\r\n  );\r\n\r\nconst override = css`\r\n  margin: 0 auto;\r\n  border-color: red;\r\n  background-color: transparent;\r\n  top:40%;\r\n  margin-right:-18%;\r\n`;\r\n\r\nlet CreateAccount=()=>{\r\n    let history = useHistory();\r\n    const toast:any = useRef(null);\r\n\r\n    const initialFormData = Object.freeze({\r\n        accountnumber:'',\r\n        email: '',\r\n        confirm_email:'',\r\n        firstname:'',\r\n        lastname:'',\r\n        phonenumber:'',\r\n        password: '',\r\n    });\r\n    const [formData, setFormData] = useState<any>(initialFormData);\r\n    const [loading, setLoading] = useState<any>(false);\r\n\r\n    const handleInputChange = (e: { target: { name: any; value: any; }; }) =>{\r\n        let name = e.target.name;\r\n        let value = e.target.value;\r\n        setFormData({...formData,[name]:value});\r\n    };\r\n      \r\n    const formValidation= () =>{\r\n        let isValid = true;\r\n        const node = toast.current;\r\n        let numbers = /[0-9]/g;\r\n        let lowerCaseLetters = /[a-z]/g;\r\n        let upperCaseLetters = /[A-Z]/g;\r\n        let specialcharacter = /[!+@#\\$%\\^&\\*]/g;\r\n        let reWhiteSpace = new RegExp(/^\\s+$/);\r\n        debugger\r\n        if(formData.accountnumber === '' || formData.email === '' || formData.firstname === '' || formData.lastname === '' || formData.phonenumber === '' || formData.password === ''){\r\n            if(node){\r\n            node.show({severity: 'error', detail: \"Please Enter all fields\"});\r\n            }\r\n            isValid = false ;\r\n        }else if(formData.phonenumber.match(lowerCaseLetters) || formData.phonenumber.match(upperCaseLetters) || formData.phonenumber.match(specialcharacter) || formData.phonenumber.includes(' ')){\r\n            if(node){\r\n                node.show({severity: 'error',  detail: \"Please enter a valid Phone Number\"});\r\n                }\r\n            isValid = false ;\r\n        }else if(!validEmailRegex.test(formData.email)){\r\n            if(node){\r\n                node.show({severity: 'error',  detail: \"Please enter a valid Email Address\"});\r\n                }\r\n            isValid = false ;\r\n        }else if(!(formData.email === formData.confirm_email)){\r\n            if(node){\r\n                node.show({severity: 'error',  detail: \"Email Address is not matched\"});\r\n                }\r\n            isValid = false ;\r\n        }else if(!(formData.password.trim().length >= 8 && formData.password.match(numbers) && formData.password.match(lowerCaseLetters) && formData.password.match(upperCaseLetters) && formData.password.match(specialcharacter))){\r\n            if(node){\r\n                node.show({severity: 'error',  detail: \"Please enter a valid password format\"});\r\n                }\r\n            isValid = false;\r\n        }\r\n        return isValid\r\n    }\r\n\r\n    const handleSubmit = (e:any) => {\r\n\t\te.preventDefault();\r\n        let isValid = formValidation();\r\n        if(isValid){\r\n            setLoading(true);\r\n        try {\r\n            axiosInstance\r\n\t\t\t.post(`/api/customer/create/primary/`, {\r\n\t\t\t\taccount_number: formData.accountnumber,\r\n                email: formData.email,\r\n                confirm_email : formData.confirm_email,\r\n                first_name: formData.firstname,\r\n                last_name: formData.lastname,\r\n                phone: formData.phonenumber,\r\n                password: formData.password,\r\n\t\t\t})\r\n\t\t\t.then((res) => {\r\n                let node = toast.current;\r\n                if(res.data.status===200){\r\n                    //history.push('/');\r\n                    setFormData({...formData,accountnumber:'',\r\n                    email: '',\r\n                    confirm_email:'',\r\n                    firstname:'',\r\n                    lastname:'',\r\n                    phonenumber:'',\r\n                    password: '',})\r\n                     if(node){\r\n                       node.show({severity: 'success', detail: res.data.message});\r\n                    }\r\n                    setLoading(false);\r\n                } else {\r\n                    setLoading(false);\r\n                    if(node){\r\n                       node.show({severity: 'error', detail: res.data.message});\r\n                    }\r\n                }\r\n                \r\n            });\r\n            //setLoading(true);\r\n        } catch(error){\r\n            setLoading(false);\r\n             throw error;\r\n        }\r\n    }\r\n  }\r\n\r\n    function login() {\r\n        history.push(`/`);\r\n    \r\n       }\r\n      return (\r\n        <div >\r\n            {\r\n                loading ? <div className='overlay-box1'>\r\n                <FadeLoader css={override} color={\"rgb(0, 158, 214)\"} loading={loading}  height={30} width={5} radius={2} margin={20} />\r\n            </div> :''\r\n            }\r\n            <Toast ref={toast} />\r\n            <ReactTooltip id=\"required\"effect=\"solid\" place=\"bottom\" >\r\n            \"Password should be minimum 8 characters with atleast one uppercase, one lowercase, one special character and one numeric value\"\r\n            </ReactTooltip>\r\n\t            <div className=\"d-flex justify-content-center own-login-container\">\r\n                    \r\n                    <form onSubmit={handleSubmit} style={{marginTop:\"4.375rem\"}} > \r\n                        <div>\r\n                          <label style={{fontSize:\"1.875rem\",textAlign:\"center\",marginBottom:\"1.563rem\"}}>Create an Account</label>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col\" style={{paddingBottom:'0.625rem'}}>\r\n                                <input style={{width:\"15.625rem\",height:\"2.5rem\"}} name=\"accountnumber\"  className=\"form-control\"   placeholder=\"Account Number *\" value={formData.accountnumber} onChange={handleInputChange}/>\r\n                            </div>\r\n                            <div className=\"col\">\r\n                                <input style={{width:\"15.625rem\",height:\"2.5rem\"}} name=\"phonenumber\" className=\"form-control\"   placeholder=\"Phone Number *\" value={formData.phonenumber} onChange={handleInputChange}/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col\" style={{paddingBottom:'0.625rem'}}>\r\n                                <input style={{width:\"15.625rem\",height:\"2.5rem\"}} name=\"email\" type=\"email\"  className=\"form-control\"  placeholder=\"Email ID *\" value={formData.email} onChange={handleInputChange}/>\r\n                            </div>\r\n                            <div className=\"col\">\r\n                                <input style={{width:\"15.625rem\",height:\"2.5rem\"}} name=\"confirm_email\" type=\"email\"  className=\"form-control\"  placeholder=\"Confirm Email ID *\" value={formData.confirm_email} onChange={handleInputChange}/>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row\">\r\n                            <div className=\"col\" style={{paddingBottom:'0.625rem'}}>\r\n                                <input style={{width:\"15.625rem\",height:\"2.5rem\"}} name=\"firstname\" className=\"form-control\" id=\"exampleInputEmail1\"  placeholder=\"First Name *\" value={formData.firstname} onChange={handleInputChange}/>\r\n                            </div>\r\n                            <div className=\"col\">\r\n                                <input style={{width:\"15.625rem\",height:\"2.5rem\"}} name=\"lastname\" className=\"form-control\"  placeholder=\"Last Name *\"  value={formData.lastname} onChange={handleInputChange}/>\r\n                            </div>\r\n                        </div>\r\n                            <div className=\"col\">\r\n                                <div className=\"row\" style={{marginLeft:\"-0.75rem\"}}>\r\n                                    <input style={{width:\"33.125rem\",height:\"2.5rem\"}} name=\"password\" type=\"password\" className=\"form-control\"  placeholder=\"Password*\" value={formData.password} onChange={handleInputChange}/>\r\n                                    <img alt=\"info\" data-for=\"required\" data-tip=\"required\" style={{cursor:\"pointer\", width:'1.25rem',padding:'0px',marginLeft:'-1.563rem'}} src={info}/>\r\n                                </div>\r\n                            </div>\r\n                        <br></br>\r\n                        \r\n                        <div>\r\n                            <button style={{width:\"33.125rem\",height:\"2.5rem\",backgroundColor:\"#009ED6\",borderColor:\"#009ED6\"}} className=\"btn btn-primary\" type=\"submit\">Create</button>\r\n                        </div>\r\n                        <div>\r\n                            <label className=\"mt-4 text-center\">\r\n                              <span className=\"create\" onClick={login} style={{marginLeft:\".4rem\",marginTop:\"-2rem\",fontSize:\"1rem\",color:\"#009ED6\",fontWeight:\"bold\"}}>\r\n                               Log In \r\n                            </span>\r\n                            </label>\r\n                            \r\n                        </div>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n      );\r\n    }\r\n\r\nexport default CreateAccount;  ","C:\\Data\\django\\customer_portal\\frontend\\src\\component\\login\\Login.tsx",["161","162","163","164","165","166","167","168"],"C:\\Data\\django\\customer_portal\\frontend\\src\\component\\header\\Header.tsx",[],"C:\\Data\\django\\customer_portal\\frontend\\src\\component\\login\\ChangePassword.tsx",["169","170","171"],"import { useState } from 'react';\r\nimport axiosInstance from '../../api/api';\r\nimport './Login.css';\r\nimport { Toast } from 'primereact/toast';\r\nimport { useRef } from 'react';\r\nimport FadeLoader from \"react-spinners/FadeLoader\";\r\nimport { css } from \"@emotion/core\";\r\nimport { useHistory } from 'react-router';\r\nimport info from '../icons/info.svg';\r\nimport ReactTooltip from 'react-tooltip';\r\n\r\nconst override = css`\r\n  margin: 0 auto;\r\n  border-color: red;\r\n  background-color: transparent;\r\n  top:35%;\r\n  margin-left:-15%;\r\n`;\r\n\r\nlet Login=()=> {\r\n    let history = useHistory();\r\n    const toast:any = useRef(null);\r\n\r\n    const initialFormData = Object.freeze({\r\n\t\toldpassword: '',\r\n        newpassword: ''\r\n    });\r\n    const [formData, setFormData] = useState(initialFormData);\r\n    let [loading, setLoading] = useState<any>(false);\r\n    const [success, setSuccess] = useState<any>(false);\r\n\r\n    const handleInputChange = (e: { target: { name: any; value: any; }; }) =>{\r\n        let name = e.target.name;\r\n        let value = e.target.value;\r\n        setFormData({...formData,[name]:value});\r\n    };\r\n\r\n    const formValidation= () =>{\r\n        let isValid = true;\r\n        const node = toast.current;\r\n        let numbers = /[0-9]/g;\r\n        let lowerCaseLetters = /[a-z]/g;\r\n        let upperCaseLetters = /[A-Z]/g;\r\n        let specialcharacter = /[!+@#\\$%\\^&\\*]/g;\r\n        if(formData.oldpassword === '' || formData.newpassword === ''){\r\n            if(node){\r\n            node.show({severity: 'error', detail: \"Please Enter all fields\"});\r\n            }\r\n            isValid = false ;\r\n        }else if(!(formData.oldpassword.trim().length >= 8 && formData.oldpassword.match(numbers) && formData.oldpassword.match(lowerCaseLetters) && formData.oldpassword.match(upperCaseLetters) && formData.oldpassword.match(specialcharacter))){\r\n            if(node){\r\n                node.show({severity: 'error',  detail: \"Please enter a valid old password format\"});\r\n                }\r\n            isValid = false;\r\n        }else if(!(formData.newpassword.trim().length >= 8 && formData.newpassword.match(numbers) && formData.newpassword.match(lowerCaseLetters) && formData.newpassword.match(upperCaseLetters) && formData.newpassword.match(specialcharacter))){\r\n            if(node){\r\n                node.show({severity: 'error',  detail: \"Please enter a valid new password format\"});\r\n                }\r\n            isValid = false;\r\n        }\r\n        return isValid\r\n    }\r\n\r\n  \r\n    const handleSubmit = (e:any) => {\r\n        e.preventDefault();\r\n        let isValid = formValidation();\r\n        if(isValid){\r\n        setLoading(true);\r\n        try{\r\n        axiosInstance\r\n\t\t\t.patch(`/api/customer/change/password/`, {\r\n\t\t\t\told_password: formData.oldpassword,\r\n\t\t\t\tpassword: formData.newpassword,\r\n            },{ headers: {\"Authorization\" : `Bearer ${localStorage.getItem('access_token')}`} }\r\n            )\r\n\t\t\t.then((res) => {\r\n                setLoading(false);\r\n                if(res.data.status===200){\r\n                    toast.current.show({severity: 'success', detail: 'Password Changed'});\r\n                    setSuccess(true);\r\n                }else\r\n                    if(res.data.status===406){\r\n                        toast.current.show({severity: 'error', detail: \"Password should be minimum 8 characters with one upper,one special character, one lower case and one numeric value\"});\r\n                    }else if(res.data.status===400){\r\n                        toast.current.show({severity: 'error', detail: \"New password should not be the same as old password\"});\r\n                    }else{\r\n                        toast.current.show({severity: 'error', detail: \"Old password is Wrong\"});\r\n                    } \r\n                setFormData({...formData, oldpassword:'', newpassword:''});\r\n                  \r\n               })\r\n               .catch((err)=>{\r\n                setLoading(false);\r\n                toast.current.show({severity: 'error', detail: \"Something went Wrong\"});\r\n               })\r\n        }catch(error){\r\n            setLoading(false);\r\n            toast.current.show({severity: 'error', detail: \"Something went Wrong\"});\r\n            throw error;\r\n        }\r\n    }\r\n    }\r\n    const passSuccess = () =>{\r\n        history.push('/');\r\n    }\r\n       \r\n      return (\r\n        <div >\r\n            <Toast ref={toast} />\r\n            {\r\n                loading ? <div className='overlay-box1' style={{margin:0}}>\r\n                <FadeLoader css={override} color={\"rgb(0, 158, 214)\"} loading={loading}  height={30} width={5} radius={2} margin={20} />\r\n             </div> : ''\r\n            }\r\n            <ReactTooltip id=\"required\"effect=\"solid\" place=\"bottom\" >\r\n           \"Password should be minimum 8 characters with atleast one uppercase, one lowercase, one special character and one numeric value\"\r\n        </ReactTooltip>\r\n            {success ? <div className=\"d-flex justify-content-center own-change-container\">\r\n                <div style={{marginTop:'15rem'}}>\r\n                <p style={{fontSize:'1.25rem'}}>Password changed Successfully!</p>\r\n                <button type=\"submit\" onClick={passSuccess} className='btn btn-primary'>Go to login page </button>\r\n                </div>\r\n            </div>\r\n            :\r\n            <div className=\"d-flex justify-content-center own-change-container\">\r\n            <form onSubmit={handleSubmit} style={{marginTop:\"6.375rem\"}}> \r\n                <div>\r\n                  <label style={{fontSize:\"1.875rem\",textAlign:\"center\",marginBottom:\"1.563rem\"}}>Change Password</label>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <input name=\"oldpassword\" style={{width:\"22.063rem\",height:\"2.5rem\"}} type=\"password\" value={formData.oldpassword} className=\"form-control\" id=\"exampleInputEmail1\" aria-describedby=\"emailHelp\" placeholder=\"Old Password*\" onChange={handleInputChange}/>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                <div className=\"row\" style={{marginLeft:\"0px\"}}>\r\n                    <input name=\"newpassword\" style={{width:\"22.063rem\",height:\"2.5rem\",paddingRight:'2.2rem'}} type=\"password\" value={formData.newpassword} className=\"form-control\" id=\"exampleInputPassword1\" placeholder=\"New Password*\" onChange={handleInputChange}/>\r\n                    <img alt=\"info\" data-for=\"required\" data-tip=\"required\" style={{cursor:\"pointer\", width:'1.25rem',padding:'0px',marginLeft:'-1.875rem'}} src={info}/>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <button style={{width:\"22.063rem\",height:\"2.5rem\",backgroundColor:\"#009ED6\"}} className=\"btn btn-primary\" type=\"submit\">Change</button>\r\n                </div>\r\n            </form>\r\n            </div>\r\n            }\r\n            \r\n            </div> \r\n      );\r\n    }\r\n\r\nexport default Login;  ","C:\\Data\\django\\customer_portal\\frontend\\src\\component\\login\\ResetPassword.tsx",[],"C:\\Data\\django\\customer_portal\\frontend\\src\\component\\login\\Forget.tsx",["172"],"import { useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport {baseURL} from '../../api/api';\r\nimport axiosInstance from '../../api/api';\r\nimport { Toast } from 'primereact/toast';\r\nimport { useRef } from 'react';\r\nimport FadeLoader from \"react-spinners/FadeLoader\";\r\nimport { css } from \"@emotion/core\";\r\n\r\nconst validEmailRegex = RegExp(\r\n    /^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i\r\n  );\r\n\r\nconst override = css`\r\n  margin: 0 auto;\r\n  border-color: red;\r\n  background-color: transparent;\r\n  top:40%;\r\n  margin-left:-16%;\r\n`;\r\n\r\nlet Forget = () =>{\r\n    let history = useHistory();\r\n    const toast:any = useRef(null);\r\n    const initialFormData = Object.freeze({\r\n\t\temail: '',\r\n    });\r\n    const [formData, setFormData] = useState(initialFormData);\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const handleInputChange = (e: { target: { name: any; value: any; }; }) =>{\r\n        let name = e.target.name;\r\n        let value = e.target.value;\r\n        setFormData({...formData,[name]:value});\r\n    };\r\n\r\n    const formValidation = () =>{\r\n        let isValid = true;\r\n        if(formData.email === ''){\r\n                toast.current.show({severity: 'error', detail: \"Please enter a email address\"});\r\n            isValid = false;\r\n         }else\r\n         if(!validEmailRegex.test(formData.email)){\r\n            toast.current.show({severity: 'error', detail: \"Please enter a valid email address\"});\r\n            isValid = false ;\r\n        }\r\n        return isValid\r\n    }\r\n\r\n    const handleSubmit = (e:any) => {\r\n        e.preventDefault();\r\n        let isValid = formValidation();\r\n        if(isValid){\r\n        setLoading(true);\r\n        try{\r\n            axiosInstance\r\n\t\t\t.post(`/api/customer/reset/password/`, {\r\n\t\t\t\temail: formData.email,\r\n\t\t\t})\r\n\t\t\t.then((res) => {\r\n                setLoading(false);\r\n                if(res.data.status === 200){\r\n                toast.current.show({severity: 'success', detail: 'Mail sent'});\r\n                 setFormData({...formData, email:'' });\r\n               }else {\r\n                toast.current.show({severity: 'error', detail: 'The Email address is not registered to an account'});\r\n               }\r\n            })\r\n            .catch((error)=>{\r\n                toast.current.show({severity: 'error', detail: 'Error'});\r\n                setLoading(false);\r\n            })\r\n        }catch(error){\r\n            throw error;\r\n        }\r\n    }\r\n    }\r\n\r\n    function login() {\r\n        history.push(`/`);\r\n       }\r\n    return(\r\n        <>\r\n         <div >\r\n         {\r\n            loading ? <div className='overlay-box1' style={{margin:0}}>\r\n            <FadeLoader css={override} color={\"rgb(0, 158, 214)\"} loading={loading}  height={30} width={5} radius={2} margin={20} />\r\n         </div> :''\r\n        }\r\n         <Toast ref={toast} />\r\n            <div className=\"d-flex justify-content-center own-login-container\">\r\n            <form onSubmit={handleSubmit}  style={{marginTop:\"100px\"}}> \r\n                <div>\r\n                  <label style={{fontSize:\"1.875rem\",textAlign:\"center\",marginBottom:\"1.563rem\"}}>Forgot your Password?</label>\r\n                </div>\r\n                <div>\r\n                  <label style={{fontSize:\"1.125rem\",textAlign:\"center\",marginBottom:\"1.563rem\"}}>Confirm your email and we'll send the Instructions</label>\r\n                </div>\r\n                <div className=\"form-group\">\r\n                    <div className=\"col\">\r\n                        <input  name=\"email\" style={{width:\"22rem\",height:\"2.5rem\",marginLeft:'.5rem'}} className=\"form-control\"  placeholder=\"Email ID *\" value={formData.email} onChange={handleInputChange}/>\r\n                    </div><br></br>\r\n                    <div className=\"col\">\r\n                        <button style={{width:\"22rem\",height:\"2.5rem\",backgroundColor:\"#009ED6\",borderColor:\"#009ED6\"}} className=\"btn btn-primary\" type=\"submit\">Reset Password</button>\r\n                    </div>\r\n                </div>\r\n                <div > \r\n                    <label className=\"create mt-2 text-center\" onClick={login}  style={{fontSize:\"1rem\",color:\"#009ED6\",fontWeight:\"bold\"}}>\r\n                       Login \r\n                    </label>\r\n                </div>\r\n            </form>\r\n            </div>\r\n            </div> \r\n        </>\r\n    )\r\n}\r\nexport default Forget;","C:\\Data\\django\\customer_portal\\frontend\\src\\component\\header\\Home.tsx",[],"C:\\Data\\django\\customer_portal\\frontend\\src\\api\\api.tsx",[],"C:\\Data\\django\\customer_portal\\frontend\\src\\component\\sidebar\\Dashboard.tsx",[],"C:\\Data\\django\\customer_portal\\frontend\\src\\component\\sidebar\\AuditReport.tsx",[],"C:\\Data\\django\\customer_portal\\frontend\\src\\component\\sidebar\\CompanyDetails.tsx",["173","174","175","176","177"],"import React, {useRef} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport './CompanyDetails.css';\r\nimport { useEffect } from 'react';\r\nimport axiosInstance from '../../api/api'\r\nimport { useState } from 'react';\r\nimport FadeLoader from \"react-spinners/FadeLoader\";\r\nimport { css } from \"@emotion/core\";\r\nimport cancel from '../icons/cancel.svg';\r\nimport { Paginator } from 'primereact/paginator';\r\nimport Modal from 'react-modal';\r\nimport { Toast } from 'primereact/toast';\r\nimport edit from '../icons/edit.svg';\r\nimport { Formik } from 'formik';\r\n\r\nconst customStyles = {\r\n    content : {\r\n      top                   : '50%',\r\n      left                  : '50%',\r\n      right                 : 'auto',\r\n      bottom                : 'auto',\r\n      marginRight           : '-20%',\r\n      transform             : 'translate(-50%, -50%)',\r\n      width                 : '32.25rem',\r\n    }\r\n  };\r\n\r\nconst override = css`\r\n  margin: 0 auto;\r\n  border-color: red;\r\n  background-color: transparent;\r\n  top:40%;\r\n  margin-left:-16%;\r\n`;\r\n\r\nlet CompanyDetails=()=> {\r\n  //let history = useHistory();\r\n  const initialFormData = Object.freeze({\r\n    offset: 0,\r\n    perPage: 10,\r\n    totalRecords: 0,\r\n    pageCount:0\r\n\r\n});\r\n  const [formData, setFormData]:any = useState(initialFormData);\r\n  const [data, setData] = useState([]);\r\n  const [tableData, setTableData] = useState([]);\r\n  const [loading, setLoading] = useState<any>(false);\r\n  const [cus_no, setCus_no] = useState<any>('');\r\n  const [last_name, setLast_name] = useState<any>('');\r\n  const [modalIsOpen, setmodalIsOpen] = useState<any>(false);\r\n  const [editLocation, seteditLocation] = useState<any>({});\r\n  const myToast: any = useRef(null);\r\n  const fetchDataAsync = async () => {\r\n    try {\r\n        setLoading(true);\r\n        const api = '/api/customer/company/details/';\r\n        let response = await axiosInstance.get(api, { headers: {\"Authorization\" : `Bearer ${localStorage.getItem('access_token')}`} });\r\n        setData(response.data.data);\r\n        let slice = response.data.data.slice(formData.offset, formData.offset + formData.perPage);\r\n        setFormData({...formData, pageCount: Math.ceil(response.data.data.length / formData.perPage), totalRecords: response.data.data.length});\r\n        setTableData(slice);\r\n        setCus_no(response.data.cus_no);\r\n        setLast_name(response.data.last_name);\r\n        if(!(data===null)){\r\n            setLoading(false);\r\n          }\r\n        return data;\r\n    }catch(error){\r\n        setLoading(false);\r\n        throw error;\r\n    }\r\n  }   ;\r\n\r\n  useEffect(() =>{\r\n     fetchDataAsync()\r\n  },[]);\r\n\r\n  const updateLocation =   (location: any, address: any) => {\r\n    const api = '/api/customer/company/update_details/'+editLocation.customer_no+'/'+editLocation.location_no;\r\n    let data= {location: location, address: address}\r\n    let response = axiosInstance.post(api,data).then((res: any) => {\r\n      if(res.error){\r\n        showToast('error', \"Error Message\",\"Location has not been updated\");\r\n        return 0\r\n      }\r\n      showToast('success', \"Success Message\",\"Location has been updated\");\r\n      fetchDataAsync();\r\n    }).catch(err => {\r\n      showToast('error', \"Error Message\",\"Location has not been updated\");\r\n    })\r\n    setmodalIsOpen(false);\r\n  }\r\n\r\n  const showToast = (severityValue: any, summaryValue: any, detailValue: any) => {   \r\n    myToast.current.show({severity: severityValue, summary: summaryValue, detail: detailValue});   \r\n  }\r\n\r\n  \r\n  const renderModal = () =>{ \r\n    return(\r\n        <>\r\n        <div style={{overflow:'hidden'}}>\r\n        <div style={{textAlign:'right'}} >\r\n           <img alt=\"cancel\" style={{width:'1.875rem',cursor:'pointer'}} onClick={closeModal} src={cancel}/>\r\n        </div>\r\n        <Formik\r\n          initialValues={{ location: editLocation.location, address: editLocation.address }}\r\n          validate={values => {\r\n            var errors: any = {}\r\n            if (!values.location) {\r\n              errors['location'] = 'Required';\r\n            }\r\n            if (!values.address) {\r\n              errors['address'] = 'Required';\r\n            }\r\n            return errors;\r\n          }}\r\n          onSubmit={(values, { setSubmitting }) => {\r\n            updateLocation(values.location, values.address)\r\n            setSubmitting(false);\r\n          }}\r\n        >\r\n          {({\r\n            values,\r\n            errors,\r\n            touched,\r\n            handleChange,\r\n            handleBlur,\r\n            handleSubmit,\r\n            isSubmitting,\r\n            /* and other goodies */\r\n          }) => (\r\n            <form onSubmit={handleSubmit}>\r\n              <div className=\"form-group\">\r\n                <label>Location</label>\r\n                <input type=\"location\" name=\"location\" \r\n                    className=\"form-control\"\r\n                    placeholder=\"Enter location\"\r\n                    onChange={handleChange}\r\n                    value={values.location}\r\n                  />\r\n                <small id=\"locationHelp\" className=\"form-text text-muted text-danger\">{errors.location}</small>\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Address</label>\r\n                <input type=\"address\" name=\"address\" \r\n                    className=\"form-control\"\r\n                    placeholder=\"Enter address\"\r\n                    onChange={handleChange}\r\n                    value={values.address}\r\n                  />\r\n                <small id=\"addressHelp\" className=\"form-text text-muted text-danger\">{errors.address}</small>\r\n              </div>\r\n              <button type=\"submit\" className=\"btn btn-primary w-100\" disabled={errors.address != undefined || errors.location != undefined}>\r\n                Submit \r\n              </button>\r\n            </form>\r\n          )}\r\n        </Formik>\r\n        </div>\r\n        </>\r\n    )\r\n  }\r\n\r\n  const noPermission = () =>{\r\n    showToast('error','Error Message',`You don't have permission`);\r\n  }\r\n\r\n  const location = (id: any) => {\r\n    var result  = tableData.filter(function(o: any){return o.location_no == id;} );\r\n    var foundLoc = result? result[0] : null\r\n    seteditLocation(foundLoc)\r\n    setmodalIsOpen(true)\r\n  }\r\n\r\n  \r\n  const closeModal = () =>{\r\n    setmodalIsOpen(false)\r\n  }\r\n\r\n  const onPageChange = (event:any) => {\r\n    let offset = event.first;\r\n    let perPage = event.rows;\r\n    setFormData({...formData , offset:offset, perPage:perPage})\r\n    let slice = data.slice(offset, offset + perPage);\r\n    setTableData(slice);\r\n}\r\n \r\n      return (\r\n        <>\r\n         <div>\r\n               {loading ?<div className='overlay-box1'>\r\n                    <FadeLoader css={override} color={\"rgb(0, 158, 214)\"} loading={loading}  height={30} width={5} radius={2} margin={20} />\r\n                </div> : ''}\r\n                <Modal style={customStyles} isOpen={modalIsOpen} onRequestClose={closeModal}>{renderModal()}</Modal>\r\n                <Toast ref={myToast} /> \r\n                <div className=\"upper\">\r\n                    <p style={{padding:\"20px\"}}><span className='heading'>{last_name}</span> \r\n                    <br></br><span className='heading'>{cus_no}</span></p>\r\n                </div>\r\n                <div className=\"content\">\r\n                <div className=\"accordian\"> \r\n                    <div className=\"col-12\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-6\">\r\n                                <p style={{color:\"#fff\",textAlign:\"left\",marginTop:\"10px\"}}>Company Locations</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div >\r\n                <table className=\"table table-striped\">\r\n                    <thead>\r\n                        <tr >\r\n                        <th style={{fontWeight:500}} scope=\"col\">Location Name</th>\r\n                        <th style={{fontWeight:500}} scope=\"col\">Address</th>\r\n                        <th style={{fontWeight:500}} scope=\"col\">Actions</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                       {tableData.map((item: any,i: any)=>{\r\n                         return(\r\n                        <tr>\r\n                         <td>{item.location}</td>\r\n                         <td>{item.address}</td>\r\n                         <td >\r\n                           <img data-toggle=\"tooltip\" data-placement=\"top\" title=\"edit\" alt=\"edit\" style={{width:'0.8rem', cursor: 'pointer'}} onClick={(localStorage.getItem('service_request')=== 'true')? ()=>location(item.location_no) : noPermission} src={edit}/>\r\n                         </td>\r\n                        </tr>\r\n                         )})}\r\n                         <tr>\r\n                 <td colSpan={2}>\r\n                  <Paginator first={formData.offset} rows={formData.perPage} totalRecords={formData.totalRecords} rowsPerPageOptions={[10,20,30]} \r\n                  template=\"RowsPerPageDropdown CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink \"\r\n                  onPageChange={onPageChange}></Paginator>\r\n                  </td>\r\n                  </tr>\r\n                    </tbody>\r\n                    \r\n                </table>\r\n                \r\n                </div>\r\n            </div>\r\n        </>\r\n      );\r\n    }\r\n\r\nexport default CompanyDetails;  ","C:\\Data\\django\\customer_portal\\frontend\\src\\component\\sidebar\\Sidebarr.tsx",[],"C:\\Data\\django\\customer_portal\\frontend\\src\\component\\sidebar\\ManageUser.tsx",["178","179"],"import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport axiosInstance from '../../api/api';\r\nimport edit1 from '../icons/edit.svg';\r\nimport save from '../icons/floppy-disk.svg';\r\nimport Select from 'react-select';\r\nimport 'primereact/resources/themes/saga-blue/theme.css';\r\nimport 'primereact/resources/primereact.min.css';\r\nimport { Paginator } from 'primereact/paginator';\r\nimport { Toast } from 'primereact/toast';\r\nimport { useRef } from 'react';\r\nimport FadeLoader from \"react-spinners/FadeLoader\";\r\nimport { css } from \"@emotion/core\";\r\nimport AddNewUser from './AddNewUser';\r\n\r\nconst override = css`\r\n  margin: 0 auto;\r\n  border-color: red;\r\n  background-color: transparent;\r\n  top:40%;\r\n  margin-left:-16%;\r\n`;\r\n\r\nlet ManageUser =()=>{\r\n  let history = useHistory();\r\n  const toast: any = useRef();\r\n\r\n  const initialFormData = Object.freeze({\r\n        user:null,\r\n        key_finder:false,\r\n        service_request:false,\r\n        inv_statements:false,\r\n        quotes: false,\r\n        hs_signatory:false,\r\n        add_user:false,\r\n        audit:false,\r\n});\r\nconst initialFormData1 = Object.freeze({\r\n  first_name:\"\",\r\n  last_name:\"\",\r\n  phone:\"\",\r\n});\r\nconst [formData, setFormData]:any = useState(initialFormData);\r\nconst [formData1, setFormData1]:any = useState(initialFormData1);\r\n//const [file, setFile] = useState<any>([1]);\r\nconst [addnewuser, setAddnewuser] = useState<any>(false);\r\nconst [offset, setOffset] = useState<any>(0);\r\nconst [limit, setLimit] = useState<any>(10);\r\nconst [totalRecords, setTotalRecords] = useState<any>(0);\r\nconst [currentuser, setCurrentuser] = useState<any>([]);\r\nconst [current_user_access, setCurrent_user_access] = useState<any>({});\r\nconst [file_numbers,setFile_numbers] = useState<any>([]);\r\nconst [add_user, setAdd_user] = useState<any>([]);\r\nconst [selected, setSelected] = useState<any>([]);\r\nconst [loading, setLoading] = useState<any>(false);\r\n\r\n  const [data, setData] = useState<any>([]);\r\n // const [edit, setEdit] = useState(false);\r\n\r\n  const handleChange = (event:any) => {\r\n    setSelected(Array.isArray(event) ? event.map(x => x.value) : []);\r\n  };\r\n\r\n  const options = file_numbers.map((item: any,i: any)=>{ \r\n    return (\r\n    { label: item.file_number+\"-\"+item.location, value: item.id})\r\n     });\r\n\r\n  const handleCheckboxChange = (e: { target: { name: any; checked:any;} }) =>{\r\n    let name = e.target.name;\r\n    let checked = e.target.checked;\r\n    setFormData({...formData,[name]:checked});\r\n   };\r\n\r\n   const handleInputChange = (e: { target: { name: any; value: any; }; }) =>{\r\n    let name = e.target.name;\r\n    let value = e.target.value;\r\n    setFormData1({...formData1,[name]:value});\r\n    \r\n};\r\n\r\nconst handleCheckboxSlider = (e: { target: { name: any; checked:any;} },item:any) =>{\r\n    let id = item.useraccess.user;\r\n    axiosInstance\r\n      .patch(`/api/customer/manage/user/${id}/`,\r\n              { headers: {\"Authorization\" : `Bearer ${localStorage.getItem('access_token')}`} }\r\n            )\r\n\t\t\t.then((res) => {\r\n        if(res.data.data.is_active===false){\r\n          toast.current.show({severity: 'success', detail: 'User Disabled'});\r\n        }else {\r\n          toast.current.show({severity: 'success', detail: 'User Enabled'});\r\n        }\r\n        \r\n\t\t\t});\r\n};\r\n\r\n   \r\n  let editdetails=(item:any,id:any)=> {\r\n    const updatedData = data.map((obj:any,i:number)=>{\r\n      if(i===id){\r\n        obj.showDetails = true;\r\n      }else{\r\n        obj.showDetails = false;\r\n      }\r\n      return {...obj}\r\n      });\r\n    setData(updatedData);\r\n    setFormData({...formData,...item.useraccess});\r\n    setFormData1({...formData1,first_name:item.first_name,last_name:item.last_name,phone:item.phone,is_active:item.is_active});\r\n    //setFile(item.file_numbers);\r\n    setSelected(item.file_numbers);\r\n   }\r\n\r\n   const onUpdate = (e:any,id:any)=>{\r\n    e.preventDefault();\r\n    setLoading(true);\r\n    axiosInstance\r\n\t\t\t.put(`/api/customer/manage/user/${formData.user}/`, {\r\n                 first_name: formData1.first_name,\r\n                 last_name:formData1.last_name,\r\n                 phone: formData1.phone,\r\n                 file_numbers:selected,\r\n                 useraccess:\r\n                 {\r\n                  key_finder: formData.key_finder,\r\n                  service_request: formData.service_request,\r\n                  inv_statements:formData.inv_statements,\r\n                  quotes: formData.quotes,\r\n                  hs_signatory:formData.hs_signatory,\r\n                  add_user:formData.add_user,\r\n                  audit:formData.audit\r\n                } ,\r\n                method: \"put\"\r\n            },{ headers: {\"Authorization\" : `Bearer ${localStorage.getItem('access_token')}`} }\r\n            )\r\n\t\t\t.then((res) => {\r\n        setLoading(false);\r\n        let node = toast.current;\r\n        if(res.data.status===200){\r\n          if(node){\r\n             node.show({severity: 'success',  detail: 'User Updated Successfully'});\r\n          }\r\n        const updatedData = data.map((obj:any,i:number)=>{\r\n          if(i===id){\r\n            obj.showDetails = false;\r\n            obj.first_name= formData1.first_name;\r\n            obj.last_name=formData1.last_name;\r\n            obj.phone= formData1.phone;\r\n            obj.file_numbers= selected;\r\n            obj.useraccess.key_finder= formData.key_finder;\r\n            obj.useraccess.service_request= formData.service_request;\r\n            obj.useraccess.inv_statements=formData.inv_statements;\r\n            obj.useraccess.quotes= formData.quotes;\r\n            obj.useraccess.hs_signatory=formData.hs_signatory;\r\n            obj.useraccess.add_user=formData.add_user;\r\n            obj.useraccess.audit=formData.audit;\r\n          }\r\n          return {...obj}\r\n        })\r\n        setData(updatedData);\r\n      }else {\r\n        setLoading(false);\r\n        if(node){\r\n           node.show({severity: 'error', detail: 'Wrong Details'});\r\n        }\r\n      }\r\n\t\t\t});\r\n\r\n   }\r\n   const fetchDataAsync = async (offset:any,limit:any) => {\r\n    try {\r\n        setLoading(true);\r\n        const api = `/api/customer/manage/user/?limit=${limit}&offset=${offset}`;\r\n        let response = await axiosInstance.get(api, { headers: {\"Authorization\" : `Bearer ${localStorage.getItem('access_token')}`} });\r\n        setData(response.data.results.data.map((obj:any)=>{\r\n          return({...obj, showDetails: false\r\n          })\r\n        }));\r\n        if(!(data===null)){\r\n          setLoading(false);\r\n        }\r\n        setFile_numbers(response.data.results.file_numbers);\r\n        setCurrentuser(response.data.results.current_user);\r\n        setCurrent_user_access(response.data.results.current_user_access);\r\n        setAdd_user(response.data.results.current_user_access.add_user)\r\n        setTotalRecords(response.data.count);\r\n        \r\n        return data;\r\n    }catch(error){\r\n      setLoading(false);\r\n        throw error;\r\n    }\r\n }   \r\n\r\n\r\n   useEffect(() =>{\r\n     fetchDataAsync(null,null);\r\n  },[]);\r\n\r\n \r\n  function cancel(id:any) {\r\n    const updatedData = data.map((obj:any,i:number)=>{\r\n        if(i===id){\r\n          obj.showDetails = false;\r\n        }\r\n        return {...obj}\r\n    })\r\n    setData(updatedData);\r\n    //setEdit(false);\r\n    //renderEditForm(data[id].showDetails,id);\r\n   }\r\n \r\n   let renderEditForm =(show:any,id:any)=>{\r\n     if(show){\r\n       return(\r\n         <>\r\n         <tr>\r\n           <td colSpan={10}>\r\n           <div className=\"content\" style={{height:\"23.18rem\",border:'1px solid #12739A',overflowX:'hidden'}}>\r\n          <div>\r\n          <div className=\"accordian\"> \r\n                    <div className=\"col-12\">\r\n                        <div className=\"row\">\r\n                                <div className=\"col-6\">\r\n                                    <p style={{color:\"#fff\",textAlign:\"left\",marginTop:\"0.625rem\"}}>Edit User Permissions</p>\r\n                                </div>\r\n                                <div className=\"col-6\">\r\n                                    <span className=\"detail-created\" onClick={(e)=>onUpdate(e,id)} ><img style={{marginRight:\".5rem\",marginLeft:'0.625rem',width:'1rem'}} alt=\"save\" src={save} />Save</span>\r\n                                    <span className=\"detail-created\" onClick={()=>cancel(id)} >Cancel</span>\r\n                                </div>\r\n                        </div>\r\n                    </div>\r\n            </div><br/>\r\n            \r\n            <div className=\"row\" style={{padding:\"1rem\"}}>\r\n                    <div className=\"col-4\">\r\n                        <input type=\"text\" name=\"first_name\" className=\"form-control\" placeholder=\"Enter First Name *\" value={formData1.first_name} onChange={handleInputChange}/>\r\n                    </div>\r\n                    <div className=\"col-4\">\r\n                        <input type=\"text\" name=\"last_name\" className=\"form-control\" placeholder=\"Enter Last Name *\" value={formData1.last_name} onChange={handleInputChange}/>\r\n                    </div>\r\n                    <div className=\"col-4\">\r\n                        <input type=\"text\" name='phone' className=\"form-control\" placeholder=\"Phone Number *\" value={formData1.phone} onChange={handleInputChange}/>\r\n                    </div>\r\n                    \r\n                </div>\r\n                <div className=\"col-4\">\r\n                          <Select\r\n                              className=\"dropdown\"\r\n                              placeholder=\"Select Option *\"\r\n                              value={options.filter((obj: { value: any; }) => selected.includes(obj.value))} // set selected values\r\n                              options={options} // set list of the data\r\n                              onChange={handleChange} // assign onChange function\r\n                              isMulti\r\n                              isClearable\r\n                          />\r\n                    </div>\r\n                <br></br>\r\n            <div className=\"form-check\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-4\">\r\n                            <input style={{height:\"1.375rem\",width:\"1.375rem\",cursor:'pointer'}} name=\"key_finder\"  className=\"form-check-input\" type=\"checkbox\" checked={formData.key_finder} onChange={handleCheckboxChange}  id=\"flexCheckDefault\" disabled={!current_user_access.key_finder}/>\r\n                            <label style={{paddingLeft:\"1.1em\"}} className=\"form-check-label\" >\r\n                            Manage Keys\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"col-4\">\r\n                            <input style={{height:\"1.375rem\",width:\"1.375rem\",cursor:'pointer'}} name=\"service_request\"   className=\"form-check-input\" type=\"checkbox\" checked={formData.service_request} onChange={handleCheckboxChange}  id=\"flexCheckDefault6\" disabled={!current_user_access.service_request}/>\r\n                            <label style={{paddingLeft:\"1.1em\"}} className=\"form-check-label\" >\r\n                            Request Service\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"col-4\">\r\n                            <input style={{height:\"1.375rem\",width:\"1.375rem\",cursor:'pointer'}} name=\"inv_statements\"  className=\"form-check-input\" type=\"checkbox\" checked={formData.inv_statements} onChange={handleCheckboxChange} id=\"flexCheckDefault1\" disabled={!current_user_access.inv_statements}/>\r\n                            <label style={{paddingLeft:\"1.1em\"}} className=\"form-check-label\" >\r\n                            Pay Bills\r\n                            </label>\r\n                        </div>\r\n                    </div><br></br>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-4\">\r\n                            <input style={{height:\"1.375rem\",width:\"1.375rem\",cursor:'pointer'}} name=\"quotes\"   className=\"form-check-input\" type=\"checkbox\" checked={formData.quotes}  onChange={handleCheckboxChange} id=\"flexCheckDefault2\" disabled={!current_user_access.quotes}/>\r\n                            <label style={{paddingLeft:\"1.1em\"}} className=\"form-check-label\" >\r\n                            Accept Quotes\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"col-4\">\r\n                            <input style={{height:\"1.375rem\",width:\"1.375rem\",cursor:'pointer'}} name=\"hs_signatory\"  className=\"form-check-input\" type=\"checkbox\" checked={formData.hs_signatory} onChange={handleCheckboxChange} id=\"flexCheckDefault3\" disabled={!current_user_access.hs_signatory}/>\r\n                            <label style={{paddingLeft:\"1.1em\"}} className=\"form-check-label\" >\r\n                            key Authorizers\r\n                            </label>\r\n                        </div>\r\n                    </div><br></br>\r\n                    <div className=\"row\" style={{paddingBottom:'1rem'}}>\r\n                        <div className=\"col-4\">\r\n                            <input style={{height:\"1.375rem\",width:\"1.375rem\",cursor:'pointer'}} name=\"add_user\"  className=\"form-check-input\" type=\"checkbox\" checked={formData.add_user} onChange={handleCheckboxChange} id=\"flexCheckDefault4\" disabled={!current_user_access.add_user}/>\r\n                            <label style={{paddingLeft:\"1.1em\"}} className=\"form-check-label\" >\r\n                            Users\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"col-4\">\r\n                            <input style={{height:\"1.375rem\",width:\"1.375rem\",cursor:'pointer'}} name=\"audit\" className=\"form-check-input\" type=\"checkbox\" checked={formData.audit} onChange={handleCheckboxChange} id=\"flexCheckDefault5\" disabled={!current_user_access.audit}/>\r\n                            <label style={{paddingLeft:\"1.1em\"}} className=\"form-check-label\">\r\n                            Audit Trails\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n                </div>\r\n           </td>\r\n         </tr>    \r\n        </>\r\n       )\r\n     }\r\n   }   \r\n\r\n   const onPageChange = (event:any) => {\r\n    setLimit(event.rows);\r\n    setOffset(event.first);\r\n    fetchDataAsync(event.first,event.rows);\r\n}\r\n\r\nconst permission = () =>{\r\n  toast.current.show({severity: 'error', detail:  `You don't have permission`});\r\n}\r\n\r\n  function newuser() {\r\n    setAddnewuser(true);\r\n  }\r\n\r\n  function addnew(){\r\n    setAddnewuser(false);\r\n  }\r\n\r\n  function addToast(){\r\n    fetchDataAsync(null,null);\r\n    toast.current.show({severity: 'success', detail: 'User Created'});\r\n  }\r\n\r\n  const lastLoginDate  = currentuser.last_login? new Date(currentuser.last_login).toLocaleDateString(): '';\r\n  const lastUpdatedDate = currentuser.last_modified? new Date(currentuser.last_modified).toLocaleDateString(): \"\";\r\n\r\n  \r\n\r\n      return (\r\n        <>\r\n           { addnewuser ? \r\n           <AddNewUser addnewuser={addnew} addtoast={addToast} permissions ={current_user_access}/>\r\n           :\r\n          <div>\r\n          \r\n             <Toast ref={toast} />\r\n\r\n            {loading ? <div className='overlay-box1'>\r\n                    <FadeLoader css={override} color={\"rgb(0, 158, 214)\"} loading={loading}  height={30} width={5} radius={2} margin={20} />\r\n                </div> :''}\r\n            <div className=\"upper1\" >\r\n                <div className=\"row\">\r\n                  <div style={{marginTop:\"0.625rem\",marginLeft:\"1.25rem\"}} className=\"col-6\">\r\n                      <p><span style={{color:\"#009DD0\",fontSize:\"1.5rem\"}}><span style={{fontWeight:\"bold\"}}>Welcome</span>  {currentuser.first_name} {currentuser.last_name}</span></p>\r\n                      <p> Your last log in was on :  <strong>{lastLoginDate}</strong></p>\r\n                      <p>Last Updated:  <strong>{lastUpdatedDate}</strong></p>\r\n                  </div>\r\n                  <div className=\"col-6\">\r\n                     <button onClick={newuser} style={add_user ? {fontWeight:\"lighter\",marginTop:\"-3.75rem\",float:\"right\",marginRight:\"-31.25rem\"}: {visibility:\"hidden\"}} className=\"btn btn-outline-danger\">+Add New User</button>\r\n                  </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"content\" >\r\n              <table className=\"table\" >\r\n                  <thead style={{ color: \"#fff\",backgroundColor:\"#12739A\" }}>\r\n                    <tr>\r\n                      <th>User Name</th>\r\n                      <th style={{textAlign:\"center\"}}>Email ID</th>\r\n                      <th>Manage Keys</th>\r\n                      <th>Request Service</th>\r\n                      <th>Pay Bills</th>\r\n                      <th>Accept Quotes</th>\r\n                      <th>Key Authorizers</th>\r\n                      <th>Users</th>\r\n                      <th>Audit Trails</th>\r\n                      <th style={{textAlign:\"right\"}}>Actions</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                  {data.map((item: any,i: any)=>{\r\n                  return(\r\n                    <>\r\n                    <tr key={i}>\r\n                      <td style={{textAlign:\"left\"}}>{item.first_name} {item.last_name}</td>\r\n                      <td >{item.email}</td>\r\n                      <td>\r\n                         <input style={{height:\"1.375rem\",width:\"1.375rem\", borderRadius:\".25em\",position:\"initial\",marginLeft:'0px'}}  type=\"checkbox\"  checked={item.useraccess.key_finder} className=\"form-check-input\" disabled/>\r\n                      </td>\r\n                      <td>\r\n                         <input style={{height:\"1.375rem\",width:\"1.375rem\", borderRadius:\".25em\",position:\"initial\",marginLeft:'0px'}}  type=\"checkbox\"  checked={item.useraccess.service_request} className=\"form-check-input\" disabled/>\r\n                      </td>\r\n                      <td>\r\n                         <input style={{height:\"1.375rem\",width:\"1.375rem\", borderRadius:\".25em\",position:\"initial\",marginLeft:'0px'}}  type=\"checkbox\"  checked={item.useraccess.inv_statements} className=\"form-check-input\" disabled/>\r\n                      </td>\r\n                      <td>\r\n                         <input style={{height:\"1.375rem\",width:\"1.375rem\", borderRadius:\".25em\",position:\"initial\",marginLeft:'0px'}}  type=\"checkbox\"  checked={item.useraccess.quotes} className=\"form-check-input\" disabled/>\r\n                      </td>\r\n                      <td>\r\n                         <input style={{height:\"1.375rem\",width:\"1.375rem\", borderRadius:\".25em\",position:\"initial\",marginLeft:'0px'}}  type=\"checkbox\"  checked={item.useraccess.hs_signatory} className=\"form-check-input\" disabled/>\r\n                      </td>\r\n                      <td>\r\n                         <input style={{height:\"1.375rem\",width:\"1.375rem\", borderRadius:\".25em\",position:\"initial\",marginLeft:'0px'}}  type=\"checkbox\"  checked={item.useraccess.add_user} className=\"form-check-input\" disabled/>\r\n                      </td>\r\n                      <td>\r\n                         <input style={{height:\"1.375rem\",width:\"1.375rem\", borderRadius:\".25em\",position:\"initial\",marginLeft:'0px'}}  type=\"checkbox\"  checked={item.useraccess.audit} className=\"form-check-input\" disabled/>\r\n                      </td>\r\n                      <td>\r\n                      <img style={{cursor:\"pointer\",marginLeft:'-0.625rem',width:'37%'}} onClick={add_user ? ()=>editdetails(item,i) : permission} alt=\"edit\" src={edit1} />\r\n                      <label className=\"switch\" style={{marginLeft:\"0.313rem\"}}>\r\n                          <input type=\"checkbox\" name=\"userdisable\"  defaultChecked={item.is_active} onChange={add_user ? (e)=>handleCheckboxSlider(e,item): permission} disabled={add_user ? false :true}/>\r\n                          <span style={{marginBottom:\"-0.438rem\"}} className=\"slider round\"></span>\r\n                        </label>\r\n                      </td>\r\n                    </tr>\r\n                       \r\n                      {item.showDetails && \r\n                      renderEditForm(item.showDetails,i)}\r\n                    </>\r\n                    )})}\r\n                    <tr>\r\n                    <td colSpan={10}>\r\n                      <Paginator first={offset} rows={limit} totalRecords={totalRecords} rowsPerPageOptions={[10, 20, 30]} \r\n                      template=\"RowsPerPageDropdown CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink \"\r\n                      onPageChange={onPageChange}></Paginator>\r\n                    </td>\r\n                  </tr>\r\n                  </tbody>\r\n                  \r\n                </table> \r\n                \r\n                \r\n                <div>\r\n            </div>\r\n          </div>\r\n         \r\n          </div>\r\n}\r\n        </>\r\n      );\r\n    }\r\n\r\n\r\nexport default ManageUser;  ","C:\\Data\\django\\customer_portal\\frontend\\src\\component\\sidebar\\UserInformation.tsx",[],"C:\\Data\\django\\customer_portal\\frontend\\src\\component\\sidebar\\ViewKeysDetails.tsx",[],"C:\\Data\\django\\customer_portal\\frontend\\src\\component\\sidebar\\EditUserInformation.tsx",[],"C:\\Data\\django\\customer_portal\\frontend\\src\\component\\sidebar\\AddNewUser.tsx",["180","181"],"import React, { useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router';\r\nimport axiosInstance from '../../api/api';\r\nimport save from '../icons/floppy-disk.svg';\r\n//import MultiSelect from \"react-multi-select-component\";\r\nimport { Toast } from 'primereact/toast';\r\nimport { useRef } from 'react';\r\nimport Select from 'react-select';\r\nimport FadeLoader from \"react-spinners/FadeLoader\";\r\nimport { css } from \"@emotion/core\";\r\n\r\nconst override = css`\r\n  margin: 0 auto;\r\n  border-color: red;\r\n  background-color: #ccc;\r\n  top:40%;\r\n  margin-left:-16%;\r\n`;\r\n\r\nconst validEmailRegex = RegExp(\r\n    /^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i\r\n  );\r\n\r\nlet AddNewUser = (props:any) =>{\r\n    let history = useHistory();\r\n    const toast: any = useRef();\r\n    const initialFormData = Object.freeze({\r\n        first_name:'',\r\n        last_name:'',\r\n        email: '',\r\n        phone:'',\r\n        key_finder:false,\r\n        service_request:false,\r\n        inv_statements:false,\r\n        quotes: false,\r\n        hs_signatory:false,\r\n        add_user:false,\r\n        audit:false,\r\n    });\r\n    const [formData, setFormData] = useState(initialFormData);\r\n    const [file, setFile] = useState<any>([]);\r\n    const [selected, setSelected] = useState<any>([]);\r\n    const [loading, setLoading] = useState<any>(false);\r\n\r\n    const options = file.map((item: any,i: any)=>{ \r\n            return (\r\n            { label: item.file_number+((item.location===null)?'':\" - \"+item.location), value: item.id})\r\n      });\r\n\r\n\r\n    const handleChange = (event:any) => {\r\n        setSelected(Array.isArray(event) ? event.map(x => x.value) : []);\r\n      }\r\n\r\n    const handleInputChange = (e: { target: { name: any; value: any; }; }) =>{\r\n        let name = e.target.name;\r\n        let value = e.target.value;\r\n        setFormData({...formData,[name]:value});\r\n        \r\n    };\r\n    const handleCheckboxChange = (e: { target: { name: any; checked:any }; }) =>{\r\n        let name = e.target.name;\r\n        let checked = e.target.checked;\r\n        setFormData({...formData,[name]:checked});\r\n        \r\n    };\r\n\r\n    useEffect(() =>{\r\n        const fetchDataAsync = async () => {\r\n            try {\r\n                const api = '/api/customer/user/file-numbers/';\r\n                let response = await axiosInstance.get(api, { headers: {\"Authorization\" : `Bearer ${localStorage.getItem('access_token')}`} });\r\n                setFile(response.data.data);\r\n                return file;\r\n            }catch(error){\r\n                throw error;\r\n            }\r\n         }   \r\n         fetchDataAsync()\r\n      },[]);\r\n    \r\n\r\n    function cancel() {\r\n        props.addnewuser(false);\r\n    \r\n       }\r\n\r\n       const formValidation = () =>{\r\n        let isValid = true;\r\n        const node = toast.current;\r\n        let numbers = /[0-9]/g;\r\n         if(formData.first_name === ''){\r\n            if(node){\r\n                node.show({severity: 'error',  detail: \"Please enter First Name\"});\r\n                }\r\n            isValid = false;\r\n         }else if(formData.last_name === ''){\r\n            if(node){\r\n                node.show({severity: 'error',  detail: \"Please enter Last Name\"});\r\n                }\r\n            isValid = false;\r\n         }else if(formData.email=== ''){\r\n            if(node){\r\n                node.show({severity: 'error',  detail: \"Please enter Email Address\"});\r\n                }\r\n            isValid = false ;\r\n        }else if(!validEmailRegex.test(formData.email)){\r\n            if(node){\r\n                node.show({severity: 'error',  detail: \"Please enter a valid Email Address\"});\r\n                }\r\n            isValid = false ;\r\n        }else if(formData.phone === ''){\r\n            if(node){\r\n                node.show({severity: 'error',  detail: \"Please enter Phone Number\"});\r\n                }\r\n            isValid = false ;\r\n        }else if(!formData.phone.match(numbers)){\r\n            if(node){\r\n                node.show({severity: 'error',  detail: \"Please enter a valid Phone Number\"});\r\n                }\r\n            isValid = false ;\r\n        }\r\n        return isValid\r\n    }\r\n\r\n\r\n    const handleSubmit = (e:any) => {\r\n\t\te.preventDefault();\r\n        let isValid = formValidation();\r\n        if(isValid){\r\n        try{\r\n            setLoading(true);\r\n        axiosInstance\r\n\t\t\t.post(`/api/customer/manage/user/`, {\r\n                first_name:formData.first_name,\r\n                last_name:formData.last_name,\r\n                email:formData.email,\r\n                file_numbers:selected,\r\n                phone:formData.phone,\r\n                useraccess:\r\n                 {\r\n                    key_finder: formData.key_finder,\r\n                    service_request: formData.service_request,\r\n                    inv_statements:formData.inv_statements,\r\n                    quotes: formData.quotes,\r\n                    hs_signatory:formData.hs_signatory,\r\n                    add_user:formData.add_user,\r\n                    audit:formData.audit,\r\n                } ,\r\n                method: \"post\"\r\n            },{ headers: {\"Authorization\" : `Bearer ${localStorage.getItem('access_token')}`} }\r\n            )\r\n\t\t\t.then((res) => {\r\n                let node = toast.current;\r\n                if(res.data.status===200){\r\n                    setLoading(false);\r\n                    props.addnewuser(false);\r\n                    props.addtoast();\r\n                    setFormData({...formData, \r\n                        first_name:'',\r\n                        last_name:'',\r\n                        email: '',\r\n                        phone:'',\r\n                        key_finder:false,\r\n                        service_request:false,\r\n                        inv_statements:false,\r\n                        quotes: false,\r\n                        hs_signatory:false,\r\n                        add_user:false,\r\n                        audit:false,\r\n                     });\r\n                     setSelected([]);\r\n                   \r\n                   \r\n                } else {\r\n                    setLoading(false);\r\n                    if(node){\r\n                    node.show({severity: 'error',  detail: res.data.message});\r\n                    }\r\n                }\r\n            })\r\n            .catch((error)=>{\r\n                setLoading(false);\r\n                if(toast.current){\r\n                toast.current.show({severity: 'error',  detail: \"Server error try again\"});\r\n                }\r\n                \r\n            })\r\n           \r\n        } catch(error){\r\n             throw error;\r\n        }\r\n    }\r\n    }\r\n \r\n        return(\r\n            <>\r\n            <div>\r\n            \r\n            <Toast ref={toast} />\r\n               <div style={{height:\"calc(100vh - 7rem)\",backgroundColor:'white'}} className=\"content\" >\r\n               {loading ? <div className='overlay-box1'>\r\n                    <FadeLoader css={override} color={\"rgb(0, 158, 214)\"} loading={loading}  height={30} width={5} radius={2} margin={20} />\r\n                </div> :''}\r\n                <div className=\"accordian\"> \r\n                    <div className=\"col-12\">\r\n                        <div className=\"row\">\r\n                                <div className=\"col-6\">\r\n                                    <p style={{color:\"#fff\",textAlign:\"left\",marginTop:\"0.6rem\"}}>Add New User</p>\r\n                                </div>\r\n                                <div className=\"col-6\">\r\n                                    <span className=\"detail-created\" onClick={handleSubmit} ><img style={{marginRight:\"0.5rem\",marginLeft:'0.625rem',width:'1rem'}} alt=\"save\" src={save} />Save</span>\r\n                                    <span className=\"detail-created\" onClick={cancel}>Cancel</span>\r\n                                </div>\r\n                        </div>\r\n                    </div>\r\n                </div><br/>\r\n                <div className=\"row\" style={{padding:\"20px\"}}>\r\n                    <div className=\"col-4\">\r\n                        <input type=\"text\" name=\"first_name\" className=\"form-control\" placeholder=\"Enter First Name *\" value={formData.first_name} onChange={handleInputChange}/>\r\n                    </div>\r\n                    <div className=\"col-4\">\r\n                        <input type=\"text\" name=\"last_name\" className=\"form-control\" placeholder=\"Enter Last Name *\" value={formData.last_name} onChange={handleInputChange}/>\r\n                    </div>\r\n                    <div className=\"col-4\">\r\n                        <input type=\"text\" name='email' className=\"form-control\" placeholder=\"Enter Email ID *\" value={formData.email} onChange={handleInputChange}/>\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"row\" style={{padding:\"1.25rem\"}}>\r\n                    <div className=\"col-4\">\r\n                        {/* <MultiSelect\r\n                            options={options}\r\n                            value={options.filter((obj: { value: any; }) => selected.includes(obj.value))} \r\n                            onChange={handleChange}\r\n                            labelledBy={\"Select\"}\r\n                        /> */}\r\n                        <Select\r\n                            className=\"dropdown\"\r\n                            placeholder=\"Select System Number *\"\r\n                            value={options.filter((obj: { value: any; }) => selected.includes(obj.value))} // set selected values\r\n                            options={options} // set list of the data\r\n                            onChange={handleChange} // assign onChange function\r\n                            isMulti\r\n                            isClearable\r\n                        />\r\n                    </div>\r\n                    <div className=\"col-4\">\r\n                        <input type=\"text\" name='phone' className=\"form-control\" placeholder=\"Phone Number *\" value={formData.phone} onChange={handleInputChange}/>\r\n                    </div>\r\n                    <div>\r\n                </div>\r\n                \r\n                </div>\r\n                <br></br>\r\n                \r\n                <div  style={{backgroundColor:'#fff'}}>\r\n                \r\n                <div className=\"form-check\">\r\n                    <div className=\"row\">\r\n                        <div  style={{backgroundColor:\"\t#F0F0F0\",marginLeft:\"-1.5rem\",marginBottom:\"1.25rem\", height:\"3.125rem\"}} className=\"col-12\">\r\n                            <span style={{float:\"left\",fontWeight:500,fontSize:\"1.1rem\",padding:\"0.625rem\"}}>Assign Permissions</span>\r\n                        </div>\r\n                        \r\n                        <div className=\"col-4\">\r\n                            <input style={{height:\"1.375rem\",width:\"1.375rem\",cursor:'pointer'}} name=\"key_finder\" checked={formData.key_finder} className=\"form-check-input\" type=\"checkbox\"  id=\"flexCheckDefault\" onChange={handleCheckboxChange} disabled={!props.permissions.key_finder}/>\r\n                            <label style={{paddingLeft:\"1.1em\",marginTop:\"0.25rem\"}} className=\"form-check-label\" >\r\n                               Manage Keys\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"col-4\">\r\n                            <input style={{height:\"1.375rem\",width:\"1.375rem\",cursor:'pointer'}} name=\"service_request\" checked={formData.service_request}  className=\"form-check-input\" type=\"checkbox\"  id=\"flexCheckDefault1\" onChange={handleCheckboxChange} disabled={!props.permissions.service_request}/>\r\n                            <label style={{paddingLeft:\"1.1em\",marginTop:\"0.25rem\"}} className=\"form-check-label\" >\r\n                                Request Service\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"col-4\">\r\n                            <input style={{height:\"1.375rem\",width:\"1.375rem\",cursor:'pointer'}} name=\"inv_statements\" checked={formData.inv_statements} className=\"form-check-input\" type=\"checkbox\"  id=\"flexCheckDefault2\" onChange={handleCheckboxChange} disabled={!props.permissions.inv_statements}/>\r\n                            <label style={{paddingLeft:\"1.1em\",marginTop:\"0.25rem\"}} className=\"form-check-label\" >\r\n                                Pay Bills\r\n                            </label>\r\n                        </div>\r\n                    </div><br></br>\r\n                    <div className=\"row\">\r\n                        <div className=\"col-4\">\r\n                            <input style={{height:\"1.375rem\",width:\"1.375rem\",cursor:'pointer'}}  name=\"quotes\"  className=\"form-check-input\" type=\"checkbox\"  checked={formData.quotes} id=\"flexCheckDefault3\" onChange={handleCheckboxChange} disabled={!props.permissions.quotes}/>\r\n                            <label style={{paddingLeft:\"1.1em\",marginTop:\"0.25rem\"}} className=\"form-check-label\" >\r\n                                Accept Quotes\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"col-4\">\r\n                            <input style={{height:\"1.375rem\",width:\"1.375rem\",cursor:'pointer'}} name=\"hs_signatory\" checked={formData.hs_signatory} className=\"form-check-input\" type=\"checkbox\"  id=\"flexCheckDefault4\" onChange={handleCheckboxChange} disabled={!props.permissions.hs_signatory}/>\r\n                            <label style={{paddingLeft:\"1.1em\",marginTop:\"0.25rem\"}} className=\"form-check-label\" >\r\n                                Key Authorizers\r\n                            </label>\r\n                        </div>\r\n                    </div><br></br>\r\n                    <div className=\"row\" >\r\n                        <div className=\"col-4\" style={{paddingBottom:'1.3rem',cursor:'pointer'}}>\r\n                            <input style={{height:\"1.375rem\",width:\"1.375rem\"}} name=\"add_user\" checked={formData.add_user}  className=\"form-check-input\" type=\"checkbox\"  id=\"flexCheckDefault5\" onChange={handleCheckboxChange} disabled={!props.permissions.add_user}/>\r\n                            <label style={{paddingLeft:\"1.1em\",marginTop:\"0.25rem\"}} className=\"form-check-label\" >\r\n                                Users\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"col-4\"  >\r\n                            <input style={{height:\"1.375rem\",width:\"1.375rem\",cursor:'pointer'}} name=\"audit\" checked={formData.audit} className=\"form-check-input\" type=\"checkbox\"  id=\"flexCheckDefault6\" onChange={handleCheckboxChange}  disabled={!props.permissions.audit}/>\r\n                            <label style={{paddingLeft:\"1.1em\",marginTop:\"0.25rem\"}} className=\"form-check-label\" >\r\n                                Audit Trails\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                </div>\r\n                </div>\r\n            </div>\r\n            </>\r\n        );\r\n    }\r\nexport default AddNewUser;\r\n","C:\\Data\\django\\customer_portal\\frontend\\src\\component\\sidebar\\ViewKeys.tsx",["182","183","184","185"],"C:\\Data\\django\\customer_portal\\frontend\\src\\component\\sidebar\\ViewKeysGroup.tsx",["186","187","188","189","190","191","192","193","194","195","196","197","198","199","200","201"],"C:\\Data\\django\\customer_portal\\frontend\\src\\component\\sidebar\\CompanyDetailsSummary.tsx",[],"C:\\Data\\django\\customer_portal\\frontend\\src\\component\\sidebar\\SystemNumber.tsx",[],"C:\\Data\\django\\customer_portal\\frontend\\src\\component\\sidebar\\Accounting.tsx",["202","203"],"import React from 'react';\r\nimport AccountingDetails from './AccountingDetails';\r\nimport viewa from '../icons/viewa.svg';\r\nimport axiosInstance, {baseURL} from '../../api/api';\r\nimport FadeLoader from \"react-spinners/FadeLoader\";\r\nimport { css } from \"@emotion/core\";\r\nimport dollar from '../icons/dollar.svg';\r\nimport cancel from '../icons/cancel.svg';\r\nimport question from '../icons/question-mark.svg';\r\nimport Modal from 'react-modal';\r\nimport { Toast } from 'primereact/toast';\r\nimport { Paginator } from 'primereact/paginator';\r\nimport { DataTable } from 'primereact/datatable';\r\nimport { Column } from 'primereact/column';\r\nimport Payment from './Payement/Payment';\r\nimport  jsPDF from \"jspdf\";\r\nimport 'jspdf-autotable';\r\nimport { autoTable } from 'jspdf-autotable';\r\nimport image from '../icons/pdf-1.svg';\r\n\r\nconst override = css`\r\n  margin: 0 auto;\r\n  border-color: red;\r\n  background-color: transparent;\r\n  top:40%;\r\n  margin-left:-16%;\r\n`;\r\n\r\ninterface Props{\r\n    edit:boolean;\r\n    data:any;\r\n    loc_no:any;\r\n    last_name: any;\r\n    cus_no:any;\r\n    terms:any;\r\n    total_amount:any;\r\n    loading : boolean;\r\n    modalIsOpen:any;\r\n    invoiceModalIsOpen:any;\r\n    allInvoiceModalIsOpen:any;\r\n    address :any;\r\n    location:any;\r\n    amount :any;\r\n    message:any;\r\n    offset: any;\r\n    perPage: any;\r\n    totalRecords: any;\r\n    pageCount:any;\r\n    tableData :any;\r\n    allInvoice:any;\r\n    selectedProducts:any;\r\n    selectedAmount:any;\r\n    card:boolean;\r\n    invoiceLocation:any;\r\n    invoiceAddress:any;\r\n    invoiceLoc_no:any;\r\n    selectedAllProducts:any;\r\n    selectedAllAmount:any;\r\n    over_30:any;\r\n    over_60:any;\r\n    over_90:any;\r\n  }\r\nclass Accounting extends React.Component<{},Props> {\r\n  mytoast: React.RefObject<any>;\r\n    constructor(props:Props){\r\n        super(props);\r\n        this.mytoast = React.createRef();\r\n        this.state={\r\n          edit:false,\r\n          data: [],\r\n          loc_no:'',\r\n          last_name : '',\r\n          cus_no :'',\r\n          terms:'',\r\n          total_amount:'',\r\n          over_30:'',\r\n          over_60:'',\r\n          over_90:'',\r\n          loading : false,\r\n          modalIsOpen: false,\r\n          invoiceModalIsOpen:false,\r\n          allInvoiceModalIsOpen:false,\r\n          address : '',\r\n          location : '',\r\n          amount : '',\r\n          message: '',\r\n            offset: 0,\r\n            perPage: 10,\r\n            totalRecords: 0,\r\n            pageCount:0,\r\n            tableData : [],\r\n            allInvoice:[],\r\n            selectedProducts: null,\r\n            selectedAmount: 0,\r\n            selectedAllProducts:null,\r\n            selectedAllAmount:0,\r\n            card:false,\r\n            invoiceLocation:'',\r\n            invoiceAddress:'',\r\n            invoiceLoc_no:'',\r\n        }}\r\n\r\n        customStyles = {\r\n            content : {\r\n              top                   : '50%',\r\n              left                  : '50%',\r\n              right                 : 'auto',\r\n              bottom                : 'auto',\r\n              marginRight           : '-20%',\r\n              transform             : 'translate(-50%, -50%)',\r\n              width                 : '31.5rem',\r\n              height                : '33.75rem'\r\n            }\r\n          };\r\n          invoiceStyles = {\r\n            content : {\r\n              top                   : '50%',\r\n              left                  : '50%',\r\n              right                 : 'auto',\r\n              bottom                : 'auto',\r\n              marginRight           : '-20%',\r\n              transform             : 'translate(-50%, -50%)',\r\n              width                 : '46.875rem',\r\n              height                : '37.5rem',\r\n            }\r\n          };\r\n\r\n\r\n         exportPDFinvoices = async() => {\r\n          /* try {\r\n            const api = 'customer/accounting/all/invoice/';\r\n            this.setState({loading:true});\r\n            let response = await axiosInstance.get(api, { headers: {\"Authorization\" : `Bearer ${localStorage.getItem('access_token')}`} });\r\n\r\n        }catch(error){\r\n            const node = this.mytoast.current;\r\n            this.setState({loading : false});\r\n            if(node){\r\n                node.show({severity: 'error', detail: 'Server Error'});\r\n            }\r\n            throw error;\r\n        } */\r\n        /* const unit = \"pt\";\r\n          const size = \"A4\"; // Use A1, A2, A3 or A4\r\n          const orientation = \"portrait\"; // portrait or landscape\r\n          const marginLeft = 40;\r\n          const doc = new jsPDF(orientation, unit, size);\r\n          doc.setFontSize(15);\r\n      \r\n          const title = \"Invoices\";\r\n          const headers = [[\"Location Name\", \"Address\"]];\r\n          const data = this.state.data.map((item:any)=> [item.location, item.address]);\r\n      \r\n          let content = {\r\n            startY: 50,\r\n            head: headers,\r\n            body: data\r\n          };\r\n          doc.text(title, marginLeft, 40);\r\n          (doc as jsPDF & { autoTable: autoTable }).autoTable (content);\r\n          doc.save(\"Invoices.pdf\");  */\r\n      };\r\n           \r\n\r\n        exportPDFsingleinvoices = async(location:any,address:any,loc_no:any) => {\r\n\r\n          this.setState({loading:true});\r\n            try {\r\n              const api = `/api/customer/invoice/payment/${loc_no}/`;\r\n              let response = await axiosInstance.get(api, { headers: {\"Authorization\" : `Bearer ${localStorage.getItem('access_token')}`} });\r\n              \r\n              if(!(this.state.allInvoice === null))\r\n              {\r\n                  this.setState({loading : false});\r\n              }\r\n              const unit = \"pt\";\r\n          const size = \"A4\"; // Use A1, A2, A3 or A4\r\n          const orientation = \"portrait\"; // portrait or landscape\r\n          const marginLeft = 40;\r\n          const doc = new jsPDF(orientation, unit, size);\r\n          doc.setFontSize(15);\r\n      \r\n          const headers = [[\"Invoice number\", \"Amount\"]];\r\n          const data = response.data.map((item:any)=> [item.invoice, item.amount]);\r\n      \r\n          let content = {\r\n            startY: 100,\r\n            head: headers,\r\n            body: data\r\n          };\r\n          doc.text(`${location}`, marginLeft, 40);\r\n          doc.text(`${address}`, marginLeft, 80);\r\n          (doc as jsPDF & { autoTable: autoTable }).autoTable (content);\r\n          doc.save(\"Invoices.pdf\"); \r\n          }catch(error){\r\n              this.setState({loading : false});\r\n              throw error;\r\n          }\r\n          \r\n          \r\n        };\r\n\r\n        componentDidMount = async ()=>{\r\n            try {\r\n                \r\n                const api = '/api/customer/accounting/';\r\n                this.setState({loading:true});\r\n                let response = await axiosInstance.get(api, { headers: {\"Authorization\" : `Bearer ${localStorage.getItem('access_token')}`} });\r\n                this.setState({data:response.data.data.map((obj:any)=>{\r\n                    return({...obj, showDetails: false\r\n                    })\r\n                  })});\r\n                    let slice = response.data.data.slice(this.state.offset, this.state.offset + this.state.perPage);\r\n                    this.setState({pageCount: Math.ceil(response.data.data.length / this.state.perPage), totalRecords: response.data.data.length});\r\n                    this.setState({tableData:slice.map((obj:any)=>{\r\n                        return({...obj, showDetails: false\r\n                        })\r\n                      })});\r\n                if(!(this.state.data.length === 0))\r\n                {\r\n                    this.setState({loading : false});\r\n                }else {\r\n                  this.setState({loading : false});\r\n                  this.mytoast.current.show({severity: 'error',  detail: 'No record found'});\r\n                }\r\n                this.setState({last_name:response.data.last_name, cus_no: response.data.cus_no, terms:response.data.terms, total_amount:response.data.total_amount, over_30:response.data.over_30, over_60:response.data.over_60, over_90:response.data.over_90})\r\n            }catch(error){\r\n                const node = this.mytoast.current;\r\n                this.setState({loading : false});\r\n                if(node){\r\n                    node.show({severity: 'error', detail: 'Server Error'});\r\n                }\r\n                throw error;\r\n            }\r\n        }\r\n\r\n        formValidation = () =>{\r\n          let isValid = true;\r\n          if(this.state.message === ''){\r\n                  this.mytoast.current.show({severity: 'error', detail: \"Please enter Description\"});\r\n              isValid = false;\r\n           }\r\n          return isValid\r\n      }\r\n\r\n         handleSubmit = (e:any) => {\r\n            e.preventDefault();\r\n            let isValid = this.formValidation();\r\n            if(isValid){\r\n            this.setState({loading:true});\r\n            try{\r\n            axiosInstance\r\n                .post(`/api/customer/accounting/help/`, {\r\n                    location:this.state.location,\r\n                    loc_no:this.state.loc_no,\r\n                    address:this.state.address,\r\n                    amount:this.state.amount,\r\n                    message:this.state.message,\r\n                },{ headers: {\"Authorization\" : `Bearer ${localStorage.getItem('access_token')}`} }\r\n                )\r\n                .then((res) => {\r\n                  this.setState({loading:false});\r\n                    const node = this.mytoast.current;\r\n                    if(res.data.status===200){\r\n                        if(node){\r\n                            node.show({severity: 'success',  detail: 'Query Send Successfully'});\r\n                        }\r\n                        this.setState({message:'',modalIsOpen:false});\r\n                    } else {\r\n                        if(node){\r\n                          node.show({severity: 'error',  detail: 'Something went wrong, please contact to Calgary Lock and Safe'});\r\n                        }\r\n                    }\r\n                })\r\n                .catch((error)=>{\r\n                  this.setState({loading:false});\r\n                    const node = this.mytoast.current;\r\n                    if(node){\r\n                        node.show({severity: 'error',  detail: 'Something went wrong'});\r\n                      }\r\n                })\r\n               \r\n            } catch(error){\r\n                 throw error;\r\n            }\r\n          }\r\n        }\r\n\r\n        onPageChange = (event:any) => {\r\n          let offset = event.first;\r\n          let perPage = event.rows;\r\n          this.setState({offset:offset, perPage:perPage});\r\n          let slice = this.state.data.slice(offset, offset + perPage);\r\n          this.setState({tableData:slice});\r\n      }\r\n\r\n        details=(loc_no:any,id:any)=> {\r\n          \r\n            const updatedData = this.state.tableData.map((obj:any,i:number)=>{\r\n              if(i===id){\r\n                if(obj.showDetails=== false){\r\n                  this.setState({loading:true});\r\n                }\r\n              }\r\n                if(i===id){\r\n                  obj.showDetails = true;\r\n                }else{\r\n                  obj.showDetails = false;\r\n                }\r\n                return {...obj}\r\n                });\r\n              this.setState({tableData :updatedData});\r\n            //this.setState({edit:true});\r\n            this.setState({loc_no:loc_no});\r\n           };\r\n\r\n           loadt = () =>{\r\n            this.setState({loading:true});\r\n          }\r\n           load = () =>{\r\n             this.setState({loading:false});\r\n           }\r\n        \r\n           renderEditForm=(show:any,id:any)=>{\r\n            if(show){\r\n              return(\r\n                <>\r\n                <tr style={{height:\"0px\"}}>\r\n                    <td colSpan={6}>\r\n                        <AccountingDetails load={this.load} loadt={this.loadt} locationNo={this.state.loc_no} cus_no={this.state.cus_no}/>\r\n                     </td>\r\n                </tr>\r\n               </>\r\n              )\r\n            }\r\n          } \r\n\r\n          renderModal = () =>{ \r\n            return(\r\n                <>\r\n                <div>\r\n                <div style={{textAlign:'right'}}>\r\n                  <img alt=\"cancel\" style={{width:'1.875rem',cursor:'pointer'}} onClick={this.closeModal} src={cancel}/>\r\n               </div>\r\n                <div style={{marginLeft:'0.938rem'}}>\r\n                    <div className=\"form-group row\">\r\n                        <label htmlFor=\"staticEmail\" style={{color:\"#888888\", fontSize:'0.875rem'}} className=\"col-4 col-form-label\">Location:</label>\r\n                        <div className=\"col-sm-6\">\r\n                           <span style={{fontSize:'0.875rem' , color:'#000000'}} className=\"form-control-plaintext\">{this.state.location}</span>\r\n                        </div>\r\n                    </div>  \r\n                    <div className=\"form-group row\">\r\n                        <label style={{color:\"#888888\", fontSize:'0.875rem'}}  className=\"col-sm-4 col-form-label\">Address:</label>\r\n                        <div className=\"col-sm-6\">\r\n                           <span style={{fontSize:'0.875rem' , color:'#000000'}} className=\"form-control-plaintext\">{this.state.address}</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group row\">\r\n                        <label style={{color:\"#888888\", fontSize:'0.875rem'}}  className=\"col-sm-4 col-form-label\">Location_number:</label>\r\n                        <div className=\"col-sm-6\">\r\n                           <span style={{fontSize:'0.875rem' , color:'#000000'}} className=\"form-control-plaintext\">{this.state.loc_no}</span>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group row\">\r\n                        <label style={{color:\"#888888\", fontSize:'0.875rem'}}  className=\"col-sm-4 col-form-label\">Amount:</label>\r\n                        <div className=\"col-sm-6\">\r\n                           <span style={{fontSize:'0.875rem' , color:'#000000'}} className=\"form-control-plaintext\">{this.state.amount}</span>\r\n                        </div>\r\n                    </div>  <br></br>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"exampleFormControlTextarea1\" style={{color:\"#888888\"}} >Request Description</label>\r\n                        <textarea className=\"form-control\" style={{width:'26.188rem', height:'7.375rem'}} id=\"exampleFormControlTextarea1\" name='message' value={this.state.message} onChange={(e)=>{this.setState({message : e.target.value})}}></textarea>\r\n                    </div>\r\n                    <div>\r\n                  <   button style={{backgroundColor:\"#009ED6\",width:\"26.188rem\", height:'2.5rem'}} onClick={this.handleSubmit} className=\"btn btn-primary\" type=\"submit\">Send</button>\r\n                  </div>\r\n                </div>\r\n                </div>\r\n                </>\r\n            )\r\n          }\r\n\r\n          totalSelectedAmount = async(e:any) =>{\r\n            let sel = e.value;\r\n            var sum = 0;\r\n            await this.setState({selectedProducts : sel});\r\n            this.state.selectedProducts.map((item:any)=>{\r\n               sum = sum + parseFloat(item.amount);\r\n            });\r\n            this.setState({selectedAmount:sum.toFixed(2)});\r\n          } \r\n          \r\n          totalAllSelectedAmount = async(e:any) =>{\r\n            let sel = e.value;\r\n            var sum = 0;\r\n            await this.setState({selectedAllProducts : sel});\r\n            this.state.selectedAllProducts.map((item:any)=>{\r\n               sum = sum + parseFloat(item.amount);\r\n            });\r\n            this.setState({selectedAllAmount:sum.toFixed(2)});\r\n          } \r\n\r\n          pay = () =>{\r\n            this.setState({card:true});\r\n          }\r\n          \r\n          cancelPay = () =>{\r\n            this.setState({card:false});\r\n          }\r\n\r\n          changeModal = () =>{\r\n            this.setState({invoiceModalIsOpen:false});\r\n          }\r\n\r\n          renderInvoiceModal = () =>{\r\n            if(this.state.card){\r\n              return (\r\n                <><div>\r\n                <div style={{textAlign:'right'}}>\r\n                  <img alt=\"cancel\" style={{width:'1.875rem',cursor:'pointer'}} onClick={this.closeModal} src={cancel}/>\r\n                </div>\r\n                <Payment invoiceLocation={this.state.invoiceLocation} \r\n                         invoiceAddress={this.state.invoiceAddress}\r\n                         selectedAmount={this.state.selectedAmount}\r\n                         selectedProducts={this.state.selectedProducts}\r\n                         loc_no={this.state.invoiceLoc_no}\r\n                         getItem={this.changeModal}\r\n                          />\r\n                <div style={{textAlign:'center'}}>\r\n                <button \r\n                  className=\"btn btn-outline-danger\"\r\n                  type=\"button\"><span className=\"MuiButton-label\" onClick={this.cancelPay} >Cancel</span><span\r\n                      className=\"MuiTouchRipple-root\"></span></button>\r\n                  </div>         \r\n                  </div>   \r\n                </>\r\n              )\r\n          }else{\r\n              return(\r\n                  <>\r\n                  <div>\r\n                  <div style={{textAlign:'right'}}>\r\n                      <img alt=\"cancel\" style={{width:'1.875rem',cursor:'pointer'}} onClick={this.closeModal} src={cancel}/>\r\n                  </div> \r\n                    <div className='row' style={{marginBottom:'1.25rem',marginTop:'-1.6rem'}}>\r\n                      <div className='col-2' style={{borderRight:'2px solid black',textAlign:'end'}}>\r\n                      <img alt='paylog' style={{width:'2.5rem'}} src='https://static.wixstatic.com/media/ebff0f_1022b7d5a7974f889c0d33e0de62d5b3~mv2.png/v1/crop/x_0,y_0,w_87,h_101/fill/w_92,h_100,al_c,lg_1,q_85/Logo.webp'/>\r\n                      </div>\r\n                      <div className='col-8'>\r\n                      <p style={{fontSize:\"1.7rem\",fontWeight:'bold',marginBottom:'.25rem'}}>CUSTOMER PAYMENT CENTER</p>\r\n                      </div>\r\n                    </div>\r\n                      <div style={{height:'60vh',overflow:'auto'}}>\r\n                      <DataTable value={this.state.allInvoice} selection={this.state.selectedProducts} onSelectionChange={this.totalSelectedAmount}>\r\n                        <Column selectionMode=\"multiple\" headerStyle={{ width: '3rem' }}></Column>\r\n                        <Column field=\"invoice\" header=\"Invoice Number\"></Column>\r\n                        <Column field=\"amount\" header=\"Balance\"></Column>\r\n                      </DataTable>\r\n                      </div>\r\n                      { (this.state.selectedProducts===null  || this.state.selectedProducts.length === 0 ) ?\r\n                      <div style={{textAlign:'right'}}>\r\n                       <button type=\"submit\" style={{backgroundColor:\"#009ED6\",borderColor:\"#009ED6\"}}\r\n                         className=\"btn btn-primary\" disabled>Pay Now  ${this.state.selectedAmount}</button>  \r\n                      </div> :\r\n                      <div style={{textAlign:'right'}}>\r\n                      {/* <button type=\"submit\" style={{backgroundColor:\"#009ED6\",borderColor:\"#009ED6\"}}\r\n                        className=\"btn btn-primary\" onClick={this.pay}>Pay Now  ${this.state.selectedAmount}</button>  */} \r\n                        <a href={'https://payments.calgarylockandsafe.com/'} style={{backgroundColor:\"#009ED6\",borderColor:\"#009ED6\"}}\r\n                        className=\"btn btn-primary\" >Pay Now  ${this.state.selectedAmount}</a>\r\n                     </div>\r\n                        }\r\n                  </div>\r\n                  </>\r\n              )\r\n          }\r\n          }\r\n\r\n          renderAllInvoiceModal = () =>{\r\n            if(this.state.card){\r\n              return (\r\n                <>\r\n                <div style={{textAlign:'right'}}>\r\n                  <img alt=\"cancel\" style={{width:'1.875rem',cursor:'pointer'}} onClick={this.closeModal} src={cancel}/>\r\n                </div>\r\n                <Payment invoiceALLLocation={this.state.last_name} \r\n                         selectedAmount={this.state.selectedAllAmount}\r\n                         selectedProducts={this.state.selectedAllProducts}\r\n                          />\r\n                <div style={{textAlign:'center'}}>\r\n                <button \r\n                  className=\"btn btn-outline-danger\"\r\n                  type=\"button\"><span className=\"MuiButton-label\" onClick={this.cancelPay} >Cancel</span><span\r\n                      className=\"MuiTouchRipple-root\"></span></button>\r\n                  </div>         \r\n                          \r\n                </>\r\n              )\r\n          }else{\r\n              return(\r\n                  <>\r\n                  <div>\r\n                  <div style={{textAlign:'right'}}>\r\n                     <img alt=\"cancel\" style={{width:'1.875rem',cursor:'pointer'}} onClick={this.closeModal} src={cancel}/>\r\n                  </div>\r\n                    <div className='row' style={{marginBottom:'1.25rem',marginTop:'-1.6rem'}}>\r\n                      <div className='col-2' style={{borderRight:'2px solid black',textAlign:'end'}}>\r\n                      <img alt='paylog' style={{width:'2.5rem'}} src='https://static.wixstatic.com/media/ebff0f_1022b7d5a7974f889c0d33e0de62d5b3~mv2.png/v1/crop/x_0,y_0,w_87,h_101/fill/w_92,h_100,al_c,lg_1,q_85/Logo.webp'/>\r\n                      </div>\r\n                      <div className='col-8'>\r\n                      <p style={{fontSize:\"1.7rem\",fontWeight:'bold',marginBottom:'.25rem'}}>CUSTOMER PAYMENT CENTER</p>\r\n                      </div>\r\n                    </div>\r\n                    <div>\r\n                      <p style={{paddingLeft:'3.25rem'}}><span style={{fontWeight:500}}>Location : </span>  {this.state.last_name}</p>\r\n                    </div>\r\n                      <div style={{height:'60vh',overflow:'auto'}}>\r\n                      <DataTable value={this.state.allInvoice} selection={this.state.selectedAllProducts} onSelectionChange={this.totalAllSelectedAmount}>\r\n                        <Column selectionMode=\"multiple\" headerStyle={{ width: '3rem' }}></Column>\r\n                        <Column field=\"invoice\" header=\"Invoice Number\"></Column>\r\n                        <Column field=\"amount\" header=\"Balance\"></Column>\r\n                      </DataTable>\r\n                      </div>\r\n                      { (this.state.selectedAllProducts===null || this.state.selectedAllProducts.length === 0 ) ?\r\n                      <div style={{textAlign:'right'}}>\r\n                       <button type=\"submit\" style={{backgroundColor:\"#009ED6\",borderColor:\"#009ED6\"}}\r\n                         className=\"btn btn-primary\" disabled>Pay Now  ${this.state.selectedAllAmount}</button>  \r\n                      </div> :\r\n                      <div style={{textAlign:'right'}}>\r\n                      {/* <button type=\"submit\" style={{backgroundColor:\"#009ED6\",borderColor:\"#009ED6\"}}\r\n                        className=\"btn btn-primary\" onClick={this.pay}>Pay Now  ${this.state.selectedAllAmount}</button>   */}\r\n                        <a href={'https://payments.calgarylockandsafe.com/'} style={{backgroundColor:\"#009ED6\",borderColor:\"#009ED6\"}}\r\n                        className=\"btn btn-primary\" >Pay Now  ${this.state.selectedAllAmount}</a>\r\n                     </div>\r\n                        }\r\n                  </div>\r\n                  </>\r\n              )\r\n          }\r\n          }\r\n\r\n          invoiceQuery = (location:any,address:any,amount:any,loc_no:any) => {\r\n            this.setState({message:''})\r\n            this.setState({location:location, address:address, amount:amount, loc_no:loc_no, modalIsOpen:true});\r\n          }\r\n\r\n          invoiceModal = async(loc_no:any,invoiceLocation:any, invoiceAddress:any) => {\r\n            this.setState({loading:true});\r\n            try {\r\n              const api = `/api/customer/invoice/payment/${loc_no}/`;\r\n              let response = await axiosInstance.get(api, { headers: {\"Authorization\" : `Bearer ${localStorage.getItem('access_token')}`} });\r\n              \r\n              this.setState({allInvoice : response.data});\r\n              if(!(this.state.allInvoice === null))\r\n              {\r\n                  this.setState({loading : false});\r\n              }\r\n          }catch(error){\r\n              this.setState({loading : false});\r\n              throw error;\r\n          }\r\n            this.setState({ invoiceModalIsOpen:true, invoiceAddress:invoiceAddress, invoiceLocation:invoiceLocation, invoiceLoc_no:loc_no});\r\n            \r\n          }\r\n\r\n          closeModal = () =>{\r\n            this.setState({modalIsOpen:false,invoiceModalIsOpen:false,allInvoiceModalIsOpen:false,card:false,allInvoice:[],selectedProducts: null,selectedAmount:0,selectedAllProducts:null,selectedAllAmount:0});\r\n          }\r\n\r\n\r\n          noInvoice = () =>{\r\n              const node = this.mytoast.current;\r\n              if(node){\r\n                node.show({severity: 'error', detail: 'No Invoice Pending'});\r\n            }\r\n          }\r\n\r\n          invoiceModalPayAll = async() => {\r\n            this.setState({loading:true});\r\n            try {\r\n              const api = `/api/customer/invoice/all/payment/`;\r\n              let response = await axiosInstance.get(api, { headers: {\"Authorization\" : `Bearer ${localStorage.getItem('access_token')}`} });\r\n              this.setState({allInvoice : response.data});\r\n              if(!(this.state.allInvoice === null))\r\n              {\r\n                  this.setState({loading : false});\r\n              }\r\n          }catch(error){\r\n              this.setState({loading : false});\r\n              throw error;\r\n          }\r\n            this.setState({ allInvoiceModalIsOpen:true,});\r\n            \r\n          }\r\n        \r\n    render(){\r\n        return(\r\n            <>\r\n            <div>\r\n              {\r\n                this.state.loading ? <div className='overlay-box1'>\r\n                <FadeLoader css={override} color={\"rgb(0, 158, 214)\"} loading={this.state.loading}  height={30} width={5} radius={2} margin={20} />\r\n             </div > :''\r\n              }\r\n            <Modal style={this.customStyles} isOpen={this.state.modalIsOpen} onRequestClose={this.closeModal}>{this.renderModal()}</Modal>\r\n            <Modal style={this.invoiceStyles} isOpen={this.state.invoiceModalIsOpen} onRequestClose={this.closeModal}>{this.renderInvoiceModal()}</Modal>\r\n            <Modal style={this.invoiceStyles} isOpen={this.state.allInvoiceModalIsOpen} onRequestClose={this.closeModal}>{this.renderAllInvoiceModal()}</Modal>\r\n            <Toast ref={this.mytoast} />\r\n                <div className=\"upper\">\r\n                    <div className=\"row\" >\r\n                        <div className=\"col-4 d-flex align-items-center\" >\r\n                            <p className=\"m-2\"><span className='heading'>{this.state.last_name}</span> \r\n                            <br></br><span className='heading'>{this.state.cus_no}</span></p>\r\n                        </div>\r\n                        <div className=\"col-8\">\r\n                            <div className=\"row \"  style={{marginLeft:\"-45px\"}}>\r\n                              <div className=\"col-md-12 flex-container\">\r\n                                  <div className=\"flex-item \">\r\n                                    <div className=\"flex-item-inner\">\r\n                                              <div className=\"card-front p-2 m-2 bg-violet\">\r\n                                                  <h6>Account Balance</h6>\r\n                                                  <p className=\"detail\">${this.state.total_amount}</p>\r\n                                              </div>\r\n                                            \r\n                                      </div>\r\n                                  </div>\r\n                                  <div className=\"flex-item \">\r\n                                    <div className=\"flex-item-inner\">\r\n                                              <div className=\"card-front p-2 m-2 bg-magenta\">\r\n                                                  <h6>30 Days</h6>\r\n                                                  <p className=\"detail\">${this.state.over_30}</p>\r\n                                              </div>\r\n                                            \r\n                                      </div>\r\n                                  </div>\r\n                                  <div className=\"flex-item \">\r\n                                    <div className=\"flex-item-inner\">\r\n                                              <div className=\"card-front p-2 m-2 bg-blue\">\r\n                                                  <h6>60 Days</h6>\r\n                                                  <p className=\"detail\">${this.state.over_60}</p>\r\n                                              </div>\r\n                                            \r\n                                      </div>\r\n                                  </div>\r\n                                  <div className=\"flex-item \">\r\n                                    <div className=\"flex-item-inner\">\r\n                                              <div className=\"card-front p-2 m-2 bg-green\">\r\n                                                  <h6>90 Days</h6>\r\n                                                  <p className=\"detail\">${this.state.over_90}</p>\r\n                                              </div>\r\n                                      </div>\r\n                                  </div>\r\n                                  \r\n                                  <button className=\"btn btn-info\" onClick={this.invoiceModalPayAll}>\r\n                                      Pay All\r\n                                  </button>\r\n                              </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                  \r\n                </div>\r\n                <div className=\"row\">\r\n                    \r\n                    <div>\r\n                            <p className=\"card-title\">Terms</p>\r\n                            <p>{this.state.terms}</p>\r\n                    </div>\r\n                  </div>\r\n                <div className=\"content\">\r\n                <div className=\"accordian\"> \r\n                    <div className=\"col-12\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-6\">\r\n                                <p style={{color:\"#fff\",textAlign:\"left\",marginTop:\"10px\"}}>Invoices</p>\r\n                            </div>\r\n                            <div className='col-6'>\r\n                                <a href={`${baseURL}/api/customer/pdf/all/invoice/${this.state.cus_no}/`}><img data-toggle=\"tooltip\" data-placement=\"top\" title=\"all invoices\" alt=\"pdf1\" style={{cursor:\"pointer\",backgroundColor:'white',float:\"right\",width:'2rem',marginTop:'.25rem'}} src={image}/></a>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"p-datatable p-component\" data-scrollselectors=\".p-datatable-scrollable-body, .p-datatable-unfrozen-view .p-datatable-scrollable-body\">\r\n                <div className=\"p-datatable-wrapper\">\r\n                  <table role=\"grid\">\r\n                    <thead className=\"p-datatable-thead\" >\r\n                        <tr >\r\n                        <th style={{fontWeight:500}} scope=\"col\" colSpan={2} >Location Name</th>\r\n                        <th style={{fontWeight:500}} scope=\"col\" colSpan={2}>Address</th>\r\n                        <th style={{fontWeight:500}} scope=\"col\">Open Invoice</th>\r\n                        <th style={{fontWeight:500,textAlign:\"right\"}} scope=\"col\">Actions</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody className=\"p-datatable-tbody\">\r\n                       {this.state.tableData.map((item: any,i: any)=>{\r\n                         return(\r\n                             <>\r\n                        <tr key={i} >\r\n                        <td colSpan={2}>{item.location}</td>\r\n                        <td colSpan={2}>{item.address}</td>\r\n                         <td>$ {item.amount}</td>\r\n                        <td style={{textAlign:\"right\"}}>\r\n                           <img data-toggle=\"tooltip\" data-placement=\"top\" title=\"view invoices\" alt=\"eye\" className=\" ml-1 icon\"  onClick={(item.amount===0 || item.amount==='0.00')? this.noInvoice  : ()=>this.details(item.loc_no,i)} src={viewa} />\r\n                           <img data-toggle=\"tooltip\" data-placement=\"top\" title=\"pay invoices\" alt=\"dollar\" className=\" ml-1 icon\"  src={dollar} onClick={(item.amount===0 || item.amount==='0.00')? this.noInvoice  : ()=>this.invoiceModal(item.loc_no,item.location,item.address)}/>\r\n                           <img data-toggle=\"tooltip\" data-placement=\"top\" title=\"Help\" alt=\"question\" className=\" ml-1 icon\"  onClick={()=>this.invoiceQuery(item.location ,item.address,item.amount,item.loc_no)} src={question}/>\r\n                           <img data-toggle=\"tooltip\" data-placement=\"top\" title=\"Invoices details\" className=\" ml-1 icon\" alt=\"pdf1\" onClick={() => this.exportPDFsingleinvoices(item.location ,item.address,item.loc_no)} src={image}/>\r\n                        </td>\r\n                        </tr>                                                                                                                                 \r\n                        {this.renderEditForm(item.showDetails,i)}\r\n                        </>\r\n                         )})}\r\n                            \r\n                    </tbody>\r\n                </table>\r\n                </div>\r\n                </div>\r\n\r\n                <Paginator \r\n                  template=\"RowsPerPageDropdown CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink \"\r\n                  first={this.state.offset} rows={this.state.perPage} totalRecords={this.state.totalRecords} rowsPerPageOptions={[10,20,30]} \r\n                            onPageChange={this.onPageChange}\r\n                  ></Paginator>\r\n                </div>\r\n            </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Accounting;","C:\\Data\\django\\customer_portal\\frontend\\src\\component\\sidebar\\ServiceRequest.tsx",[],"C:\\Data\\django\\customer_portal\\frontend\\src\\component\\sidebar\\Quotations.tsx",["204","205"],"\r\nimport React from 'react';\r\nimport axiosInstance from '../../api/api';\r\nimport viewq from '../icons/viewq.svg';\r\nimport Select from \"react-select\";\r\nimport FadeLoader from \"react-spinners/FadeLoader\";\r\nimport { css } from \"@emotion/core\";\r\nimport Modal from 'react-modal';\r\nimport logopay from '../icons/logopay.png';\r\nimport QuotationDetails from './QuotationDetails';\r\nimport { Paginator } from 'primereact/paginator';\r\nimport { Toast } from 'primereact/toast';\r\n\r\nconst override = css`\r\n  margin: 0 auto;\r\n  border-color: red;\r\n  background-color: transparent;\r\n  top:40%;\r\n  margin-left:-16%;\r\n`;\r\ninterface Props{\r\n    data:any;\r\n    isSelected:any;\r\n    last_name:any;\r\n    cus_no:any;\r\n    loading : boolean;\r\n    loc_no : any;\r\n    offset: any;\r\n    perPage: any;\r\n    totalRecords: any;\r\n    pageCount:any;\r\n    tableData :any;\r\n  }\r\n\r\nclass Quotations extends React.Component<{},Props> {\r\n  toast: React.RefObject<any>;\r\n\r\n    constructor(props:Props){\r\n        super(props);\r\n        this.toast = React.createRef();\r\n        this.state={\r\n          data: [],\r\n          isSelected:\"\",\r\n          last_name:\"\",\r\n          cus_no:\"\",\r\n          loading : false,\r\n          loc_no : '',\r\n          offset: 0,\r\n          perPage: 10,\r\n          totalRecords: 0,\r\n          pageCount:0,\r\n          tableData : [],\r\n        }}\r\n\r\n        colourStyles ={\r\n            option: (provided:any) => ({\r\n              ...provided,\r\n              backgroundColor: this.state.isSelected ? 'white' : 'white',\r\n              color: this.state.isSelected ? 'black' : 'black',\r\n              \"&:hover\": {\r\n                backgroundColor: \"#ccc\",\r\n                cursor: 'pointer',\r\n              }\r\n            }),\r\n            control: (styles:any) => ({\r\n              ...styles,\r\n              cursor: 'pointer',\r\n              \r\n            }),\r\n            \r\n          }\r\n\r\n          customStyles = {\r\n            content : {\r\n              top                   : '50%',\r\n              left                  : '50%',\r\n              right                 : 'auto',\r\n              bottom                : 'auto',\r\n              marginRight           : '-20%',\r\n              transform             : 'translate(-50%, -50%)',\r\n              width                 : '46.875rem',\r\n              height                : '37.5rem'\r\n            }\r\n          };\r\n\r\n       \r\n        options = [\r\n            { value: 'pending', label: 'Open' },\r\n            { value: 'accepted', label: 'Accepted' },\r\n            { value: 'rejected', label: 'Rejected' },\r\n          ];\r\n\r\n          handleChange = (e:any) => {\r\n            //debugger\r\n            this.setState({isSelected: e.value});\r\n            this.fetchedData(e.value);\r\n          }\r\n\r\n        fetchedData= async(value:any)=>{\r\n            try {\r\n                this.setState({loading : true});\r\n                const token = localStorage.getItem('access_token');\r\n                const api = `/api/customer/quotations/${value}/`;\r\n                let response = await axiosInstance.get(api, { headers: {\"Authorization\" : `Bearer ${token}`} });\r\n                \r\n                this.setState({data:response.data.data.map((obj:any)=>{\r\n                    return({...obj, showDetails: false\r\n                    })\r\n                  }), last_name:response.data.last_name, cus_no:response.data.cus_no});\r\n                  \r\n                  let slice = response.data.data.slice(this.state.offset, this.state.offset + this.state.perPage);\r\n                    this.setState({pageCount: Math.ceil(response.data.data.length / this.state.perPage), totalRecords: response.data.data.length});\r\n                    this.setState({tableData:slice.map((obj:any)=>{\r\n                        return({...obj, showDetails: false\r\n                        })\r\n                      })});\r\n\r\n                if(!(this.state.data.length === 0))\r\n                {\r\n                    this.setState({loading : false});\r\n                }else {\r\n                  this.setState({loading : false});\r\n                  this.toast.current.show({severity: 'error',  detail: 'No record found'});\r\n\r\n                }\r\n                \r\n            }catch(error){\r\n                this.setState({loading : false});\r\n                throw error;\r\n            }\r\n\r\n        }\r\n\r\n        details=(loc_no:any,id:any)=> {\r\n            const updatedData = this.state.tableData.map((obj:any,i:number)=>{\r\n              if(i===id){\r\n                if(obj.showDetails=== false){\r\n                  this.setState({loading:true});\r\n                }\r\n              }\r\n                if(i===id){\r\n                  obj.showDetails = true;\r\n                }else{\r\n                  obj.showDetails = false;\r\n                }\r\n                return {...obj}\r\n                });\r\n              this.setState({tableData :updatedData});\r\n            this.setState({loc_no:loc_no});\r\n           };\r\n\r\n           cancel(id:any) {\r\n            const updatedData = this.state.tableData.map((obj:any,i:number)=>{\r\n                if(i===id){\r\n                  obj.showDetails = false;\r\n                }\r\n                return {...obj}\r\n            })\r\n            this.setState({tableData: updatedData});\r\n           }\r\n\r\n           load = () =>{\r\n            this.setState({loading:false});\r\n          }\r\n          loadt = () =>{\r\n            this.setState({loading:true});\r\n          }\r\n\r\n           renderEditForm=(show:any,id:any)=>{\r\n            if(show){\r\n              return(\r\n                <>\r\n                <tr style={{height:\"0px\"}}>\r\n                    <td colSpan={5}>\r\n                        <div className=\"accordian\"> \r\n                          <div className=\"col-12\">\r\n                              <div className=\"row\">\r\n                                  <div className=\"col-6\">\r\n                                      <p style={{color:\"#fff\",textAlign:\"left\",marginTop:\"10px\"}}>Quotes Details</p>\r\n                                  </div>\r\n                                  <div className=\"col-6\">\r\n                                    <span className=\"detail-created\" onClick={()=>this.cancel(id)} >Close</span>\r\n                                </div>\r\n                              </div>\r\n                          </div>\r\n                        </div>\r\n                        <QuotationDetails load={this.load} loadt={this.loadt} locationNo={this.state.loc_no} />\r\n                     </td>\r\n                </tr>\r\n               </>\r\n              )\r\n            }\r\n          } \r\n\r\n        componentDidMount = async ()=>{\r\n           this.fetchedData(\"pending\");\r\n        }\r\n\r\n        onPageChange = (event:any) => {\r\n        let offset = event.first;\r\n        let perPage = event.rows;\r\n        this.setState({offset:offset, perPage:perPage})\r\n        let slice = this.state.data.slice(offset, offset + perPage);\r\n        this.setState({tableData:slice.map((obj:any)=>{\r\n          return({...obj, showDetails: false\r\n          })\r\n        })});\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n            <div>\r\n            <Toast ref={this.toast} />\r\n            {\r\n              this.state.loading ? <div className='overlay-box1'>\r\n              <FadeLoader css={override} color={\"rgb(0, 158, 214)\"} loading={this.state.loading}  height={30} width={5} radius={2} margin={20} />\r\n          </div> : ''\r\n            }\r\n                <div className=\"upper\">\r\n                    <div className=\"row\">\r\n                        <div className=\"col-6\">\r\n                            <p style={{padding:\"1.25rem\"}}><span className='heading'>{this.state.last_name}</span> \r\n                            <br></br><span className='heading'>{this.state.cus_no}</span></p>\r\n                        </div>\r\n                        <div style={{marginLeft:\"12.5rem\",marginTop:\"1.25rem\"}} className=\"col-3\">\r\n                            <label  htmlFor=\"inputState\">Filter By:</label>\r\n                            <Select\r\n                                values={this.state.isSelected}\r\n                                onChange={this.handleChange}\r\n                                className=\"dropdown\"\r\n                                options={this.options}\r\n                                placeholder=\"Open Quotes\"\r\n                                styles={this.colourStyles}\r\n                                isSearchable\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"content\" >\r\n                <div className=\"accordian\"> \r\n                    <div className=\"col-12\">\r\n                        <div className=\"row\">\r\n                            <div className=\"col-6\">\r\n                                <p style={{color:\"#fff\",textAlign:\"left\",marginTop:\"0.625rem\"}}>Quotations</p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <table  className=\"table table-striped\">\r\n                    <thead>\r\n                        <tr >\r\n                        <th style={{fontWeight:500}} scope=\"col\">Location Name</th>\r\n                        <th style={{fontWeight:500}} scope=\"col\">Address</th>\r\n                        <th style={{fontWeight:500,textAlign:\"center\"}} scope=\"col\">Open Quotes</th>\r\n                        <th style={{fontWeight:500,textAlign:\"right\"}} scope=\"col\">Actions</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.state.tableData.map((item: any,i: any)=>{\r\n                         return(\r\n                             <>\r\n                        <tr key={i}>\r\n                        <td>{item.location}</td>\r\n                        <td>{item.address}</td>\r\n                        <td style={{textAlign:\"center\"}} >{item.quotes}</td>\r\n                        <td style={{textAlign:\"right\"}}>\r\n                          <img data-toggle=\"tooltip\" data-placement=\"top\" title=\"View Quotes\" alt=\"eye\" style={{cursor:\"pointer\",width:'1.8rem'}} src={viewq} onClick={()=>this.details(item.loc_no,i)}/>\r\n                        </td>\r\n                        </tr>\r\n                        {this.renderEditForm(item.showDetails,i)}\r\n                        </>\r\n                         )})}\r\n                         <tr>\r\n                            <td colSpan={4}>\r\n                            <Paginator first={this.state.offset} rows={this.state.perPage} totalRecords={this.state.totalRecords} rowsPerPageOptions={[10,20,30]} \r\n                            template=\"RowsPerPageDropdown CurrentPageReport FirstPageLink PrevPageLink PageLinks NextPageLink LastPageLink \"\r\n                            onPageChange={this.onPageChange}></Paginator>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                </div>\r\n            </div>\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Quotations;","C:\\Data\\django\\customer_portal\\frontend\\src\\component\\sidebar\\ViewKeysGroupDetails.tsx",["206","207","208","209"],"import React from 'react';\r\nimport brokenkey from '../icons/BrokenKey.svg';\r\nimport questionmark from '../icons/questionmark.svg';\r\nimport deleteIcon from '../icons/delete.png';\r\nimport 'jspdf-autotable';\r\nimport tick from '../icons/tick.svg';\r\nimport cross from '../icons/cross.svg';\r\nimport axiosInstance from '../../api/api';\r\nimport FadeLoader from \"react-spinners/FadeLoader\";\r\nimport { css } from \"@emotion/core\";\r\nimport { Toast } from 'primereact/toast';\r\nimport { Calendar } from 'primereact/calendar';\r\n\r\nconst override = css`\r\n  margin: 0 auto;\r\n  border-color: red;\r\n  background-color: transparent;\r\n  top:40%;\r\n  margin-left:-16%;\r\n`;\r\ninterface Props{\r\n  edit:boolean;\r\n  data:any;\r\n  [key :string]:any;\r\n  loading : boolean;\r\n}\r\n\r\n\r\nclass ViewKeysGroupDetails extends React.Component<{viewdata:any,load:any,loadc:any},Props> {\r\n  toast: React.RefObject<any>;\r\n\r\n  constructor(props:any){\r\n    super(props);\r\n    this.toast = React.createRef();\r\n    this.state={\r\n      edit:false,\r\n      data:[],\r\n      tenant_location:\"\",\r\n      key_holder:'',\r\n      phone:'',\r\n      email:'',\r\n      date_issued:'',\r\n      lost_key:'',\r\n      broken_key:'',\r\n      loading:false\r\n    }\r\n  }\r\n\r\n\r\n  componentDidMount=()=>{\r\n    this.props.load();\r\n    this.setState({data : this.props.viewdata.map((obj:any)=>{\r\n      return({...obj, editData: false\r\n      })\r\n    })});\r\n  };\r\n  removeItem = async (item: any) =>{\r\n    const api = `/api/kdfinder/keysgroups/remove_item`;\r\n      let response = await axiosInstance.post(api , {id: item.id},{headers: {'Content-Type': 'application/json'} } );\r\n      if(response.data.success){\r\n        var index = this.state.data.indexOf(item);\r\n        if (index > -1) {\r\n            this.state.data.splice(index, 1)\r\n            this.setState({data: this.state.data});\r\n        }\r\n      }  \r\n  }\r\n\r\n    handleInputChange  = () => {\r\n\r\n    }\r\n    render() {\r\n      return (\r\n          <>\r\n           <Toast ref={this.toast} />\r\n          {\r\n            this.state.loading ? <div className='overlay-box1'>\r\n            <FadeLoader css={override} color={\"rgb(0, 158, 214)\"} loading={this.state.loading}  height={30} width={5} radius={2} margin={20} />\r\n        </div> :''\r\n          }\r\n            <div>\r\n          <table className=\"table\" style={{border :'2px solid #12739A'}} >\r\n            <thead >\r\n              <tr>\r\n                <th style={{fontWeight:500,margin:0,width:\"6.65rem\"}} scope=\"col\">Key ID Stamp</th>\r\n                <th style={{fontWeight:500,margin:0,width:\"6.65rem\"}} scope=\"col\">Tenant</th>\r\n                <th style={{fontWeight:500,margin:0,width:\"6.65rem\"}} scope=\"col\">First/Last Name</th>\r\n                <th style={{fontWeight:500,margin:0,width:\"6.65rem\"}} scope=\"col\">Phone </th>\r\n                <th style={{fontWeight:500,margin:0,width:\"6.65rem\"}} scope=\"col\">Email ID </th>\r\n                <th style={{fontWeight:500,margin:0,width:\"6.65rem\"}} scope=\"col\">Issue Date</th>\r\n                <th style={{fontWeight:500,textAlign:'center',margin:0,width:\"6.65rem\"}} scope=\"col\">Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody >\r\n            {this.state.data.map((item: any,i: any)=>{\r\n             return(\r\n              <tr key={i}>\r\n                <th style={{margin:0,width:\"6.65rem\"}} scope=\"row\">{item.key_id +\" - \"+ item.sequence}</th>\r\n                <td style={{margin:0,width:\"7.65rem\"}}>{item.editData ? <input style={{height:'2rem',width:\"7.65rem\",padding:'.5rem',margin:0}} type=\"text\" className=\"form-control\" name=\"tenant_location\" value={this.state.tenant_location} onChange={this.handleInputChange}  /> : item.tenant_location}</td>\r\n                <td style={{margin:0,width:\"7.65rem\"}}>{item.editData ? <input style={{height:'2rem',width:\"7.65rem\",padding:'.5rem',margin:0}} type=\"text\" className=\"form-control\" name=\"key_holder\" value={this.state.key_holder} onChange={this.handleInputChange}   /> : item.key_holder}</td>\r\n                <td style={{margin:0,width:\"7.65rem\"}}>{item.editData ? <input style={{height:'2rem',width:\"7.65rem\",padding:'.5rem',margin:0}} type=\"text\" className=\"form-control\" name=\"phone\" value={this.state.phone} onChange={this.handleInputChange}   /> : item.phone}</td>\r\n                <td style={{margin:0,width:\"7.65rem\"}}>{item.editData ? <input style={{height:'2rem',width:\"7.65rem\",padding:'.5rem',margin:0}} type=\"text\" className=\"form-control\" name=\"email\" value={this.state.email} onChange={this.handleInputChange}  /> : item.email}</td>\r\n                <td style={{margin:0,width:\"7.65rem\"}}>{item.editData ? <Calendar style={{height:'2rem',width:\"7.65rem\",padding:0,margin:0}} id=\"date_issued\" placeholder=\"YYYY-MM-DD\" value={this.state.date_issued} onChange={(e:any) => this.setState({date_issued:e.value.toLocaleDateString(\"fr-CA\")})}/> : item.date_issued}</td>\r\n                <td style={{margin:0,textAlign:\"center\",width:'6rem'}}>\r\n                   <img alt=\"viewkeys\" style={{marginLeft:\"0.7rem\",width:'0.8rem'}} src={deleteIcon} onClick={() => this.removeItem(item)}/>\r\n                </td>\r\n              </tr>\r\n              )})}\r\n            </tbody>\r\n          </table>\r\n          </div>\r\n          </>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default ViewKeysGroupDetails;  ","C:\\Data\\django\\customer_portal\\frontend\\src\\component\\sidebar\\KeyRequest.tsx",[],"C:\\Data\\django\\customer_portal\\frontend\\src\\component\\sidebar\\AccountingDetails.tsx",["210","211"],"import React from 'react';\r\nimport viewa from '../icons/viewa.svg';\r\nimport axiosInstance, {baseURL} from '../../api/api';\r\nimport Modal from 'react-modal';\r\nimport logopay from '../icons/logopay.png';\r\nimport FadeLoader from \"react-spinners/FadeLoader\";\r\nimport { css } from \"@emotion/core\";\r\nimport Payment from './Payement/Payment';\r\nimport './Payement/Payment.css';\r\nimport cancel from '../icons/cancel.svg';\r\nimport image from '../icons/pdf-1.svg';\r\nimport * as _html2canvas from \"html2canvas\";\r\n\r\nconst override = css`\r\n  margin: 0 auto;\r\n  border-color: red;\r\n  background-color: transparent;\r\n  top:35%;\r\n  margin-left: 40rem;\r\n`;\r\ninterface Props {\r\n  invoiceData:any;\r\n  modalIsOpen:any;\r\n  loading : boolean;\r\n  invoicePop : any;\r\n  invoiceTable : any;\r\n  card: boolean;\r\n  invoiceNumber:Number;\r\n  invoiceAmount:Number;\r\n}\r\n\r\nclass AccountingDetails extends React.Component<{locationNo:any,cus_no:any,load:any,loadt:any},Props> {\r\n  constructor(props:any){\r\n    super(props);\r\n    this.state ={\r\n      invoiceData:[],\r\n      modalIsOpen : false,\r\n      loading : false,\r\n      invoicePop : [], \r\n      invoiceTable : [],\r\n      card: false,\r\n      invoiceNumber:0,\r\n      invoiceAmount:0,\r\n\r\n    }\r\n  }\r\n  customStyles = {\r\n    content : {\r\n      top                   : '50%',\r\n      left                  : '50%',\r\n      right                 : 'auto',\r\n      bottom                : 'auto',\r\n      marginRight           : '-20%',\r\n      transform             : 'translate(-50%, -50%)',\r\n      width                 : '46.875rem',\r\n      height                : '37.5rem'\r\n    }\r\n  };\r\n\r\n  exportPDFsingleinvoices = async() => {\r\n\r\n    try {\r\n      const api = `/api/customer/pdf/invoice/${this.state.invoicePop.cus_no}/${this.props.locationNo}/${this.state.invoicePop.invoice}/`;\r\n      this.setState({loading:true});\r\n      let response = await axiosInstance.get(api, { headers: {\"Authorization\" : `Bearer ${localStorage.getItem('access_token')}`} });\r\n\r\n  }catch(error){\r\n      throw error;\r\n  } \r\n    /* const unit = \"pt\";\r\n    const size = \"A4\"; // Use A1, A2, A3 or A4\r\n    const orientation = \"portrait\"; // portrait or landscape\r\n    const marginLeft = 40;\r\n    const doc1 :any = document.getElementById(\"invoice\");\r\n    const html2canvas: any = _html2canvas;\r\n     html2canvas(doc1).then((canvas:any)=>{\r\n            const imgData = canvas.toDataURL('image/png');\r\n            const pdf = new jsPDF(orientation, unit, size);\r\n            var width = pdf.internal.pageSize.getWidth();\r\n            var height = pdf.internal.pageSize.getHeight();\r\n            pdf.addImage(imgData, 'text', 30, 20, 500, 780);\r\n            pdf.save(\"invoice.pdf\");\r\n     }) */\r\n     \r\n  };\r\n\r\n  fetchedData = async() => {\r\n   // this.setState({loading : true});\r\n   try {\r\n     const api = `/api/customer/accounting/invoice/list/${this.props.locationNo}/`;\r\n     let response = await axiosInstance.get(api, { headers: {\"Authorization\" : `Bearer ${localStorage.getItem('access_token')}`} });\r\n     this.setState({invoiceData:response.data});\r\n     if(!(this.state.invoiceData === null))\r\n     {\r\n         this.setState({loading : false});\r\n         this.props.load();\r\n     }\r\n }catch(error){\r\n     this.setState({loading : false});\r\n     throw error;\r\n }\r\n  }\r\n\r\n  invoice = async(invoice_no:any) => {\r\n    //this.setState({loading : true});\r\n    this.props.loadt();\r\n    try {\r\n      const api = `/api/customer/accounting/invoice/${this.props.locationNo}/${invoice_no}/`;\r\n      let response = await axiosInstance.get(api, { headers: {\"Authorization\" : `Bearer ${localStorage.getItem('access_token')}`} });\r\n      this.setState({invoicePop:response.data,invoiceNumber:response.data.invoice, invoiceAmount:response.data.total});\r\n      this.setState({invoiceTable : response.data.data});\r\n      if(!(this.state.invoiceData === null))\r\n      {\r\n          this.setState({loading : false});\r\n          this.props.load();\r\n      }\r\n  }catch(error){\r\n      this.setState({loading : false});\r\n      this.props.load();\r\n      throw error;\r\n  }\r\n    this.setState({card:false});\r\n    this.setState({modalIsOpen:true});\r\n  }\r\n\r\n  pay = () =>{\r\n    this.setState({card:true});\r\n  }\r\n\r\n  cancelPay = () =>{\r\n    this.setState({card:false});\r\n  }\r\n\r\n\r\n  renderModal = () =>{ \r\n    if(this.state.card){\r\n        return (\r\n          <>\r\n           <div style={{textAlign:'right'}}>\r\n                  <img alt=\"cancel\" style={{width:'1.875rem',cursor:'pointer'}} onClick={this.closeModal} src={cancel}/>\r\n          </div>\r\n          <Payment invoice={this.state.invoiceNumber} amount={this.state.invoiceAmount} />\r\n          <div style={{textAlign:'center'}}>\r\n          <button \r\n            className=\"btn btn-outline-danger\"\r\n            type=\"button\"><span className=\"MuiButton-label\" onClick={this.cancelPay} >Cancel</span><span\r\n                className=\"MuiTouchRipple-root\"></span></button>\r\n            </div>    \r\n          </>\r\n        )\r\n    }else{\r\n      const invoice_date  = this.state.invoicePop.invoice_date? new Date(this.state.invoicePop.invoice_date).toLocaleDateString(): '';\r\n    return(\r\n      <>\r\n      <div className=\"row \">\r\n             <div className='col' style={{textAlign:'end'}}>\r\n              <a href={`${baseURL}/api/customer/pdf/invoice/${this.props.cus_no}/${this.props.locationNo}/${this.state.invoiceNumber}/`} ><img alt=\"pdf1\" style={{marginRight:'1rem',cursor:\"pointer\",width:'1.563rem',height:'1.563rem'}} src={image}/></a>\r\n               <img alt=\"cancel\" style={{width:'1.875rem',cursor:'pointer'}} onClick={this.closeModal} src={cancel}/>\r\n             </div>\r\n             \r\n          </div>\r\n        <div id='invoice'>\r\n          <div className='row'>\r\n            <div className='col-6'>\r\n              <p style={{textAlign:\"left\"}}>\r\n              <span style={{fontSize:\"1.25rem\",fontWeight:500,color:\"#5C5C5C\"}}>Billed To:</span><br></br>\r\n              <span style={{fontSize:\"1.25rem\",fontWeight:500}}>{this.state.invoicePop.name}</span><br></br>\r\n              <p style={{fontSize:\"1.063rem\",fontWeight:500,color:\"#5C5C5C\",width:\"12.625rem\",height:\"3.375rem\"}}>{this.state.invoicePop.address}</p>\r\n              <span style={{fontSize:\"1.25rem\",fontWeight:500}}>Customer# : {this.state.invoicePop.cus_no}</span><br></br>\r\n              </p>\r\n            </div>\r\n            <div className='col-6'>\r\n              <p style={{textAlign:\"right\"}}>\r\n              <span style={{fontSize:\"1.875rem\",fontWeight:500}}>Invoice</span><br></br>\r\n             <span style={{fontSize:\"1.25rem\",fontWeight:500}}> #{this.state.invoicePop.invoice}</span><br></br>\r\n              <span style={{fontSize:\"1rem\",fontWeight:500}}>{invoice_date}</span>\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <table className=\"table\" style={{backgroundColor:\"#fff\"}}>\r\n            <thead style={{ color: \"#fff\",backgroundColor:\"#0D93C9\" }}>\r\n              <tr>\r\n                <th data-visible=\"true\" >Description</th>\r\n                <th>QTY</th>\r\n                <th>Each</th>\r\n                <th style={{textAlign:\"right\"}}>Amount</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n            {this.state.invoiceTable.map((item: any,i: any)=>{\r\n                return(\r\n              <tr >\r\n                <td >{item.desc}</td>\r\n                <td>{item.quantity}</td>\r\n                <td>$ {item.price}</td>\r\n                <td style={{textAlign:\"right\"}}>$ {item.amount}</td>\r\n              </tr>\r\n                  )})}\r\n            </tbody>\r\n            <tr>\r\n              <td colSpan={4}>\r\n                <div className='row'>\r\n                  <div className='col-6'>\r\n                    <p style={{cursor:\"pointer\",color:\"#009ED6\"}}>Term and Conditions</p>\r\n                  </div>\r\n                  <div className='col-6'>\r\n                    <p style={{textAlign:\"right\"}}>Sub Total : ${this.state.invoicePop.sub_total}<br></br>\r\n                    GST(2235785) : ${this.state.invoicePop.GST}<br></br>\r\n                    Total : ${this.state.invoicePop.total}<br></br>\r\n                     <span style={{fontWeight:500}}>Amount owning : ${this.state.invoicePop.total}</span>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n            </table>\r\n        </div>\r\n        <div className='row'>\r\n              <div className='col-6'>\r\n                <img style={{width:'63%'}} alt=\"viewkeys\" src={logopay}/><br></br>\r\n                www.calgarylockandsafe.com\r\n              </div>\r\n              <div className='col-6'>\r\n              {/* <button style={{width:\"8.688rem\",height:\"2.813rem\",backgroundColor:\"#009ED6\",float:'right'}} className=\"btn btn-primary\" type=\"submit\" onClick={this.pay}>Pay Invoice</button> */}\r\n              <a href={'https://payments.calgarylockandsafe.com/'} style={{backgroundColor:\"#009ED6\",borderColor:\"#009ED6\",width:\"8.688rem\",height:\"2.813rem\",float:'right'}}\r\n                        className=\"btn btn-primary\" >Pay Invoices</a>\r\n              </div>\r\n            </div>\r\n        </>\r\n    )\r\n                }\r\n  }\r\n\r\n  closeModal = () =>{\r\n    this.setState({modalIsOpen:false});\r\n    this.setState({card:false});\r\n  }\r\n\r\n componentDidMount= async()=>{\r\n   this.fetchedData();\r\n }\r\n\r\n    render() {\r\n      return (\r\n          <>\r\n          <div>\r\n          {\r\n            this.state.loading ? <div className='overlay-box2'>\r\n            <FadeLoader css={override} color={\"rgb(0, 158, 214)\"} loading={this.state.loading}  height={30} width={5} radius={2} margin={20} />\r\n        </div>:''\r\n          }\r\n         \r\n          <div>\r\n          <Modal style={this.customStyles} isOpen={this.state.modalIsOpen} onRequestClose={this.closeModal}>{this.renderModal()}</Modal>\r\n          <table className=\"table table-bordered\" >\r\n            <thead>\r\n              <tr>\r\n                <th style={{fontWeight:500}} scope=\"col\">Invoice Number</th>\r\n                <th style={{fontWeight:500}} scope=\"col\">Invoice Date</th>\r\n                <th style={{fontWeight:500}} scope=\"col\">Do Date</th>\r\n                <th style={{fontWeight:500}} scope=\"col\">Invoice Amount</th>\r\n                <th style={{fontWeight:500}} scope=\"col\">Paid Amount</th>\r\n                <th style={{fontWeight:500}} scope=\"col\">Balance</th>\r\n                <th style={{fontWeight:500,textAlign:\"right\"}} scope=\"col\">Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n            {this.state.invoiceData.map((item: any,i: any)=>{\r\n              let date = new Date(item.invoice_date).toLocaleDateString(\"fr-CA\");\r\n              let do_date = new Date(item.do_date).toLocaleDateString(\"fr-CA\");\r\n                return(\r\n              <tr key={i}>\r\n                <td>{item.invoice}</td>\r\n                <td>{date}</td>\r\n                <td>{do_date}</td>\r\n                <td>$ {item.sub_total}</td>\r\n                <td>$ {item.tax}</td>\r\n                <td>$ {item.total}</td>\r\n                <td style={{textAlign:\"right\"}}>\r\n                    <img data-toggle=\"tooltip\" data-placement=\"top\" title=\"view invoice\" alt=\"eye\" className=\"ml-1 icon\" onClick={()=>this.invoice(item.invoice)} src={viewa}/>\r\n                    {<a data-toggle=\"tooltip\" data-placement=\"top\" title=\"invoice\" href={`${baseURL}/api/customer/pdf/invoice/${this.props.cus_no}/${this.props.locationNo}/${item.invoice}/`} ><img alt=\"pdf1\" className=\"ml-1 icon\" src={image}/></a>}\r\n                </td>\r\n              </tr>\r\n              )})}\r\n            </tbody>\r\n          </table>\r\n          </div>\r\n          </div>\r\n          </>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default AccountingDetails;  ","C:\\Data\\django\\customer_portal\\frontend\\src\\component\\sidebar\\Payement\\Payment.tsx",["212","213"],"import React, { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport './Payment.css';\r\nimport axiosInstance, {baseURL} from '../../../api/api';\r\nimport axios from 'axios';\r\nimport FadeLoader from \"react-spinners/FadeLoader\";\r\nimport { css } from \"@emotion/core\";\r\nimport { Toast } from 'primereact/toast';\r\nimport { useRef } from 'react';\r\n\r\nconst override = css`\r\n  margin: 0 auto;\r\n  border-color: red;\r\n  background-color: transparent;\r\n`;\r\nconst validEmailRegex = RegExp(\r\n    /^([\\w.%+-]+)@([\\w-]+\\.)+([\\w]{2,})$/i\r\n  );\r\n\r\nconst Payment = (props:any) => {\r\n    const toast: any = useRef();\r\n    const initialFormData = Object.freeze({\r\n         number:'',\r\n         street:'',\r\n         postalcode:'',\r\n         email:'',\r\n         invoiceNumber:0,\r\n         invoiceAmount:0,\r\n         loading:false,\r\n         invoiceModalIsOpen:true,\r\n    });\r\n\r\n    const [formData, setFormData]:any = useState(initialFormData);\r\n\r\n    useEffect(()=> {\r\n        renderPayment();\r\n        console.log(props);\r\n    },[]);\r\n\r\n    const renderPayment = async()=> {\r\n        setFormData({...formData,loading:true});\r\n        try {\r\n            const api = `${baseURL}api/customer/get-payment-token/`;\r\n            let response = await axios.get(api, { headers: {\"Authorization\" : `Bearer ${localStorage.getItem('access_token')}`} });\r\n            setFormData({...formData, token:response.data.token});\r\n            console.log(response);\r\n        \r\n        let authorization = response.data.token;\r\n        //console.log(authorization);\r\n        var form = document.querySelector('#cardForm');\r\n        \r\n        window.braintree.client.create({\r\n            authorization: authorization\r\n        }, (err, clientInstance)=> {\r\n        if(err){\r\n            console.log(err);\r\n            //setFormData({...formData,err:err});\r\n            return;\r\n        }\r\n        createHostedFields(clientInstance, form);\r\n        });\r\n\r\n        const createHostedFields = (clientInstance:any, form:any) => {\r\n        window.braintree.hostedFields.create({\r\n            client: clientInstance,\r\n            styles: {\r\n                'input': {\r\n                'font-size': '16px',\r\n                'font-family': 'courier, monospace',\r\n                'font-weight': 'lighter',\r\n                'color': '#ccc'\r\n                },\r\n                ':focus': {\r\n                'color': 'black'\r\n                },\r\n                '.valid': {\r\n                'color': '#8bdda8'\r\n                }\r\n            },\r\n            fields: {\r\n                number: {\r\n                selector: '#card-number',\r\n                placeholder: '4111 1111 1111 1111'\r\n                },\r\n                cvv: {\r\n                selector: '#cvv',\r\n                placeholder: '123'\r\n                },\r\n                expirationDate: {\r\n                selector: '#expiration-date',\r\n                placeholder: 'MM/YYYY'\r\n                }\r\n            }\r\n            }, hostedFieldsDidCreate);\r\n          }\r\n        }catch(error){\r\n            console.log(\"Error: \", JSON.stringify(error, null, 4));\r\n            throw error;\r\n        }\r\n    }\r\n    function hostedFieldsDidCreate(err:any, hostedFields:any) {\r\n        setFormData({...formData,loading:false});\r\n        let submitBtn = document.getElementById('submit');\r\n        submitBtn?.addEventListener('click', (e)=>submitHandler(e, hostedFields));\r\n        submitBtn?.removeAttribute('disabled');\r\n      }\r\n\r\n      function submitHandler( event:any,hostedFields:any,) {\r\n        event.preventDefault();\r\n        setFormData({...formData,loading:true});\r\n        let submitBtn = document.getElementById('submit');\r\n        submitBtn?.setAttribute('disabled', 'disabled');\r\n        console.log(hostedFields);\r\n        hostedFields.tokenize(function (err:any, payload:any) {\r\n          if (err) {\r\n            setFormData({...formData,loading:false});\r\n            submitBtn?.removeAttribute('disabled');\r\n            console.error('Error',err.message);\r\n            toast.current.show({severity: 'error', detail: err.message})\r\n          } else {\r\n            console.log(payload.nonce);\r\n            if(payload.nonce){\r\n            if(props.invoiceAddress){\r\n                axiosInstance\r\n\t\t\t.post(`api/customer/invoice/payment/${props.loc_no}/`, {\r\n                payment_method_nonce: payload.nonce,\r\n                location: props.invoiceLocation,\r\n                address: props.invoiceAddress,\r\n                amount: props.selectedAmount,\r\n                list_of_invoice: props.selectedProducts\r\n\t\t\t})\r\n\t\t\t.then((res) => {\r\n                setFormData({...formData,loading:false});\r\n                if(res.data.status===202){\r\n                    toast.current.show({severity: 'success', detail: 'Payment successful'});\r\n                    setFormData({...formData, invoiceModalIsOpen:false});\r\n                    props.getItem(formData.invoiceModalIsOpen);\r\n                }else{\r\n                    toast.current.show({severity: 'error', detail: 'Payment Denied'});\r\n                }\r\n                console.log(res);\r\n            }).catch((error)=>{\r\n                setFormData({...formData,loading:false});\r\n                toast.current.show({severity: 'error', detail: 'Server error'});\r\n            })\r\n            }else if(props.invoice){\r\n            axiosInstance\r\n\t\t\t.post(`api/customer/invoice/payment/`, {\r\n                payment_method_nonce: payload.nonce,\r\n                amount: props.amount,\r\n                invoice: props.invoice\r\n\t\t\t})\r\n\t\t\t.then((res) => {\r\n                setFormData({...formData,loading:false});\r\n                if(res.data.status===202){\r\n                    toast.current.show({severity: 'success', detail: 'Payment successful'});\r\n                }else{\r\n                    toast.current.show({severity: 'error', detail: 'Payment Denied'});\r\n                }\r\n                console.log(res);\r\n            }).catch((error)=>{\r\n                setFormData({...formData,loading:false});\r\n                toast.current.show({severity: 'error', detail: 'Server error'});\r\n            })\r\n         }else if(props.invoiceALLLocation){\r\n            axiosInstance\r\n\t\t\t.post(`api/customer/invoice/all/payment/`, {\r\n                payment_method_nonce: payload.nonce,\r\n                location: props.invoiceALLLocation,\r\n                amount: props.selectedAmount,\r\n                list_of_invoice: props.selectedProducts\r\n\t\t\t})\r\n\t\t\t.then((res) => {\r\n                setFormData({...formData,loading:false});\r\n                if(res.data.status===202){\r\n                    toast.current.show({severity: 'success', detail: 'Payment successful'});\r\n                }else{\r\n                    toast.current.show({severity: 'error', detail: 'Payment Denied'});\r\n                }\r\n                console.log(res);\r\n            }).catch((error)=>{\r\n                setFormData({...formData,loading:false});\r\n                toast.current.show({severity: 'error', detail: 'Server error'});\r\n            })\r\n         }else if(props.quote){\r\n            axiosInstance\r\n\t\t\t.post(`api/customer/quote/payment/`, {\r\n                payment_method_nonce: payload.nonce,\r\n                amount: props.amount,\r\n                quote: props.quote\r\n\t\t\t})\r\n\t\t\t.then((res) => {\r\n                setFormData({...formData,loading:false});\r\n                if(res.data.status===202){\r\n                    toast.current.show({severity: 'success', detail: 'Payment successful'});\r\n                }else{\r\n                    toast.current.show({severity: 'error', detail: 'Payment Denied'});\r\n                }\r\n                console.log(res);\r\n            }).catch((error)=>{\r\n                setFormData({...formData,loading:false});\r\n                toast.current.show({severity: 'error', detail: 'Server error'});\r\n            })\r\n        }\r\n        }\r\n          }\r\n        });\r\n      }\r\n\r\n    \r\n\r\n\r\n    const formValidation = () =>{\r\n        let isValid = true;\r\n       /*  let numbers = /[0-9]/g;\r\n        if(formData.cnumber === ''){\r\n            isValid = false;\r\n         }else if(!formData.cnumber.match(numbers)){\r\n            isValid = false ;\r\n        }else if(formData.name === ''){\r\n            isValid = false;\r\n         }else if(formData.expiry === ''){\r\n            isValid = false ;\r\n        }else if(formData.email === ''){\r\n            isValid = false ;\r\n        }else if(!validEmailRegex.test(formData.email)){\r\n            isValid = false ;\r\n        }else if(formData.cvv === ''){\r\n            isValid = false ;\r\n        }else if(!formData.cvv.match(numbers)){\r\n            isValid = false ;\r\n        }else if(formData.number === ''){\r\n            isValid = false ;\r\n        }else if(!formData.number.match(numbers)){\r\n            isValid = false ;\r\n        }else if(formData.street === ''){\r\n            isValid = false ;\r\n        }else if(formData.postalcode === ''){\r\n            isValid = false ;\r\n        } */\r\n        return isValid\r\n    }\r\n    \r\n    return (\r\n        <>\r\n            <div className=\"MuiPaper-root MuiDialog-paper MuiDialog-paperScrollPaper MuiDialog-paperWidthSm MuiPaper-elevation24 MuiPaper-rounded\" >\r\n              <Toast ref={toast} />\r\n                <div className=\"MuiDialogTitle-root\">\r\n                    <h2 className=\"MuiTypography-root MuiTypography-h6\">Pay Invoice</h2>\r\n                </div>\r\n                <div className=\"MuiDialogContent-root\">\r\n                    <p className=\"MuiTypography-root MuiDialogContentText-root MuiTypography-body1 MuiTypography-colorTextSecondary\">\r\n                        Please enter your payment information</p>\r\n                    <div className=\"MuiBox-root jss123\">\r\n                        <div className=\"MuiBox-root jss124\" style={{display: 'flex', flex: '1 1 0px'}}>\r\n                            <div className=\"rccs\">\r\n                                <div className=\"rccs__card rccs__card--unknown\">\r\n                                    <div className=\"rccs__card--front\">\r\n                                        <div className=\"rccs__card__background\"></div>\r\n                                        <div className=\"rccs__issuer\"></div>\r\n                                        <div className=\"rccs__cvc__front\"></div>\r\n                                        <div className=\"rccs__number\">•••• •••• •••• ••••</div>\r\n                                        <div className=\"rccs__name\">YOUR NAME HERE</div>\r\n                                        <div className=\"rccs__expiry\">\r\n                                            <div className=\"rccs__expiry__valid\">valid thru</div>\r\n                                            <div className=\"rccs__expiry__value\">••/••</div>\r\n                                        </div>\r\n                                        <div className=\"rccs__chip\"></div>\r\n                                    </div>\r\n                                    <div className=\"rccs__card--back\">\r\n                                        <div className=\"rccs__card__background\"></div>\r\n                                        <div className=\"rccs__stripe\"></div>\r\n                                        <div className=\"rccs__signature\"></div>\r\n                                        <div className=\"rccs__cvc\"></div>\r\n                                        <div className=\"rccs__issuer\"></div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        \r\n                        <div className=\"MuiBox-root jss125\" style={{display: 'flex', flex: '1 1 0px', paddingLeft: '0.5rem',marginTop:'-3rem'}}>\r\n                        <form action=\"/\" method=\"post\" id=\"cardForm\">\r\n                            <div className=\"col\" style={{padding:'.5rem'}}>\r\n                                <label>Card number:</label>\r\n                                <div id='card-number' className='form-control'></div>\r\n                            </div>\r\n                            <div className=\"col\" style={{padding:'.5rem'}}>\r\n                                <label>Expiry Date:</label>\r\n                            <div id='expiration-date' className='form-control'></div>\r\n                            </div>\r\n                            <div className=\"col\" style={{padding:'.5rem'}}>\r\n                                <label>CVV#</label>\r\n                            <div id='cvv' className='form-control'></div>\r\n\r\n                            </div>\r\n                        \r\n                        </form>\r\n                        <div className='overlay-box1'>\r\n                            <FadeLoader css={override} color={\"rgb(0, 158, 214)\"} loading={formData.loading}  height={30} width={5} radius={2} margin={20} />\r\n                        </div>\r\n                            </div>\r\n                            </div>\r\n                                {/* <div className=\"MuiBox-root jss130\" style={{minWidth: '450px'}}>\r\n                                    \r\n                                        <div className=\"row\" style={{width:'35rem'}}>\r\n                                            <div className=\"col\" style={{padding:'.25rem'}}>\r\n                                            <input type=\"text\" className=\"form-control\" name='number' placeholder=\"Number\" onChange={handleInputChange}/>\r\n                                            </div>\r\n                                            <div className=\"col\" style={{padding:'.25rem'}}>\r\n                                            <input type=\"text\" className=\"form-control\" name='street' placeholder=\"Street\" onChange={handleInputChange}/>\r\n                                            </div>\r\n                                            <div className=\"col\" style={{padding:'.25rem'}}>\r\n                                            <input type=\"text\" className=\"form-control\" name='postalcode' placeholder=\"Postal Code\" onChange={handleInputChange}/>\r\n                                            </div>\r\n                                        </div>\r\n                                        \r\n                                </div>\r\n                                <div className=\"MuiBox-root jss131\" style={{marginLeft:'-1.1rem'}}>\r\n                                      <div className=\"col\" style={{padding:'.5rem'}}>\r\n                                            <input type=\"email\" className=\"form-control\" name='email' placeholder=\"Email\" onChange={handleInputChange}/>\r\n                                      </div>\r\n                                    </div> */}\r\n                </div>         \r\n                      {   formValidation() ? \r\n                          <div style={{textAlign:'center'}}>\r\n                          <button style={{marginLeft:'4.55rem',marginTop:'1rem'}}\r\n                            className=\"btn btn-outline-info\"\r\n                             type=\"submit\" id='submit' ><span className=\"MuiButton-label\"  >Submit Payment</span>\r\n                             </button>\r\n                          </div> : \r\n                          <div style={{textAlign:'center'}}>\r\n                          <button style={{marginLeft:'4.55rem',marginTop:'1rem'}}\r\n                            className=\"btn btn-outline-info\"\r\n                              disabled><span className=\"MuiButton-label\">Submit Payment</span>\r\n                             </button>\r\n                          </div>\r\n                      }\r\n             </div>                \r\n        \r\n        </>\r\n    )\r\n}\r\n\r\nexport default Payment;","C:\\Data\\django\\customer_portal\\frontend\\src\\component\\sidebar\\QuotationDetails.tsx",["214"],"import React from 'react';\r\nimport viewa from '../icons/viewa.svg';\r\nimport axiosInstance from '../../api/api';\r\nimport Modal from 'react-modal';\r\nimport logopay from '../icons/logopay.png';\r\nimport FadeLoader from \"react-spinners/FadeLoader\";\r\nimport { css } from \"@emotion/core\";\r\nimport Payment from './Payement/Payment';\r\nimport cancel from '../icons/cancel.svg';\r\n\r\nconst override = css`\r\n  margin: 0 auto;\r\n  border-color: red;\r\n  background-color: transparent;\r\n  top:35%;\r\n  margin-left: 40rem;\r\n`;\r\ninterface Props {\r\n  invoiceData:any;\r\n  modalIsOpen:any;\r\n  loading : boolean;\r\n  invoicePop : any;\r\n  invoiceTable : any;\r\n  card:any;\r\n  quoteNumber:any;\r\n  quoteAmount:any;\r\n}\r\n\r\nclass QuotationDetails extends React.Component<{locationNo:any,load:any,loadt:any},Props> {\r\n  constructor(props:any){\r\n    super(props);\r\n    this.state ={\r\n      invoiceData:[],\r\n      modalIsOpen : false,\r\n      loading : false,\r\n      invoicePop : [], \r\n      invoiceTable : [],\r\n      card:false,\r\n      quoteNumber:'',\r\n      quoteAmount:'',\r\n\r\n    }\r\n  }\r\n  customStyles = {\r\n    content : {\r\n      top                   : '50%',\r\n      left                  : '50%',\r\n      right                 : 'auto',\r\n      bottom                : 'auto',\r\n      marginRight           : '-20%',\r\n      transform             : 'translate(-50%, -50%)',\r\n      width                 : '46.875rem',\r\n      height                : '37.5rem'\r\n    }\r\n  };\r\n\r\n  fetchedData = async() => {\r\n   // this.setState({loading : true});\r\n   try {\r\n    \r\n     const api = `/api/customer/quotations/list/${this.props.locationNo}/pending/`;\r\n     let response = await axiosInstance.get(api, { headers: {\"Authorization\" : `Bearer ${localStorage.getItem('access_token')}`} });\r\n     this.setState({invoiceData:response.data});\r\n     if(!(this.state.invoiceData === null))\r\n     {\r\n         this.setState({loading : false});\r\n         this.props.load();\r\n     }\r\n }catch(error){\r\n     this.setState({loading : false});\r\n     throw error;\r\n }\r\n  }\r\n\r\n  invoice = async(quote_no:any) => {\r\n    //this.setState({loading : true});\r\n    this.props.loadt();\r\n    try {\r\n    \r\n      const api = `/api/customer/quotations/detail/${this.props.locationNo}/${quote_no}/`;\r\n      let response = await axiosInstance.get(api, { headers: {\"Authorization\" : `Bearer ${localStorage.getItem('access_token')}`} });\r\n      this.setState({invoicePop:response.data,quoteNumber: response.data.quote, quoteAmount:response.data.invoice_total});\r\n      this.setState({invoiceTable : response.data.sales_data});\r\n      if(!(this.state.invoiceData === null))\r\n      {\r\n          this.setState({loading : false});\r\n          this.props.load();\r\n          \r\n      }\r\n  }catch(error){\r\n      this.setState({loading : false});\r\n      this.props.load();\r\n      throw error;\r\n  }\r\n    this.setState({card:false}); \r\n    this.setState({modalIsOpen:true});\r\n  }\r\n\r\n  pay = () =>{\r\n    this.setState({card:true});\r\n  }\r\n\r\n  cancelPay = () =>{\r\n    this.setState({card:false});\r\n  }\r\n\r\n  renderModal = () =>{ \r\n    if(this.state.card){\r\n      return (\r\n        <>\r\n        <div style={{textAlign:'right'}}>\r\n                  <img alt=\"cancel\" style={{width:'1.875rem',cursor:'pointer'}} onClick={this.closeModal} src={cancel}/>\r\n          </div>\r\n        <Payment quote={this.state.quoteNumber} amount={this.state.quoteAmount} />\r\n        <div style={{textAlign:'center'}}>\r\n        <button \r\n          className=\"btn btn-outline-danger\"\r\n          type=\"button\"><span className=\"MuiButton-label\" onClick={this.cancelPay} >Cancel</span><span\r\n              className=\"MuiTouchRipple-root\"></span></button>\r\n          </div>         \r\n                  \r\n        </>\r\n      )\r\n  }else{\r\n    const quote_date  = this.state.invoicePop.quote_date? new Date(this.state.invoicePop.quote_date).toLocaleDateString(): '';\r\n    return(\r\n        <div>\r\n          <div style={{textAlign:'right'}}>\r\n                  <img alt=\"cancel\" style={{width:'1.875rem',cursor:'pointer'}} onClick={this.closeModal} src={cancel}/>\r\n               </div>\r\n          <div className='row'>\r\n            <div className='col-6'>\r\n              <p style={{textAlign:\"left\"}} >\r\n              <span style={{fontSize:\"1.25rem\",fontWeight:500,color:\"#5C5C5C\"}}>Billed To:</span><br></br>\r\n              <span style={{fontSize:\"1.25rem\",fontWeight:500}}>{this.state.invoicePop.name}</span><br></br>\r\n              <p style={{fontSize:\"1.063rem\",fontWeight:500,color:\"#5C5C5C\",width:\"12.625rem\",height:\"3.375rem\"}}>{this.state.invoicePop.address}</p>\r\n              <span style={{fontSize:\"1.25rem\",fontWeight:500}}>Customer# : {this.state.invoicePop.cus_no}</span><br></br>\r\n              </p>\r\n            </div>\r\n            <div className='col-6'>\r\n              <p style={{textAlign:\"right\"}}>\r\n              <span style={{fontSize:\"1.875rem\",fontWeight:500}}>Quote</span><br></br>\r\n             <span style={{fontSize:\"1.25rem\",fontWeight:500}}> #{this.state.invoicePop.quote}</span><br></br>\r\n              <span style={{fontSize:\"1rem\",fontWeight:500}}>{quote_date}</span>\r\n              </p>\r\n            </div>\r\n          </div>\r\n          <table className=\"table\" style={{backgroundColor:\"#fff\"}}>\r\n            <thead style={{ color: \"#fff\",backgroundColor:\"#0D93C9\" }}>\r\n              <tr>\r\n                <th data-visible=\"true\" >Description</th>\r\n                <th>QTY</th>\r\n                <th>Invoice</th>\r\n                <th>Each</th>\r\n                <th style={{textAlign:\"right\"}}>Amount</th>\r\n              </tr>\r\n            </thead>\r\n             <tbody>\r\n            {this.state.invoiceTable.map((item: any,i: any)=>{\r\n                return(\r\n              <tr >\r\n                <td >{item.desc}</td>\r\n                <td>{item.quantity}</td>\r\n                <td>{item.invoice}</td>\r\n                <td>{item.price}</td>\r\n                <td style={{textAlign:\"right\"}}>{item.amount}</td>\r\n              </tr>\r\n                  )})}\r\n            </tbody> \r\n            <tr>\r\n              <td colSpan={5}>\r\n                <div className='row'>\r\n                  <div className='col-6'>\r\n                    <p style={{cursor:\"pointer\",color:\"#009ED6\"}}>Term and Conditions</p>\r\n                  </div>\r\n                  <div className='col-6'>\r\n                    <p style={{textAlign:\"right\"}}>Sub Total : ${this.state.invoicePop.amount}<br></br>\r\n                    GST(2235785) : ${this.state.invoicePop.tax}<br></br>\r\n                    Total : ${this.state.invoicePop.invoice_total}<br></br>\r\n                     <span style={{fontWeight:500}}>Amount owning : ${this.state.invoicePop.invoice_total}</span>\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </td>\r\n            </tr>\r\n            </table>\r\n            <div className='row'>\r\n              <div className='col-6'>\r\n                <img alt=\"viewkeys\" src={logopay} style={{width:'10rem'}}/><br></br>\r\n                 <span>www.calgarylockandsafe.com</span>\r\n              </div>\r\n              {/* <div className='col-6'>\r\n              <button style={{width:\"139px\",height:\"45px\",backgroundColor:\"#009ED6\",float:'right'}} className=\"btn btn-primary\" type=\"submit\" onClick={this.pay}>Pay Invoice</button>\r\n              </div> */}\r\n            </div>\r\n        </div>\r\n    )\r\n                }\r\n  }\r\n\r\n  closeModal = () =>{\r\n    this.setState({modalIsOpen:false});\r\n    this.setState({card:false});\r\n  }\r\n\r\n componentDidMount= async()=>{\r\n   this.fetchedData();\r\n }\r\n\r\n    render() {\r\n      return (\r\n          <>\r\n          <div>\r\n          {\r\n              this.state.loading ? <div className='overlay-box2'>\r\n              <FadeLoader css={override} color={\"rgb(0, 158, 214)\"} loading={this.state.loading}  height={30} width={5} radius={2} margin={20} />\r\n          </div> :''\r\n            }\r\n          <div>\r\n          <Modal style={this.customStyles} isOpen={this.state.modalIsOpen} onRequestClose={this.closeModal}>{this.renderModal()}</Modal>\r\n          <table className=\"table table-striped\" style={{border :'2px solid #12739A'}}>\r\n            <thead>\r\n              <tr>\r\n                <th style={{fontWeight:500}} scope=\"col\">S.No.</th>\r\n                <th style={{fontWeight:500}} scope=\"col\">Quote Number</th>\r\n                <th style={{fontWeight:500}} scope=\"col\">Quote Date</th>\r\n                <th style={{fontWeight:500}} scope=\"col\">Sales Person</th>\r\n                <th style={{fontWeight:500}} scope=\"col\">Amount</th>\r\n                <th style={{fontWeight:500,textAlign:\"right\"}} scope=\"col\">Action</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n            {this.state.invoiceData.map((item: any,i: any)=>{\r\n              let date = new Date(item.quote_date).toLocaleDateString(\"fr-CA\")\r\n                return(\r\n              <tr key={i} >\r\n                <td scope=\"row\">{i+1}</td>\r\n                <td>{item.quote}</td>\r\n                <td>{date}</td>\r\n                <td>{item.sales_person}</td>\r\n                <td>{item.amount}</td>\r\n                <td style={{textAlign:\"right\"}}>\r\n                    <img data-toggle=\"tooltip\" data-placement=\"top\" title=\"View Quote\" alt=\"eye\" style={{marginLeft:\"1rem\",cursor:\"pointer\",width:'1.8rem'}} onClick={()=>this.invoice(item.quote)} src={viewa}/>\r\n                </td>\r\n              </tr>\r\n              )})}\r\n            </tbody>\r\n          </table>\r\n          </div>\r\n          </div>\r\n          </>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default QuotationDetails;  ",{"ruleId":"215","replacedBy":"216"},{"ruleId":"217","replacedBy":"218"},{"ruleId":"219","severity":1,"message":"220","line":6,"column":8,"nodeType":"221","messageId":"222","endLine":6,"endColumn":12},{"ruleId":"219","severity":1,"message":"223","line":9,"column":10,"nodeType":"221","messageId":"222","endLine":9,"endColumn":18},{"ruleId":"219","severity":1,"message":"224","line":3,"column":24,"nodeType":"221","messageId":"222","endLine":3,"endColumn":31},{"ruleId":"225","severity":1,"message":"226","line":51,"column":38,"nodeType":"227","messageId":"228","endLine":51,"endColumn":39,"suggestions":"229"},{"ruleId":"225","severity":1,"message":"230","line":51,"column":41,"nodeType":"227","messageId":"228","endLine":51,"endColumn":42,"suggestions":"231"},{"ruleId":"225","severity":1,"message":"232","line":51,"column":44,"nodeType":"227","messageId":"228","endLine":51,"endColumn":45,"suggestions":"233"},{"ruleId":"219","severity":1,"message":"234","line":52,"column":13,"nodeType":"221","messageId":"222","endLine":52,"endColumn":25},{"ruleId":"235","severity":1,"message":"236","line":49,"column":7,"nodeType":"237","endLine":49,"endColumn":9,"suggestions":"238"},{"ruleId":"219","severity":1,"message":"239","line":65,"column":13,"nodeType":"221","messageId":"222","endLine":65,"endColumn":29},{"ruleId":"219","severity":1,"message":"240","line":66,"column":13,"nodeType":"221","messageId":"222","endLine":66,"endColumn":29},{"ruleId":"219","severity":1,"message":"241","line":67,"column":13,"nodeType":"221","messageId":"222","endLine":67,"endColumn":20},{"ruleId":"219","severity":1,"message":"242","line":68,"column":13,"nodeType":"221","messageId":"222","endLine":68,"endColumn":29},{"ruleId":"225","severity":1,"message":"226","line":68,"column":37,"nodeType":"227","messageId":"228","endLine":68,"endColumn":38,"suggestions":"243"},{"ruleId":"225","severity":1,"message":"230","line":68,"column":40,"nodeType":"227","messageId":"228","endLine":68,"endColumn":41,"suggestions":"244"},{"ruleId":"225","severity":1,"message":"232","line":68,"column":43,"nodeType":"227","messageId":"228","endLine":68,"endColumn":44,"suggestions":"245"},{"ruleId":"225","severity":1,"message":"226","line":44,"column":38,"nodeType":"227","messageId":"228","endLine":44,"endColumn":39,"suggestions":"246"},{"ruleId":"225","severity":1,"message":"230","line":44,"column":41,"nodeType":"227","messageId":"228","endLine":44,"endColumn":42,"suggestions":"247"},{"ruleId":"225","severity":1,"message":"232","line":44,"column":44,"nodeType":"227","messageId":"228","endLine":44,"endColumn":45,"suggestions":"248"},{"ruleId":"219","severity":1,"message":"224","line":3,"column":9,"nodeType":"221","messageId":"222","endLine":3,"endColumn":16},{"ruleId":"235","severity":1,"message":"249","line":77,"column":5,"nodeType":"237","endLine":77,"endColumn":7,"suggestions":"250"},{"ruleId":"219","severity":1,"message":"251","line":82,"column":9,"nodeType":"221","messageId":"222","endLine":82,"endColumn":17},{"ruleId":"252","severity":1,"message":"253","line":155,"column":96,"nodeType":"254","messageId":"255","endLine":155,"endColumn":98},{"ruleId":"252","severity":1,"message":"253","line":155,"column":128,"nodeType":"254","messageId":"255","endLine":155,"endColumn":130},{"ruleId":"252","severity":1,"message":"256","line":171,"column":74,"nodeType":"254","messageId":"255","endLine":171,"endColumn":76},{"ruleId":"219","severity":1,"message":"257","line":25,"column":7,"nodeType":"221","messageId":"222","endLine":25,"endColumn":14},{"ruleId":"235","severity":1,"message":"249","line":199,"column":5,"nodeType":"237","endLine":199,"endColumn":7,"suggestions":"258"},{"ruleId":"219","severity":1,"message":"257","line":25,"column":9,"nodeType":"221","messageId":"222","endLine":25,"endColumn":16},{"ruleId":"235","severity":1,"message":"259","line":80,"column":9,"nodeType":"237","endLine":80,"endColumn":11,"suggestions":"260"},{"ruleId":"219","severity":1,"message":"261","line":12,"column":9,"nodeType":"221","messageId":"222","endLine":12,"endColumn":14},{"ruleId":"219","severity":1,"message":"262","line":15,"column":10,"nodeType":"221","messageId":"222","endLine":15,"endColumn":19},{"ruleId":"219","severity":1,"message":"263","line":16,"column":10,"nodeType":"221","messageId":"222","endLine":16,"endColumn":17},{"ruleId":"252","severity":1,"message":"256","line":219,"column":54,"nodeType":"254","messageId":"255","endLine":219,"endColumn":56},{"ruleId":"219","severity":1,"message":"264","line":3,"column":8,"nodeType":"221","messageId":"222","endLine":3,"endColumn":13},{"ruleId":"219","severity":1,"message":"265","line":4,"column":8,"nodeType":"221","messageId":"222","endLine":4,"endColumn":11},{"ruleId":"219","severity":1,"message":"266","line":5,"column":8,"nodeType":"221","messageId":"222","endLine":5,"endColumn":16},{"ruleId":"219","severity":1,"message":"267","line":6,"column":8,"nodeType":"221","messageId":"222","endLine":6,"endColumn":15},{"ruleId":"219","severity":1,"message":"268","line":7,"column":8,"nodeType":"221","messageId":"222","endLine":7,"endColumn":17},{"ruleId":"219","severity":1,"message":"269","line":8,"column":8,"nodeType":"221","messageId":"222","endLine":8,"endColumn":20},{"ruleId":"219","severity":1,"message":"270","line":9,"column":8,"nodeType":"221","messageId":"222","endLine":9,"endColumn":12},{"ruleId":"219","severity":1,"message":"224","line":11,"column":25,"nodeType":"221","messageId":"222","endLine":11,"endColumn":32},{"ruleId":"219","severity":1,"message":"271","line":19,"column":8,"nodeType":"221","messageId":"222","endLine":19,"endColumn":14},{"ruleId":"219","severity":1,"message":"272","line":20,"column":18,"nodeType":"221","messageId":"222","endLine":20,"endColumn":35},{"ruleId":"252","severity":1,"message":"253","line":340,"column":93,"nodeType":"254","messageId":"255","endLine":340,"endColumn":95},{"ruleId":"252","severity":1,"message":"253","line":340,"column":121,"nodeType":"254","messageId":"255","endLine":340,"endColumn":123},{"ruleId":"252","severity":1,"message":"253","line":340,"column":149,"nodeType":"254","messageId":"255","endLine":340,"endColumn":151},{"ruleId":"252","severity":1,"message":"253","line":340,"column":182,"nodeType":"254","messageId":"255","endLine":340,"endColumn":184},{"ruleId":"252","severity":1,"message":"256","line":388,"column":21,"nodeType":"254","messageId":"255","endLine":388,"endColumn":23},{"ruleId":"273","severity":1,"message":"274","line":394,"column":39,"nodeType":"275","messageId":"276","endLine":394,"endColumn":41},{"ruleId":"273","severity":1,"message":"274","line":387,"column":55,"nodeType":"275","messageId":"276","endLine":387,"endColumn":57},{"ruleId":"273","severity":1,"message":"274","line":397,"column":58,"nodeType":"275","messageId":"276","endLine":397,"endColumn":60},{"ruleId":"219","severity":1,"message":"277","line":8,"column":8,"nodeType":"221","messageId":"222","endLine":8,"endColumn":13},{"ruleId":"219","severity":1,"message":"278","line":9,"column":8,"nodeType":"221","messageId":"222","endLine":9,"endColumn":15},{"ruleId":"219","severity":1,"message":"268","line":2,"column":8,"nodeType":"221","messageId":"222","endLine":2,"endColumn":17},{"ruleId":"219","severity":1,"message":"269","line":3,"column":8,"nodeType":"221","messageId":"222","endLine":3,"endColumn":20},{"ruleId":"219","severity":1,"message":"279","line":6,"column":8,"nodeType":"221","messageId":"222","endLine":6,"endColumn":12},{"ruleId":"219","severity":1,"message":"280","line":7,"column":8,"nodeType":"221","messageId":"222","endLine":7,"endColumn":13},{"ruleId":"219","severity":1,"message":"281","line":12,"column":13,"nodeType":"221","messageId":"222","endLine":12,"endColumn":25},{"ruleId":"219","severity":1,"message":"251","line":65,"column":11,"nodeType":"221","messageId":"222","endLine":65,"endColumn":19},{"ruleId":"219","severity":1,"message":"282","line":16,"column":7,"nodeType":"221","messageId":"222","endLine":16,"endColumn":22},{"ruleId":"235","severity":1,"message":"283","line":38,"column":7,"nodeType":"237","endLine":38,"endColumn":9,"suggestions":"284"},{"ruleId":"285","severity":1,"message":"286","line":237,"column":21,"nodeType":"287","endLine":237,"endColumn":32},"no-native-reassign",["288"],"no-negated-in-lhs",["289"],"@typescript-eslint/no-unused-vars","'lock' is defined but never used.","Identifier","unusedVar","'Redirect' is defined but never used.","'baseURL' is defined but never used.","no-useless-escape","Unnecessary escape character: \\$.","Literal","unnecessaryEscape",["290","291"],"Unnecessary escape character: \\^.",["292","293"],"Unnecessary escape character: \\*.",["294","295"],"'reWhiteSpace' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'formData'. Either include it or remove the dependency array. You can also do a functional update 'setFormData(f => ...)' if you only need 'formData' in the 'setFormData' call.","ArrayExpression",["296"],"'lowerCaseLetters' is assigned a value but never used.","'upperCaseLetters' is assigned a value but never used.","'numbers' is assigned a value but never used.","'specialcharacter' is assigned a value but never used.",["297","298"],["299","300"],["301","302"],["303","304"],["305","306"],["307","308"],"React Hook useEffect has a missing dependency: 'fetchDataAsync'. Either include it or remove the dependency array.",["309"],"'response' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","Expected '===' and instead saw '=='.","'history' is assigned a value but never used.",["310"],"React Hook useEffect has a missing dependency: 'file'. Either include it or remove the dependency array.",["311"],"'jsPDF' is defined but never used.","'autoTable' is defined but never used.","'CSVLink' is defined but never used.","'image' is defined but never used.","'csv' is defined but never used.","'schedule' is defined but never used.","'warning' is defined but never used.","'brokenkey' is defined but never used.","'questionmark' is defined but never used.","'csv1' is defined but never used.","'Select' is defined but never used.","'validateYupSchema' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Modal' is defined but never used.","'logopay' is defined but never used.","'tick' is defined but never used.","'cross' is defined but never used.","'_html2canvas' is defined but never used.","'validEmailRegex' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props' and 'renderPayment'. Either include them or remove the dependency array.",["312"],"jsx-a11y/scope","The scope prop can only be used on <th> elements.","JSXAttribute","no-global-assign","no-unsafe-negation",{"messageId":"313","fix":"314","desc":"315"},{"messageId":"316","fix":"317","desc":"318"},{"messageId":"313","fix":"319","desc":"315"},{"messageId":"316","fix":"320","desc":"318"},{"messageId":"313","fix":"321","desc":"315"},{"messageId":"316","fix":"322","desc":"318"},{"desc":"323","fix":"324"},{"messageId":"313","fix":"325","desc":"315"},{"messageId":"316","fix":"326","desc":"318"},{"messageId":"313","fix":"327","desc":"315"},{"messageId":"316","fix":"328","desc":"318"},{"messageId":"313","fix":"329","desc":"315"},{"messageId":"316","fix":"330","desc":"318"},{"messageId":"313","fix":"331","desc":"315"},{"messageId":"316","fix":"332","desc":"318"},{"messageId":"313","fix":"333","desc":"315"},{"messageId":"316","fix":"334","desc":"318"},{"messageId":"313","fix":"335","desc":"315"},{"messageId":"316","fix":"336","desc":"318"},{"desc":"337","fix":"338"},{"desc":"337","fix":"339"},{"desc":"340","fix":"341"},{"desc":"342","fix":"343"},"removeEscape",{"range":"344","text":"345"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"346","text":"347"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"348","text":"345"},{"range":"349","text":"347"},{"range":"350","text":"345"},{"range":"351","text":"347"},"Update the dependencies array to be: [formData]",{"range":"352","text":"353"},{"range":"354","text":"345"},{"range":"355","text":"347"},{"range":"356","text":"345"},{"range":"357","text":"347"},{"range":"358","text":"345"},{"range":"359","text":"347"},{"range":"360","text":"345"},{"range":"361","text":"347"},{"range":"362","text":"345"},{"range":"363","text":"347"},{"range":"364","text":"345"},{"range":"365","text":"347"},"Update the dependencies array to be: [fetchDataAsync]",{"range":"366","text":"367"},{"range":"368","text":"367"},"Update the dependencies array to be: [file]",{"range":"369","text":"370"},"Update the dependencies array to be: [props, renderPayment]",{"range":"371","text":"372"},[1558,1559],"",[1558,1558],"\\",[1561,1562],[1561,1561],[1564,1565],[1564,1564],[1546,1548],"[formData]",[2154,2155],[2154,2154],[2157,2158],[2157,2157],[2160,2161],[2160,2160],[1367,1368],[1367,1367],[1370,1371],[1370,1370],[1373,1374],[1373,1373],[2624,2626],"[fetchDataAsync]",[6996,6998],[2594,2596],"[file]",[1023,1025],"[props, renderPayment]"]