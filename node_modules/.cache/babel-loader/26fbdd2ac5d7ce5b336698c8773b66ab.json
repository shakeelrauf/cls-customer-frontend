{"ast":null,"code":"import axios from 'axios';\nexport const baseURL = \"http://localhost:3000\";\nconst axiosInstance = axios.create({\n  baseURL: baseURL,\n  timeout: 100000,\n  headers: {\n    Authorization: localStorage.getItem('access_token') ? 'Bearer ' + localStorage.getItem('access_token') : null,\n    'Content-Type': 'application/json',\n    accept: 'application/json'\n  }\n});\naxiosInstance.interceptors.request.use(async config => {\n  const token = localStorage.getItem(\"access_token\");\n  config.headers = {\n    Authorization: token ? `Bearer ${token}` : null,\n    Accept: \"application/json\",\n    \"Content-Type\": \"application/json\"\n  };\n  return config;\n}, error => {\n  Promise.reject(error);\n});\n\nconst refreshAccessToken = async () => {\n  const token = localStorage.getItem(\"refresh_token\");\n  const res = await axiosInstance.post(`${baseURL}/api/token/refresh/`, {\n    refresh: token\n  });\n  return res.data.access;\n};\n\naxiosInstance.interceptors.response.use(response => {\n  return response;\n}, async function (error) {\n  var _error$response;\n\n  const originalRequest = error.config;\n\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401 && !originalRequest._retry) {\n    originalRequest._retry = true;\n    const access_token = await refreshAccessToken();\n    localStorage.setItem(\"access_token\", access_token);\n    axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + access_token;\n    return axiosInstance(originalRequest);\n  }\n\n  return Promise.reject(error);\n});\nexport default axiosInstance;","map":{"version":3,"sources":["/Users/mac/Desktop/customer_portal_cls/frontend/src/api/api.tsx"],"names":["axios","baseURL","axiosInstance","create","timeout","headers","Authorization","localStorage","getItem","accept","interceptors","request","use","config","token","Accept","error","Promise","reject","refreshAccessToken","res","post","refresh","data","access","response","originalRequest","status","_retry","access_token","setItem","defaults","common"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,MAAMC,OAAO,GAAG,uBAAhB;AAIL,MAAMC,aAAa,GAAGF,KAAK,CAACG,MAAN,CAAa;AACjCF,EAAAA,OAAO,EAAEA,OADwB;AAEjCG,EAAAA,OAAO,EAAE,MAFwB;AAGjCC,EAAAA,OAAO,EAAE;AACPC,IAAAA,aAAa,EAAEC,YAAY,CAACC,OAAb,CAAqB,cAArB,IACX,YAAYD,YAAY,CAACC,OAAb,CAAqB,cAArB,CADD,GAEX,IAHG;AAIP,oBAAgB,kBAJT;AAKPC,IAAAA,MAAM,EAAE;AALD;AAHwB,CAAb,CAAtB;AAcAP,aAAa,CAACQ,YAAd,CAA2BC,OAA3B,CAAmCC,GAAnC,CACD,MAAOC,MAAP,IAAkB;AAChB,QAAMC,KAAK,GAAGP,YAAY,CAACC,OAAb,CAAqB,cAArB,CAAd;AACAK,EAAAA,MAAM,CAACR,OAAP,GAAiB;AAClBC,IAAAA,aAAa,EAAEQ,KAAK,GAAI,UAASA,KAAM,EAAnB,GAAuB,IADzB;AAElBC,IAAAA,MAAM,EAAE,kBAFU;AAGlB,oBAAgB;AAHE,GAAjB;AAKA,SAAOF,MAAP;AACD,CATA,EAUAG,KAAD,IAAW;AACTC,EAAAA,OAAO,CAACC,MAAR,CAAeF,KAAf;AACD,CAZA;;AAeA,MAAMG,kBAAkB,GAAG,YAAY;AACxC,QAAML,KAAK,GAAGP,YAAY,CAACC,OAAb,CAAqB,eAArB,CAAd;AACA,QAAMY,GAAG,GAAG,MAAMlB,aAAa,CAACmB,IAAd,CACf,GAAEpB,OAAQ,qBADK,EACiB;AAAEqB,IAAAA,OAAO,EAAER;AAAX,GADjB,CAAlB;AAGA,SAAOM,GAAG,CAACG,IAAJ,CAASC,MAAhB;AACE,CAND;;AAQAtB,aAAa,CAACQ,YAAd,CAA2Be,QAA3B,CAAoCb,GAApC,CACAa,QAAD,IAAc;AACb,SAAOA,QAAP;AACE,CAHF,EAIC,gBAAgBT,KAAhB,EAAuB;AAAA;;AACxB,QAAMU,eAAe,GAAGV,KAAK,CAACH,MAA9B;;AACA,MAAI,oBAAAG,KAAK,CAACS,QAAN,oEAAgBE,MAAhB,MAA2B,GAA3B,IAAkC,CAACD,eAAe,CAACE,MAAvD,EAA+D;AAC7DF,IAAAA,eAAe,CAACE,MAAhB,GAAyB,IAAzB;AACA,UAAMC,YAAY,GAAG,MAAMV,kBAAkB,EAA7C;AACAZ,IAAAA,YAAY,CAACuB,OAAb,CAAqB,cAArB,EAAqCD,YAArC;AACA7B,IAAAA,KAAK,CAAC+B,QAAN,CAAe1B,OAAf,CAAuB2B,MAAvB,CAA8B,eAA9B,IAAiD,YAAYH,YAA7D;AACA,WAAO3B,aAAa,CAACwB,eAAD,CAApB;AACD;;AACD,SAAOT,OAAO,CAACC,MAAR,CAAeF,KAAf,CAAP;AACE,CAdF;AAoBA,eAAed,aAAf","sourcesContent":["import axios from 'axios';\nexport const baseURL = \"http://localhost:3000\";\n\n\n\n  const axiosInstance = axios.create({\n    baseURL: baseURL,\n    timeout: 100000,\n    headers: {\n      Authorization: localStorage.getItem('access_token')\n        ? 'Bearer ' + localStorage.getItem('access_token')\n        : null,\n      'Content-Type': 'application/json',\n      accept: 'application/json',\n    }, \n  });\n\n\n\n  axiosInstance.interceptors.request.use(\n\tasync (config) => {\n\t  const token = localStorage.getItem(\"access_token\")\n\t  config.headers = {\n\t\tAuthorization: token ? `Bearer ${token}` : null,\n\t\tAccept: \"application/json\",\n\t\t\"Content-Type\": \"application/json\",\n\t  };\n\t  return config;\n\t},\n\t(error) => {\n\t  Promise.reject(error);\n\t}\n  );\n\n  const refreshAccessToken = async () => {\n\tconst token = localStorage.getItem(\"refresh_token\");\n\tconst res = await axiosInstance.post(\n\t  `${baseURL}/api/token/refresh/`, { refresh: token }\n\t);\n\treturn res.data.access;\n  };\n\n  axiosInstance.interceptors.response.use(\n\t(response) => {\n\t\treturn response;\n\t  },\n\t  async function (error) {\n\t\tconst originalRequest = error.config;\n\t\tif (error.response?.status === 401 && !originalRequest._retry) {\n\t\t  originalRequest._retry = true;\n\t\t  const access_token = await refreshAccessToken();\n\t\t  localStorage.setItem(\"access_token\", access_token);\n\t\t  axios.defaults.headers.common[\"Authorization\"] = \"Bearer \" + access_token;\n\t\t  return axiosInstance(originalRequest);\n\t\t}\n\t\treturn Promise.reject(error);\n\t  }); \n\n   \n \n\n\n  export default axiosInstance;\n"]},"metadata":{},"sourceType":"module"}